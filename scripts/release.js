// scripts/release.js
import { execSync } from "child_process";

function run(cmd, msg) {
  console.log(`\nüîπ ${msg}`);
  execSync(cmd, { stdio: "inherit" });
}

try {
  console.log("üöÄ Lancement du processus de release compl√®te...\n");

  // 1Ô∏è‚É£ Met √† jour MathALEA
  run("npm run update:mathalea", "Mise √† jour du d√©p√¥t MathALEA");

  // 2Ô∏è‚É£ Sauvegarde du travail en stash
  run('git add .', "Ajout des fichiers modifi√©s");
  run('git stash push -m "Pr√©paration release auto"', "Sauvegarde temporaire du travail");

  // 3Ô∏è‚É£ Passage sur codex-dev
  run("git checkout codex-dev", "Passage sur la branche codex-dev");
  run("git pull origin codex-dev", "Mise √† jour de codex-dev");
  run("git stash pop", "Restauration du stash dans codex-dev");

  // 4Ô∏è‚É£ Commit et push sur codex-dev
  run('git add .', "Ajout des fichiers √† commiter");
  run('git commit -m "chore: release automatique - update MathALEA & build config" || echo "Aucun changement √† valider"', "Commit sur codex-dev");
  run("git push origin codex-dev", "Push vers origin/codex-dev");

  // 5Ô∏è‚É£ Fusion dans main
  run("git checkout main", "Passage sur la branche main");
  run("git pull origin main", "Mise √† jour de main");
  run("git merge codex-dev --no-edit", "Fusion de codex-dev dans main");
  run("git push origin main", "Push vers origin/main");

  // 6Ô∏è‚É£ Build pour GitHub Pages
  run("npm run build", "Build du projet pour GitHub Pages");

  // 7Ô∏è‚É£ D√©ploiement sur gh-pages
  run("git subtree push --prefix dist origin gh-pages", "D√©ploiement sur GitHub Pages");

  console.log("\n‚úÖ Release compl√®te termin√©e avec succ√®s !");
  console.log("üåê Le site sera en ligne sur : https://rodeofly.github.io/kopmaths974/");
} catch (err) {
  console.error("\n‚ùå Erreur pendant le processus :", err.message);
}
