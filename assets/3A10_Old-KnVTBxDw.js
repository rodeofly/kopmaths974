import{am as w,br as I,r as d,b1 as f,S as e,_ as N,aw as _,y as z,a1 as O,l as B}from"./embellissements-BYV7mIDn.js";import{E as G}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const ne="Comprendre le vocabulaire : division euclidienne, diviseurs, multiples",ue="5b60d",$e={"fr-fr":[""],"fr-ch":[""]};class de extends G{constructor(){super(),this.besoinFormulaireNumerique=["Nombres de chiffres de l'entier de la question 5",20],this.besoinFormulaire2Numerique=["Nombre maximum de diviseurs de l'entier de la question 5",20],this.spacing=1,this.spacingCorr=2,this.nbQuestions=5,this.sup=3,this.sup2=10,this.sup3=13,this.correctionDetailleeDisponible=!0,this.correctionDetaillee=!1}nouvelleVersion(){this.sup3=w(2,16,this.sup3,10);const T=w(1,5,this.sup,2),J=w(2,this.sup3,this.sup2,6),V=I([1,2,3,4,5],this.nbQuestions);for(let q=0,n,l,A,m,M,b,x,k,E,D,p,h,r,i,o,P,S,j,u,t,F=0;q<this.nbQuestions&&F<50;){switch(E=V[q],u="",t="",E){case 1:{o=d(2,99);const s={vocabulaire:["reste","dividende","quotient","diviseur"],correction:[`il ne peut pas rester plus de ${o-1}, sinon c'est qu'on peut encore ajouter au moins 1 fois ${o} dans le dividende et donc 1 au quotient.`,"le dividende peut être quelconque, donc on peut le choisir aussi grand que l'on veut.","le quotient dépendra du dividende, donc il sera d'autant plus grand que le dividende l'est.","c'est que le diviseur est fixé, donc le plus grand c'est lui-même !"]},c=d(0,3);u=`Quel est le plus grand ${s.vocabulaire[c]} possible dans une division euclidienne par ${o} ?`,t=`Si on divise par ${o}, `,t+=s.correction[c];break}case 2:o=d(2,99),i=d(1001,99999),P=Math.trunc(i/o),S=i%o,u=`On a ${e(i)}=${e(o)}$\\times$${e(P)} $+$ ${e(S)}`,u+="<br>",u+=`Écrire le quotient et le reste de la division euclidienne de ${e(i)} par ${o}.`,t=`Dans la division euclidienne de ${e(i)} par ${o}, le quotient vaut ${e(P)} et le reste ${S}.`;break;case 3:i=d(101,9999),f(i).length%2===0?k=f(i).length/2+1:k=(f(i).length-1)/2+1,o=f(i)[k-1],r=[o-1,o,o+1],r=z(r),u="Les trois divisions euclidiennes suivantes sont exactes : <br>",u+=`${e(i)} = ${e(r[0])}$\\times$${e(Math.trunc(i/r[0]))} $+$ ${e(i%r[0])}`,u+="<br>",u+=`${e(i)} = ${e(r[1])}$\\times$${e(Math.trunc(i/r[1]))} $+$ ${e(i%r[1])}`,u+="<br>",u+=`${e(i)} = ${e(r[2])}$\\times$${e(Math.trunc(i/r[2]))} $+$ ${e(i%r[2])}`,u+="<br>",u+=`Sans calculer, dire si les nombres ${e(r[0])}; ${e(r[1])}; ${e(r[2])} sont des diviseurs de ${e(i)}. Justifier.`,t="",O(i%r[0],0)?t+=`Le reste de la division euclidienne de ${e(i)} par ${e(r[0])} vaut 0 donc ${e(r[0])} est un diviseur de ${e(i)}.`:t+=`Le reste de la division euclidienne de ${e(i)} par ${e(r[0])} ne vaut pas 0 donc ${e(r[0])} n'est pas un diviseur de ${e(i)}.`,t+="<br>",O(i%r[1],0)?t+=`Le reste de la division euclidienne de ${e(i)} par ${e(r[1])} vaut 0 donc ${e(r[1])} divise ${e(i)}.`:t+=`Le reste de la division euclidienne de ${e(i)} par ${e(r[1])} ne vaut pas 0 donc ${e(r[1])} ne divise pas ${e(i)}.`,t+="<br>",O(i%r[2],0)?t+=`Le reste de la division euclidienne de ${e(i)} par ${e(r[2])} vaut 0 donc ${e(i)} est divisible par ${e(r[2])}.`:t+=`Le reste de la division euclidienne de ${e(i)} par ${e(r[2])} ne vaut pas 0 donc ${e(i)} n'est pas divisible par ${e(r[2])}.`,t+="<br>";break;case 4:{p=[],h=[];let s=[],c=[];s=[d(2,999),d(2,999,[s[0]]),d(2,999,[s[0],s[1]]),d(2,999,[s[0],s[1],s[2]])],c=[d(2,9),d(2,9,[c[0]]),d(2,9,[c[0],c[1]]),d(2,9,[c[0],c[1],c[2]])];const v=[],a=[],g=[];D=[],j=[];for(let $=0;$<4;$++)D[$]=s[$]*c[$],j[$]=D[$]/s[$],v[$]=e(s[$]),a[$]=e(D[$]),g[$]=e(j[$]);p[0]=`${v[0]} $\\ldots\\ldots\\ldots\\ldots$ ${a[0]}`,h[0]=`${v[0]} est un diviseur de ${a[0]} car ${a[0]}=${s[0]}$\\times$${g[0]}.`,p[1]=`${v[1]} $\\ldots\\ldots\\ldots\\ldots$ ${a[1]}`,h[1]=`${v[1]} est un diviseur de ${a[1]} car ${a[1]}=${s[1]}$\\times$${g[1]}.`,p[2]=`${a[2]} $\\ldots\\ldots\\ldots\\ldots$ ${v[2]}`,h[2]=`${a[2]} est un multiple de ${v[2]} car ${a[2]}=${s[2]}$\\times$${g[2]}.`,p[3]=`${a[3]} $\\ldots\\ldots\\ldots\\ldots$ ${v[3]}`,h[3]=`${a[3]} est un multiple de ${v[3]} car ${a[3]}=${s[3]}$\\times$${g[3]}.`,m=d(2,999,[s[0],s[1],s[2],s[3]]);const C=e(m);b=d(2,999,[s[0],s[1],s[2],s[3],m]);const Q=e(b);M=d(2,999,f(m));const L=e(M);x=d(2,999,f(b));const y=e(x);p[4]=`${C} $\\ldots\\ldots\\ldots\\ldots$ ${L}`,h[4]=`${C} n'est ni un multiple, ni un diviseur de ${L} car ${C}=${L}$\\times$${Math.trunc(m/M)}+${N(m%M)} et ${L}=${C}$\\times$${Math.trunc(M/m)}+${N(M%m)}.`,p[5]=`${y} $\\ldots\\ldots\\ldots\\ldots$ ${Q}`,h[5]=`${y} n'est ni un multiple, ni un diviseur de ${Q} car ${Q}=${y}$\\times$${Math.trunc(b/x)}+${N(b%x)} et ${y}=${Q}$\\times$${Math.trunc(x/b)}+${N(x%b)}.`,_(p,h),u=`Après avoir testé avec la calculatrice, compléter chaque phrase avec "est un diviseur de" ou "est un multiple de" ou "n'est ni un diviseur, ni un multiple de".`,u+="<br>",t="";for(let $=0;$<5;$++)u+=p[$],u+="<br>",t+=h[$],t+="<br>";u+=p[5],t+=h[5],t+="<br>";break}case 5:default:do n=d(10**(T-1),10**T-1),l=f(n),A=l.length;while(A>J);if(u=`Écrire la liste de tous les diviseurs de ${n}.`,t=`Pour trouver la liste des diviseurs de ${n}, on cherche tous les produits de deux facteurs qui donnent ${n}, en écrivant toujours le plus petit facteur en premier.<br>`,t+=`Il est suffisant de chercher des diviseurs inférieurs au plus grand nombre dont le carré est inférieur à ${n}, par exemple ici, ${Math.trunc(Math.sqrt(n))}$\\times$${Math.trunc(Math.sqrt(n))} = ${Math.trunc(Math.sqrt(n))*Math.trunc(Math.sqrt(n))}<${n}`,t+=` et ${Math.trunc(Math.sqrt(n))+1}$\\times$${Math.trunc(Math.sqrt(n))+1} = ${(Math.trunc(Math.sqrt(n))+1)*(Math.trunc(Math.sqrt(n))+1)}>${n} donc il suffit d'arrêter la recherche de facteurs à ${Math.trunc(Math.sqrt(n))}.`,this.correctionDetaillee&&(t+="<hr>",t+=`$\\textbf{Preuve du propos précédent}$ <br>
            Supposons que ${n} soit le produit de deux entiers p$\\times$q avec p < q :`,t+=`<br>- si p$\\times$p > ${n}, c'est que q$\\times$q < ${n}, sinon p$\\times$q ne peut être égal à ${n}.<br>
              - mais, dans ce cas, p serait supérieur à q sinon p$\\times$q serait inférieur à ${n} ce qui ne doit pas être le cas.<br>`,t+=`Donc il est bien suffisant d'arrêter la recherche lorsque le carré de p dépasse ${n}.`,t+="<hr>"),t+="<br>",l.length%2===0)for(let s=0;s<l.length/2;s++)t+=""+l[s]+"$\\times$"+l[l.length-s-1]+` = ${n}<br>`;else{for(let s=0;s<(l.length-1)/2;s++)t+=""+l[s]+"$\\times$"+l[l.length-s-1]+` = ${n}<br>`;t+=""+l[(l.length-1)/2]+"$\\times$"+l[(l.length-1)/2]+` = ${n}<br>`}t+=`Chacun des facteurs de la liste ci-dessus est un diviseur de ${n}.<br>`,t+=`La liste des diviseurs de ${n} est donc `,t+="1";for(let s=1;s<l.length;s++)t+=" ; "+l[s];t+=".";break}this.questionJamaisPosee(q,E,u)&&(this.listeQuestions[q]=u,this.listeCorrections[q]=t,q++),F++}B(this)}}export{de as default,$e as refs,ne as titre,ue as uuid};
