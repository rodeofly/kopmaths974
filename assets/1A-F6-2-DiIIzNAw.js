import{c as p}from"./courbes-C9fk0WuH.js";import{r as u}from"./reperes-WwrVcExd.js";import{j as d,y as m,o as l,m as h,u as x,r as s,a as g}from"./embellissements-BYV7mIDn.js";import f from"./ExerciceQcmA-CHnTcRvH.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./ExerciceQcm-DOkcCRBu.js";import"./qcm-BQR8Ns0N.js";import"./lists-i1i4IA1M.js";import"./Exercice-DtXhjCyI.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const Y="35c0e",_={"fr-fr":["1A-F6-2"],"fr-ch":[]},k=!0,z="qcm",B="true",F="qcmMono",U="Retrouver la représentation graphique d'une droite",X="02/08/2025";class j extends f{configRepere={xMin:-3,yMin:-3,yMax:3,xMax:3,xUnite:1,yUnite:1,axeXStyle:"->",axeYStyle:"->",grilleX:!1,grilleY:!1,xThickListe:[0],yThickListe:[0],xLabelListe:[-6],yLabelListe:[-6]};configGraphique={xmin:-3,xmax:5,ymin:-3,ymax:3,pixelsParCm:15,scale:.5};fonctions=[e=>e-1,e=>-e+1,e=>-e-1,e=>e+1];genererElementsCommuns(){const e=u(this.configRepere),r=d("\\text{O}",-.3,-.3,{letterSize:"scriptsize"}),i=m([1,2,3,4]),t=this.fonctions.map(n=>l(this.configGraphique,p(n,{repere:e,color:"blue",epaisseur:2}),r,e));return{r:e,o:r,indice:i,graphiques:t}}genererReponses(e,r,i){const t=r.map((c,o)=>`La droite $D_${e[o]}$ <br>${c}`),n=t[i],a=t.filter((c,o)=>o!==i);return[n,...a]}genererCorrection(e,r,i,t){const n=r>0?">":"<",a=e>0?">":"<",c=r>0?"au-dessus":"en-dessous",o=e>0?"monte":"descend";return`On reconnaît la droite grâce à son ordonnée à l'origine ($${r}${n}0$) et son coefficient directeur ($${e}${a}0$).<br>
    Il s'agit de la droite coupant l'axe des ordonnées ${c} de l'axe des abscisses et qui ${o}.<br>
    Il s'agit de la droite $${h(`D_${i[t]}`)}$.`}obtenirIndexGraphique(e,r){return e>0&&r<0?0:e<0&&r>0?1:e<0&&r<0?2:e>0&&r>0?3:0}genererExercice(e,r){const{indice:i,graphiques:t}=this.genererElementsCommuns(),n=this.obtenirIndexGraphique(e,r);this.enonce=`La seule droite pouvant correspondre à l'équation $y=${x(e,r)}$ est  :`,this.correction=this.genererCorrection(e,r,i,n),this.reponses=this.genererReponses(i,t,n)}versionOriginale=()=>{this.genererExercice(2,-5)};versionAleatoire=()=>{const e=[{a:s(1,10),b:s(1,10),description:"a>0, b>0",graphiqueIndex:3},{a:s(1,10),b:s(-10,-1),description:"a>0, b<0",graphiqueIndex:0},{a:s(-10,-1),b:s(1,10),description:"a<0, b>0",graphiqueIndex:1},{a:s(-10,-1),b:s(-10,-1),description:"a<0, b<0",graphiqueIndex:2}],r=g(e);this.genererExercice(r.a,r.b)};constructor(){super(),this.versionAleatoire()}}export{B as amcReady,F as amcType,X as dateDePublication,j as default,k as interactifReady,z as interactifType,_ as refs,U as titre,Y as uuid};
