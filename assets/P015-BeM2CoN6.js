import{p as r,dB as y,r as E,dC as G}from"./embellissements-BYV7mIDn.js";import{i as M}from"./message-BfjIT6jz.js";import{t as S}from"./style-CcGLZIPY.js";import{E as f}from"./Exercice-DtXhjCyI.js";import{A as F}from"./Alea2iep-C433sqvs.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const Q="14/03/2022",w="Puzzles géométriques avec animation",K={"fr-fr":["P015"],"fr-ch":["NR"]},U="085ed";class V extends f{constructor(){super(),this.besoinFormulaireNumerique=["Type de puzzle",4,`1 : Oeuf magique
 2 : Tangram
 3 : Sam Loyd 
 4 : Sam Loyd bis`],this.besoinFormulaire2CaseACocher=["Animation disponible"],this.nbQuestions=1,this.nbQuestionsModifiable=!1,this.sup=1,this.sup2=!0}nouvelleVersion(){const B=parseInt(this.sup),e=new F;e.translationX=4,e.translationY=20,e.vitesse=50,e.xMax=20,e.yMax=20;let i;i=S("PROGRAMME DE CONSTRUCTION");const A=(o,s)=>{let t;switch(s){case"oiseau":case"tangram":t=E(1,12);break;case"samLoyd":default:t=E(1,5);break}let a=G([`Découper les ${o} pièces délimitées par les lignes rouges.`,"Construire la silhouette proposée."],1.5);return a+=`<img class="ui middle aligned image" src="assets/puzzlesGeom/img/${s}${t}.png"/>`,a},q=o=>{e.taille(600,600),e.image("assets/puzzlesGeom/img/samLoydQuadrillage.png",r(-4,19));let s,t,a,n,c,u,l,g,$,C,m,p,d;switch(o){case"v1":s=r(-2.35,15.7,"A"),t=r(1,17.35,"B"),a=r(6.01,7.35,"C"),n=r(-2.35,7.35,"D"),c=r(-2.35,10.7,"E"),l=r(-2.35,14,"F"),$=r(1,14,"G"),m=r(1,9,"H"),d=r(4.31,10.7,"I");break;case"v2":default:s=r(2.7,17.35,"A"),t=r(6.01,17.35,"B"),a=r(6.01,7.35,"C"),n=r(-.7,10.7,"D"),u=r(-.7,14,"E_1"),g=r(-.7,17.35,"F_1"),C=r(6.01,14,"G_1"),p=r(1,7.35,"H_1"),c=r(.65,13.3,"E"),l=r(2,16,"F"),$=r(4.65,14.7,"G"),m=r(2.7,10.7,"H"),d=r(6.01,10.7,"I");break}e.pointCreer(s,{dx:-.7,dy:.7}),e.pointCreer(t,{dy:.7}),e.pointCreer(a,{dy:-.2}),o==="v1"?e.pointCreer(n,{dy:-.2}):e.pointCreer(n,{dx:-.4,dy:-.2}),o==="v1"&&(e.pointCreer(c,{dx:-.7,dy:.7}),e.pointCreer(l,{dx:-.7,dy:.7}),e.pointCreer($,{dy:.7}),e.pointCreer(m,{dy:.7})),o==="v2"&&(e.pointCreer(u,{dx:-.7,dy:.7}),e.pointCreer(g,{dx:-.7,dy:.8}),e.pointCreer(C,{dx:.2,dy:.7}),e.pointCreer(p,{dx:-.7,dy:.7})),e.pointCreer(d,{dy:.7}),e.regleMasquerGraduations(),e.regleSegment(s,t,{couleur:"red",epaisseur:4}),e.regleSegment(t,a,{couleur:"red",epaisseur:4}),e.regleSegment(a,n,{couleur:"red",epaisseur:4}),e.regleSegment(n,s,{couleur:"red",epaisseur:4}),e.regleSegment(n,d,{couleur:"red",epaisseur:4}),o==="v2"&&(e.regleSegment(g,C,{pointilles:"tiret",couleur:"gray",epaisseur:1}),e.regleSegment(u,d,{pointilles:"tiret",couleur:"gray",epaisseur:1}),e.regleSegment(t,p,{pointilles:"tiret",couleur:"gray",epaisseur:1}),e.regleMasquer(),e.pointCreer(c,{dx:-.7,dy:.7}),e.pointCreer(l,{dx:-.7,dy:.7}),e.pointCreer($,{dx:-.4,dy:.8}),e.pointCreer(m,{dx:-.4,dy:.7}),e.regleMontrer()),e.regleSegment(l,$,{couleur:"red",epaisseur:4}),e.regleSegment(t,m,{couleur:"red",epaisseur:4}),e.regleSegment(c,d,{couleur:"red",epaisseur:4}),e.regleMasquer(),e.crayonMasquer(),o==="v1"&&(i+=y(["Placer les points $A$, $B$, $C$, $D$, $E$, $F$, $G$, $H$ et $I$.","Tracer en rouge les segments $[AB]$, $[BC]$, $[CD]$, $[DA]$, $[FG]$, $[GH]$, $[DI]$, $[EI]$."],1)),o==="v2"&&(i+=y(["Placer les points $A$, $B$, $C$, $D$, $E_1$, $F_1$, $G_1$, $H_1$ et $I$.","Tracer en rouge les segments $[AB]$, $[BC]$, $[CD]$, $[DA]$ et $[DI]$.","Tracer en pointillés, au crayon de papier, les segments $[F_1G_1]$, $[E_1I]$ et $[BH_1]$.","Placer $E$ à l'intersection de $[AD]$ et de $[E_1I]$","Placer $F$ à l'intersection de $[AD]$ et de $[F_1G_1]$","Placer $G$ à l'intersection de $[F_1G_1]$ et de $[BH_1]$","Placer $H$ à l'intersection de $[DI]$ et de $[BH_1]$","Tracer en rouge les segments $[FG]$, $[BH]$ et $[EI]$."],1)),i+=`<img class="ui middle aligned image" src="assets/puzzlesGeom/img/samLoydQuadrillageEtPoints${o}.png"/>`,i+=M({titre:`Sam Loyd ${o} !`,texte:A(5,"samLoyd"),couleur:"nombres"})};switch(B){case 1:{e.taille(1200,1200);const o=r(-3,4),s=r(-2,4,"A"),t=r(5,4,"O"),a=r(13,4),n=r(12,4,"C"),c=r(5,17,"(\\Delta ')"),u=r(5,11,"B"),l=r(5,-3,"D"),g=r(5,-4);e.regleModifierLongueur(),e.regleDroite(o,a,{longueur:16}),e.regleMasquer(),e.crayonMasquer(),e.textePoint("$(\\Delta)$",a),e.pointCreer(t,{dx:.2,dy:-.2}),e.equerreMontrer(t,{}),e.equerreDeplacer(t),e.equerreRotation(180),e.regleMontrer(),e.regleDeplacer(g),e.regleRotation(90),e.equerreMasquer(),e.regleDroite(g,c,{longueur:20}),e.regleMasquer(),e.crayonMasquer(),e.textePoint("$(\\Delta ')$",c),e.compasEcarterAvecRegle(7),e.regleMasquer(),e.compasCercleCentrePoint(t,n),e.compasMasquer(),e.pointCreer(s,{dx:.2,dy:-.2}),e.pointCreer(u,{dx:.2,dy:-.2}),e.pointCreer(n,{dx:.2,dy:-.2}),e.pointCreer(l,{dx:.2,dy:-.2}),e.regleDemiDroiteOriginePoint(s,u,{longueur:16}),e.regleDemiDroiteOriginePoint(n,u,{longueur:16}),e.regleMasquer(),e.compasEcarter2Points(s,n),e.compasTracerArc2Angles(0,45,{couleur:"red",epaisseur:4});const $=r(7.9,13.9,"F");e.pointCreer($,{dx:-.2,dy:-.5}),e.compasEcarter2Points(n,s),e.compasTracerArc2Angles(180,135,{couleur:"red",epaisseur:4});const C=r(2.1,13.9,"E");e.pointCreer(C,{dx:-.2,dy:-.5}),e.compasEcarter2Points(u,$),e.compasTracerArc2Angles(45,135,{couleur:"red",epaisseur:4});const m=r(5,15.1,"H");e.pointCreer(m,{dx:.2,dy:-.5}),e.compasDeplacer(l),e.compasTracerArc2Angles(85,95);const p=r(5,1.1,"G");e.pointCreer(p,{dx:.2,dy:-.2}),e.compasDeplacer(p),e.compasTracerArc2Angles(40,140),e.compasMasquer();const d=r(2.1,4,"L");e.pointCreer(d,{dx:-.2,dy:-.2});const x=r(7.9,4,"K");e.pointCreer(x,{dx:.2,dy:-.2}),e.regleSegment(s,n,{couleur:"red",epaisseur:4}),e.regleSegment(d,p,{couleur:"red",epaisseur:4}),e.regleSegment(p,x,{couleur:"red",epaisseur:4}),e.regleSegment(p,l,{couleur:"red",epaisseur:4}),e.regleSegment(t,m,{couleur:"red",epaisseur:4}),e.regleSegment(s,$,{couleur:"red",epaisseur:4}),e.regleSegment(n,C,{couleur:"red",epaisseur:4}),e.regleMasquer(),e.crayonMasquer(),e.compasDeplacer(t),e.compasEcarter2Points(t,s),e.compasTracerArc2Angles(180,360,{couleur:"red",epaisseur:4}),e.compasMasquer();let D;D="\\overgroup",i+=y(["Tracer deux droites perpendiculaires $(\\Delta)$ et $(\\Delta ')$, elles se coupent en $O$.","Tracer le cercle de centre $O$ et de rayon 7 cm.","Ce cercle coupe $(\\Delta)$ en $A$, à gauche de $O$, et $C$.","Ce cercle coupe $(\\Delta ')$ en $B$, au dessus de $O$, et $D$.","Tracer les demi-droites $[AB)$ et $[CB)$",`Le cercle de centre $A$ et de rayon $AC$ coupe $[AB)$ en $F$, tracer en rouge l'arc $${D}{FC}$.`,`Le cercle de centre $C$ et de rayon $AC$ coupe $[CB)$ en $E$, tracer en rouge l'arc $${D}{EA}$.`,`Tracer en rouge l'arc $${D}{EF}$ de centre $B$ et de rayon $BE$. Il coupe $(\\Delta ')$ en $H$.`,"Le cercle de centre $D$ et de rayon $BE$ coupe le segment $[BD]$ en $G$.","Le cercle de centre $G$ et de rayon $BE$ coupe le segment $[AC]$ en $L$ et $K$.<br> L est à gauche de $O$.","Effacer $[OG]$ et le noms des points.",`Tracer en rouge $[AC]$, $[LG]$, $[GK]$, $[GD]$, $[OH]$, $[AF]$, $[CE]$ et l'arc $${D}{AC}$ de centre $O$ situé sous le point $O$.`],1),i+=M({titre:"Les oiseaux sortent de l'œuf, c'est bien connu !",texte:A(9,"oiseau"),couleur:"nombres"})}break;case 2:{e.taille(1200,1200);const o=r(-2,11,"A"),s=r(12,11,"B"),t=r(12,-3,"C"),a=r(-2,-3,"D");e.regleModifierLongueur(),e.pointCreer(o,{dx:-.8}),e.regleDroite(o,s,{longueur:14}),e.regleMasquer(),e.pointCreer(s),e.equerreMontrer(o,{}),e.equerreDeplacer(o),e.equerreRotation(270),e.regleMontrer(),e.regleDeplacer(o),e.regleRotation(270),e.equerreMasquer(),e.regleDroite(o,a,{longueur:14}),e.regleMasquer(),e.pointCreer(a,{dx:-.8}),e.equerreMontrer(a,{}),e.equerreDeplacer(a),e.equerreRotation(0),e.regleMontrer(),e.regleDeplacer(a),e.regleRotation(0),e.equerreMasquer(),e.regleDroite(a,t,{longueur:14}),e.regleMasquer(),e.pointCreer(t),e.regleMontrer(),e.regleDeplacer(t),e.regleRotation(90),e.regleDroite(t,s,{longueur:14}),e.regleMasquer(),e.regleDroite(a,s);const n=r(1.5,.5,"E"),c=r(5,4,"F"),u=r(8.5,7.5,"G");e.crayonDeplacer(n),e.pointCreer(n,{dx:-.8,dy:.8}),e.crayonDeplacer(c),e.pointCreer(c,{dx:-.8,dy:.2}),e.crayonDeplacer(u),e.pointCreer(u,{dx:-.8,dy:.8});const l=r(5,-3,"H"),g=r(12,4,"J");e.regleMontrer(),e.regleRotation(0),e.crayonMontrer(),e.crayonDeplacer(l),e.regleMasquer(),e.pointCreer(l,{dy:-.2}),e.regleDeplacer(t),e.regleRotation(90),e.regleMontrer(),e.crayonDeplacer(g),e.regleMasquer(),e.pointCreer(g),e.regleDeplacer(l),e.regleRotation(45),e.regleSegment(l,g),e.regleMasquer(),e.regleDeplacer(o),e.regleRotation(-45);const $=r(8.5,.5,"I");e.regleMontrer(),e.crayonMontrer(),e.crayonDeplacer($),e.pointCreer($),e.regleMasquer(),e.regleSegment(o,s,{couleur:"red",epaisseur:4}),e.regleSegment(s,t,{couleur:"red",epaisseur:4}),e.regleSegment(t,a,{couleur:"red",epaisseur:4}),e.regleSegment(a,o,{couleur:"red",epaisseur:4}),e.regleSegment(a,s,{couleur:"red",epaisseur:4}),e.regleSegment(o,$,{couleur:"red",epaisseur:4}),e.regleSegment(l,g,{couleur:"red",epaisseur:4}),e.regleSegment(n,l,{couleur:"red",epaisseur:4}),e.regleSegment(u,$,{couleur:"red",epaisseur:4}),e.regleMasquer(),e.crayonMasquer(),i+=y(["Tracer un carré ABCD de 14 cm de côté.","Placer $E$, $F$ et $G$ sur $[DB]$ tels que $DE=EF=FG=GB$.","Placer $H$ au milieu de $[CD]$.","Placer $J$ au milieu de $[BC]$.","La diagonale $[AC]$ coupe $[HJ]$ en $I$","Tracer en rouge $[AB]$, $[BC]$, $[CD]$, $[DA]$, $[DB]$, $[AI]$, $[HJ]$, $[EH]$, $[GI]$."],1),i+=M({titre:"Toute sorte de personnage peut sortir de ce drôle de carré, c'est bien connu !",texte:A(7,"tangram"),couleur:"nombres"})}break;case 3:q("v1");break;case 4:q("v2");break}this.sup2&&(i+=e.htmlBouton(this.numeroExercice??0,0)),this.contenu=i,this.listeQuestions[0]=this.contenu}}export{Q as dateDePublication,V as default,K as refs,w as titre,U as uuid};
