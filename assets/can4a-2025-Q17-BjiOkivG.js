import{r as n,m as r}from"./embellissements-BYV7mIDn.js";import{s}from"./scratchblock-CPHivmfQ.js";import c from"./ExerciceCan-BGFYQSAT.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./ExerciceSimple-CWWOU0FG.js";import"./Exercice-DtXhjCyI.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const C="Boucle scratch",E=!0,S="mathLive",y="34224",A={"fr-fr":[],"fr-ch":["autres-1"]};class L extends c{enonce(e,t){(e==null||t==null)&&(e=n(2,5),t=n(1,5)*5);let i=`\\begin{scratch}[print,fill,blocks,scale=0.8]
`;i+=`\\blockinit{quand \\greenflag est cliqué}
`,i+=`\\blockrepeat{répéter \\ovalnum{${String(e)}} fois}{`,i+=`\\blockmove{avancer de \\ovalnum{${String(t)}} pas}
`,i+=`\\blocklook{attendre \\ovalnum{1} secondes}
`,i+="}",i+=`\\end{scratch}
`;const o=s(i);this.question="À l'issue de l'exécution de ce programme, de combien de pas le lutin a-t-il avancé ?<br>",this.question+=o||"Problème de rendu",this.correction=`Il y a $${e}$ répétitions de la boucle, et à chaque répétition le lutin avance de $${t}$ pas, donc il avance de $${e}$ fois de $${t}$ pas, soit $${r(e*t)}$ pas.`,this.canEnonce=this.question,this.optionsChampTexte={texteAvant:"<br>Le lutin a avancé de ",texteApres:" pas."},this.canReponseACompleter="$\\ldots$ pas",this.reponse=String(e*t)}nouvelleVersion(){this.canOfficielle?this.enonce(4,20):this.enonce()}}export{L as default,E as interactifReady,S as interactifType,A as refs,C as titre,y as uuid};
