import r from"decimal.js";import{r as n,v as t,f as c,m as x,e as b,w as f,h as D,Y as P}from"./embellissements-BYV7mIDn.js";import{t as q}from"./deprecatedFractions-D2cbyAQf.js";const R=(u={valeursRelatives:!1,divisiblePar:1,type:"ax+b=cx+d"})=>{let s,a,e,i,m;switch(u.type){case"x+b=d":s=new r(1),e=new r(0),a=new r(n(-9,9,[0])).times(u.divisiblePar??1),i=new r(n(-16,15,0)).times(u.divisiblePar??1),u.valeursRelatives||(i=i.abs()),m=i.minus(a);break;case"ax=d":a=new r(0),e=new r(0),u.valeursRelatives?(s=new r(n(-9,9,[0,-1,1])),m=new r(n(-9,9,[-1,0,1]))):(s=new r(n(2,15)),m=new r(n(2,9))),i=s.times(m);break;case"ax+b=0":case"ax+b=d":do e=new r(0),u.type==="ax+b=0"?i=new r(0):i=new r(n(-9,9,[0])).times(u.divisiblePar??1),m=new r(n(-5,5,[0,-1,1])),s=new r(n(-5,5,[-1,0,1])).times(u.divisiblePar??1),u.valeursRelatives||(m=m.abs(),s=s.abs(),i=i.abs()),a=i.minus(s.times(m));while(a.equals(0));break;case"ax+b=cx+d":default:i=new r(n(-15,15,0)).times(u.divisiblePar??1),e=new r(n(-5,5,[-1,0,1])).times(u.divisiblePar??1),u.valeursRelatives?(s=new r(n(-5,5,[-e,-e+1,-e-1,0])).times(u.divisiblePar??1).plus(e),m=new r(n(-9,9,[0,-1,1,-i.div(e.minus(s))]))):(e=e.abs(),s=new r(n(2,5)).times(u.divisiblePar??1).plus(e),m=new r(n(-9,9,[0,-1,1,-i.div(e.minus(s))])).abs()),a=e.minus(s).times(m).plus(i);break}const v=s.equals(0)?a:`${t(s)}x${a.equals(0)?"":c(a)}`,w=e.equals(0)?i:`${t(e)}x${i.equals(0)?"":c(i)}`,g=`${v}=${w}`;let d="",$="";if(!e.equals(0)){e.greaterThan(0)?$+=`On soustrait $${t(e)}x$ aux deux membres.<br>`:$+=`On ajoute $${t(-e)}x$ aux deux membres.<br>`;const l=`$${t(s)}x${c(a)}${x(f(-e)+t(D(e))+"x")}=${b(e)}x${c(i)}${x(f(-e)+t(D(e))+"x")}$<br>
      $${t(s.minus(e))}x${c(a)}=${b(i)}$<br>`;d+=l,$+=l}if(!a.equals(0)){a.greaterThan(0)?$+=`On soustrait $${a}$ aux deux membres.<br>`:$+=`On ajoute $${b(-a)}$ aux deux membres.<br>`;const l=`$${t(s.minus(e))}x${c(a)}${x(c(-a))}=${b(i)}${x(c(-a))}$<br>
      $${t(s.minus(e))}x=${b(i.minus(a))}$<br>`;d+=l,$+=l}if(!s.minus(e).equals(1)){$+=`On divise les deux membres par $${b(s.minus(e))}$.<br>`;const l=`$${t(s.minus(e))}x${x("\\div"+P(s.minus(e)))}=${b(i.minus(a))+x("\\div"+P(s.minus(e)))}$<br>
      $x=${q(b(i.minus(a)),b(s.minus(e)))}=${m}$<br>`;d+=l,$+=l}const o=`La solution est $${x(b(m))}$.`;return d+=o,$+=o,{membreDeGauche:String(v),membreDeDroite:String(w),egalite:g,reponse:m.toNumber(),reponseDecimale:m,correction:d,correctionDetaillee:$,a:s.toNumber(),aDecimal:s,b:a.toNumber(),bDecimal:a,c:e.toNumber(),cDecimal:e,d:i.toNumber(),dDecimal:i}};export{R as e};
