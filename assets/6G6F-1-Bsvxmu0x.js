import{g as ee,aP as te,p as T,r as o,y as F,ag as g,cg as Q,aG as se,ci as D,e as c,aX as C,aI as ie,cR as v,b9 as w,cM as N,bd as k,b8 as ae,aE as re,o as G,D as H,l as oe}from"./embellissements-BYV7mIDn.js";import{A as ne}from"./Alea2iep-C433sqvs.js";import{E as ce}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./index-BUDQz6-w.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"seedrandom";const Me="Construire un triangle particulier et son cercle circonscrit",Ee="01/09/2025",Pe="e0bcb",Ie={"fr-fr":["6G6F-1"],"fr-2016":[],"fr-ch":[]};class Ae extends ce{constructor(){super(),this.nbQuestions=3,this.besoinFormulaireTexte=["types de triangles",`1 : Isocèle
2 : Équilatéral
3 : Rectangle
4 : Mélange`],this.sup="4",this.besoinFormulaire2CaseACocher=["Ne pas montrer de schéma",!0],this.sup2=!1,this.besoinFormulaire3CaseACocher=["longueurs entières",!0],this.sup3=!0,this.consigne="Tracer les triangles suivants, puis construire leur cercle circonscrit."}nouvelleVersion(){let S=[];const K=ee({saisie:this.sup,nbQuestions:this.nbQuestions,min:1,max:3,melange:4,defaut:4,shuffle:!1}).map(Number);for(let m=0,q,j=0;m<this.nbQuestions&&j<50;){let $="",u="";m%5===0&&(S=["PQD"]);const n=new ne,M=[],d=[];u="Voici la construction qu'il fallait réaliser.<br>";const B=te(4,S);S.push(B);let t=[];for(let a=0;a<3;a++)t.push(B[a]);let l=[];const s=T(0,0,"A","left");let e,i,h,L,y;switch(K[m]){case 1:{const a=this.seed==="myriade"?5:this.sup3?o(3,6):o(30,60)/10,r=this.seed==="myriade"?3:this.sup3?o(2,Math.max(2,Math.floor(2*a-1))):o(20,Math.max(20,Math.floor(2*a-1)*10))/10;t=this.seed==="myriade"?["A","B","C"]:F(t),i=T(r,0,t[2],"right");const b=g(s,a),E=g(i,a);e=Q(b,E,t[1],1),e.positionLabel="above",[s,e,i].forEach((A,z)=>A.nom=t[z]),l.push(w("||","black",s,e,i,e),D(`${c(a,1)}\\text{ cm}`,s,e,{letterSize:"scriptsize"}),D(`${c(r,1)}\\text{ cm}`,i,s,{letterSize:"scriptsize"})),$+=`Le triangle $${t[0]}${t[1]}${t[2]}$ isocèle en ${t[1]} tel que $${t[0]}${t[1]}=${c(a,1)}\\text{ cm}$ et $${t[0]}${t[2]}=${c(r,1)}\\text{ cm}$.<br>`,h=a,y=r,L=a,u+="Pour cette construction, nous avons utilisé la règle graduée et le compas.<br>";const[P,I,f]=this.seed==="myriade"?n.triangleIsocele2Longueurs("ABC",h,y):n.triangleIsocele2Longueurs(`${t[0]}${t[2]}${t[1]}`,h,y);n.cercleCirconscrit(P,I,f),q="";const x=C(s,e,i),p=C(s,e,i);M.push(p[0],p[1],l),d.push(x[0],x[1],l,v(s,e,20,"green"),v(i,e,20,"green")),Math.min(s.x-1,e.x-1),Math.min(s.y-1,e.y-1),Math.max(s.x+1,e.x+1),Math.max(s.y+1,e.y+1)}break;case 2:{const a=this.seed==="myriade"?5:this.sup3?o(3,7):o(30,70)/10;t=this.seed==="myriade"?["D","E","F"]:F(t),i=T(a,0,t[2],"right");const r=g(s,a),b=g(i,a);e=Q(r,b,t[1],1),e.positionLabel="above",[s,e,i].forEach((p,A)=>p.nom=t[A]),l.push(w("||","black",s,e,i,e,s,i),D(`${c(a,1)}\\text{ cm}`,s,e,{letterSize:"scriptsize"})),$+=`Le triangle $${t[0]}${t[1]}${t[2]}$ équilatéral et tel que $${t[0]}${t[1]}=${c(a,1)}\\text{ cm}$.<br>`,h=a,y=a,L=a,u+="Pour cette construction, nous avons utilisé la règle graduée et le compas.<br>";const[E,P,I]=this.seed==="myriade"?n.triangleEquilateral("DEF",h):n.triangleEquilateral(`${t[0]}${t[1]}${t[2]}`,h);n.cercleCirconscrit(E,P,I),q="";const f=C(s,e,i),x=C(s,e,i);M.push(x[0],x[1],l),d.push(f[0],f[1],l,v(s,e,20,"green"),v(i,e,20,"green")),Math.min(s.x-1,e.x-1),Math.min(s.y-1,e.y-1),Math.max(s.x+1,e.x+1),Math.max(s.y+1,e.y+1)}break;case 3:default:{const a=this.seed==="myriade"?4:this.sup3?o(3,6):o(30,60)/10,r=this.seed==="myriade"?6:this.sup3?o(a+1,8):o((a+1)*10,80)/10,b=Math.sqrt(r**2-a**2);t=this.seed==="myriade"?["I","J","K"]:F(t),e=T(-a,0,t[1],"right");const E=g(s,b),P=g(e,r);i=Q(E,P,t[1],1),i.positionLabel="above",[s,e,i].forEach((Z,_)=>Z.nom=t[_]),l.push(se(i,s,e),D(`${c(a,1)}\\text{ cm}`,s,e,{letterSize:"scriptsize"}),D(`${c(r,1)}\\text{ cm}`,e,i,{letterSize:"scriptsize"})),$+=`Le triangle $${t[0]}${t[1]}${t[2]}$ rectangle en ${t[0]} tel que $${t[0]}${t[1]}=${c(a,1)}\\text{ cm}$ et $${t[1]}${t[2]}=${c(r,1)}\\text{ cm}$.<br>`,h=a,y=b,L=r,u+="Pour cette construction, nous avons utilisé la règle graduée, le compas et l'équerre.";const[I,f,x]=this.seed==="myriade"?n.triangleRectangleCoteHypotenuse("JIK",a,r):n.triangleRectangleCoteHypotenuse(`${t[1]}${t[0]}${t[2]}`,a,r);n.cercleCirconscrit(I,f,x),q="";const p=C(s,e,i),A=T(i.x+o(-3,3)/10,i.y+o(-3,3)/10,i.nom,i.positionLabel),z=C(s,e,A);M.push(z[0],z[1],l),d.push(ie(s,i),p[0],p[1],l,v(e,i,20,"green")),Math.min(s.x-1,e.x-1),Math.min(s.y-1,e.y-1),Math.max(s.x+1,e.x+1),Math.max(s.y+1,e.y+1)}break}t.push(B[3]);const V=N(s,e,"red","o"),U=N(e,i,"blue","x"),X=N(i,s,"green","//"),R=k(s,e,"","red"),J=k(e,i,"","blue"),W=k(i,s,"","green"),O=ae(R,J),Y=g(O,re(s,O),"orange");d.push(V,U,X,R,J,W,Y),Math.min(s.x-1,e.x-1,i.x-2),Math.min(s.y-1,e.y-1,i.y-2),Math.max(s.x+1,e.x+1,i.x+2),Math.max(s.y+1,e.y+1,i.y+2),this.sup2||($+="Le triangle ci-dessous a été réalisé à main levée.<br>"),this.sup2||($+=""+G(Object.assign({mainlevee:!0,amplitude:.3,scale:.6,pixelsParCm:30},H(M,{rymin:0,rymax:0,rxmin:-.5,rxmax:.5})),M)),u+=""+G(Object.assign({pixelsParCm:30},H(d)),d),u+=q,u+=n.htmlBouton(this.numeroExercice??0,m),this.questionJamaisPosee(m,h,String(L),y)&&(this.listeQuestions[m]=$,this.listeCorrections[m]=u,m++),j++}oe(this)}}export{Ee as dateDePublication,Ae as default,Ie as refs,Me as titre,Pe as uuid};
