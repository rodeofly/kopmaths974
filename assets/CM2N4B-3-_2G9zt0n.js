import{g as h,af as d,ay as L,r as c,d as m,y as a,l as k}from"./embellissements-BYV7mIDn.js";import{E as g}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const F='Jouer au "compte est bon" original',J="bd6ff",N={"fr-fr":["CM2N4B-3"],"fr-2016":["CM021"],"fr-ch":[]};class V extends g{constructor(){super(),this.besoinFormulaireTexte=["Niveaux de difficultés nombres de 1 à 3 séparés par des tirets :",`1: Avec 10 et 100
2 : Avec 10 et de quoi faire facilement 100
3 : Avec des calculs imbriqués
4 : Mélange`],this.consigne="Trouver le résultat en utilisant les quatre opérations et les nombres du tirage (une seule fois).",this.nbQuestions=5,this.nbCols=2,this.nbColsCorr=2,this.sup=1}nouvelleVersion(){let e,s,t,$,i,o;const f=h({saisie:this.sup,max:3,defaut:4,melange:4,nbQuestions:this.nbQuestions}),u=d(L(5),this.nbQuestions);for(let n=0,b,r,l=0;n<this.nbQuestions&&l<50;){switch(f[n]){case 1:switch(e=c(2,9),s=c(2,8,e),t=c(1,9,[e,s]),$=c(1,9,[e,s,t]),u[n]){case 1:i=m(e*100+s*10+t+$),o=a([100,10,e,s,t,$]),r=`Le compte est bon : $${i}=100\\times${e}+10\\times${s}+${t}+${$}$`;break;case 2:i=m(e*100+s*10+t-$),o=a([100,10,e,s,t,$]),r=`Le compte est bon : $${i}=100\\times${e}+10\\times${s}+${t}-${$}$`;break;case 3:i=m(e*100-s*10+t+$),o=a([100,10,e,s,t,$]),r=`Le compte est bon : $${i}=100\\times${e}-10\\times${s}+${t}+${$}$`;break;case 4:i=m(e*100-s*10+t-$),o=a([100,10,e,s,t,$]),r=`Le compte est bon : $${i}=100\\times${e}-10\\times${s}+${t}-${$}$`;break;default:i=m(e*100+(s+t)*10+$),o=a([100,10,e,s,t,$]),r=`Le compte est bon : $${i}=100\\times${e}+10\\times(${s}+${t})+${$}$`}break;case 2:switch(e=c(3,9),s=c(3,8,e),t=c(3,9,[e,s]),u[n]){case 1:i=m(e*100+s*10+t),o=a([50,50,10,e,s,t]),r=`Le compte est bon : $${i}=(50+50)\\times${e}+10\\times${s}+${t}$`;break;case 2:i=m(e*100+s*10-t),o=a([50,50,10,e,s,t]),r=`Le compte est bon : $${i}=(50+50)\\times${e}+10\\times${s}-${t}$`;break;case 3:i=m(e*100-s*10+t),o=a([50,50,10,e,s,t]),r=`Le compte est bon : $${i}=(50+50)\\times${e}-10\\times${s}+${t}$`;break;case 4:i=m(e*100-s*10-t),o=a([50,2,10,e,s,t]),r=`Le compte est bon : $${i}=2\\times50\\times${e}-10\\times${s}-${t}$`;break;default:i=m(e*100+s*10-t),o=a([25,4,10,e,s,t]),r=`Le compte est bon : $${i}=4\\times25\\times${e}+10\\times${s}-${t}$`}break;case 3:switch(e=c(2,5),s=c(3,8,e),t=c(3,9,[e,s]),u[n]){case 1:i=m(e*(100+s*10)+t),o=a([50,2,10,e,s,t]),r=`Le compte est bon : $${i}=${e}\\times(50\\times2+10\\times${s})+${t}$`;break;case 2:i=m(e*(100+s*10)-t),o=a([50,2,10,e,s,t]),r=`Le compte est bon : $${i}=${e}\\times(50\\times2+10\\times${s})-${t}$`;break;case 3:i=m(e*(100+s*10)+t),o=a([25,4,10,e,s,t]),r=`Le compte est bon : $${i}=${e}\\times(25\\times4+10\\times${s})+${t}$`;break;case 4:i=m(e*(100+s*10)-t),o=a([25,4,10,e,s,t]),r=`Le compte est bon : $${i}=${e}\\times(25\\times4+10\\times${s})-${t}$`;break;default:i=m(e*(100+s*10)+t),o=a([25,75,10,e,s,t]),r=`Le compte est bon : $${i}=${e}\\times((25+75)+10\\times${s})+${t}$`}break}b="Voici le tirage : ";for(let p=0;p<5;p++)b+=`${o[p]} ; `;b+=`${o[5]}.<br>`,b+=`Et le nombre à trouver est : ${i}.`,this.questionJamaisPosee(n,u[n],e,s,t)&&(this.listeQuestions[n]=b,this.listeCorrections[n]=r,n++),l++}k(this)}}export{V as default,N as refs,F as titre,J as uuid};
