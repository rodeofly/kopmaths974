import{E as f,K as h}from"./Exercice-DtXhjCyI.js";import{a as c,r as n,_ as d,e as x,l as v}from"./embellissements-BYV7mIDn.js";import{p as C}from"./qcm-BQR8Ns0N.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"decimal.js";import"earcut";import"roughjs";const q="Déterminer si un nombre est pair (V/F)",g=!0,K="qcm",P=!0,V="qcmMono",w="20/11/2021",z="d0287",F={"fr-fr":["canc3C05"],"fr-ch":[]};class S extends f{constructor(){super(),this.nbQuestions=1,this.formatChampTexte=h.clavierNumbers}nouvelleVersion(){for(let p=0,$,r,m,o,e,i,a,s,t,u=0;p<this.nbQuestions&&u<50;){switch(c([1,2,3,4,5])){case 1:$=n(10,20)*10,r=n(0,9),m=n(30,60)*10,o=n(1,9),e=$+r,i=m+o,a=e+i,s=`Le nombre $${e}+${i}$ est-il pair ?`,this.canEnonce=s,t=`$${e}$ est un nombre ${e%2===0?"pair":"impair"} car il a $${r}$ comme chiffre des unités.<br>`,t+=`$${i}$ est un nombre ${i%2===0?"pair":"impair"} car il a $${o}$ comme chiffre des unités.<br>`,t+=`La somme ${e%2===0&&i%2===0?"de deux nombres pairs":e%2===1&&i%2===1?"de deux nombres impairs":"d'un nombre impair et d'un nombre pair"} est ${a%2===0?"paire":"impaire"}.<br>`,t+=d(`Mentalement on peut ajouter seulement les chiffres des unités des deux nombres : $${r}+${o}=${r+o}$`),t+=`<br>Donc le nombre $${e}+${i}$ est ${a%2===0?"pair":"impair"}.`;break;case 2:$=n(10,20)*10,r=n(1,9),m=n(10,20)*10,o=n(1,4)*2+1,c([!0,!1])?(e=$+r,i=m+o):(i=$+r,e=m+o),a=e*i,s=`Le nombre $${e}\\times ${i}$ est-il pair ?`,this.canEnonce=s,t=`$${e}\\times ${i}$ est un nombre ${a%2===0?"pair":"impair"}.<br>En effet, son chiffre des unités s'obtient en multipliant le chiffre des unités de ${e} et celui de ${i}.<br>`,t+=`Donc le chiffre des unités de $${e} \\times ${i}$ est celui de $${e%10}\\times ${i%10}=${r*o}$ soit $${a%10}$.<br>`;break;case 3:$=c([n(101,109)*4,n(111,119)*4,n(121,129)*4]),r=c([0,2]),e=$+r,a=e>>1,s=`Le nombre $${e}\\div 2$ est-il pair ?`,this.canEnonce=s,t=`On va retirer le plus grand multiple de 20 possible de $${e}$ :<br>`,t+=`Dans ${e} il va $${Math.floor(e/20)}\\times 20=${e-e%20}$ et il reste ${e%20}.<br>`,t+=`Si on divise $${e%20}$ par $2$ on trouve $${x(e%20/2)}$ qui est un nombre ${a%2===0?"pair":"impair"}.<br>`,t+=`Or, $${e}\\div 2= (${e-e%20} + ${e%20})\\div 2 =${e-e%20>>1} + ${e%20>>1}=${e>>1}$.<br>`,t+=`Donc le nombre $${e}\\div 2$ est ${a%2===0?"pair":"impair"}.`;break;case 4:$=n(10,20)*10,r=n(0,9),m=n(30,60)*10,o=n(1,9),e=$+r,i=m+o,a=i-e,s=`Le nombre $${i}-${e}$ est-il pair ?`,this.canEnonce=s,t=`$${i}$ est un nombre ${i%2===0?"pair":"impair"} car il a $${o}$ comme chiffre des unités.<br>`,t+=`$${e}$ est un nombre ${e%2===0?"pair":"impair"} car il a $${r}$ comme chiffre des unités.<br>`,t+=`La différence ${e%2===0&&i%2===0?"de deux nombres pairs":e%2===1&&i%2===1?"de deux nombres impairs":"d'un nombre impair et d'un nombre pair"} est ${a%2===0?"paire":"impaire"}.<br>`,t+=d(`Mentalement on peut soustraire les chiffres des unités des deux nombres ${o<r?"(en empruntant une dizaine à $"+i+"$) ":""} : $${o<r?o+10:o} - ${r}=${a%10}$`),t+=`<br>Donc le nombre $${i}-${e}$ est ${a%2===0?"pair":"impair"}.`;break;case 5:default:$=n(3,7),r=$%2===0?n(1,4)*2+1:n(2,9),a=r,s=`Le nombre $${r}`;for(let b=1;b<$;b++)s+=`\\times ${r}`;s+="$ est-il pair ?",this.canEnonce=s,r%2===0?(t=`$${r}$ est un nombre pair. Le produit de deux nombres pairs est un nombre pair.<br>`,t+="Ainsi, les multiplications successives donnent toujours un résultat pair.<br>",t+=`Donc ${s.replace("L","l").replace("est-il","est").replace("?","")}.`):(t=`$${r}$ est un nombre impair. Le produit de deux nombres impairs est un nombre impair.<br>`,t+="Ainsi, les multiplications successives donnent toujours un résultat impair.<br>",t+=`Donc ${s.replace("L","l").replace("est-il","est").replace("?","").replace("pair","impair")}.`);break}this.autoCorrection[p]={enonce:s,propositions:[{texte:"Oui",statut:a%2===0},{texte:"Non",statut:a%2===1}],options:{ordered:!0,radio:!0}};const l=C(this,p);s+=l.texte,this.listeQuestions.indexOf(s)===-1&&(this.listeQuestions[p]=s,this.listeCorrections[p]=t,p++),this.canReponseACompleter=l.texte,this.listeCanEnonces.push(this.canEnonce),this.listeCanReponsesACompleter.push(this.canReponseACompleter),u++}v(this)}}export{P as amcReady,V as amcType,w as dateDePublication,S as default,g as interactifReady,K as interactifType,F as refs,q as titre,z as uuid};
