import{am as o,l as a}from"./embellissements-BYV7mIDn.js";import m from"./_Shikaku-BIcCXk3E.js";import{E as c}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./reperes-WwrVcExd.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const N="Générateur de Shikaku",P={"fr-fr":["P019"],"fr-ch":[]},E="6fb13";class F extends c{constructor(){super(),this.consigne=`Paver la grille à l'aide de rectangles.<br>
  Chaque rectangle doit contenir un nombre et un seul.<br>
  Le nombre contenu dans un rectangle indique combien de cases le constituent.`,this.besoinFormulaireNumerique=["Largeur",30],this.besoinFormulaire2Numerique=["Hauteur",30],this.sup=12,this.sup2=5,this.nbQuestions=3}nouvelleVersion(){const n=o(4,30,this.sup,12),u=o(4,30,this.sup2,5);for(let e=0,t,r,i,s=0;e<this.nbQuestions&&s<50;)t=new m(n,u),r=`${t.represente("")}`,i=t.represente("solution"),this.questionJamaisPosee(e,JSON.stringify(t.pavage.rectangles))&&(this.listeQuestions[e]=r,this.listeCorrections[e]=i,e++),s++;a(this)}}export{F as default,P as refs,N as titre,E as uuid};
