import{S as y}from"./main-Vl0czKSA.js";import{r as m,c as $,a as f,b as G,d as k,e as O,f as V}from"./exerciseMethods-CtbYPwln.js";import{w as x}from"./apigeomZoom-DfTEdDkY.js";import{f as P}from"./figureApigeom-Da_B6AP0.js";import{c as A}from"./aleatoires-BLhzzHLc.js";import{g as D,r as C,y as M}from"./embellissements-BYV7mIDn.js";import{E as T}from"./Exercice-DtXhjCyI.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"./generalStore-C3E9FHtR.js";import"./canStore-DaSrd7sp.js";import"./dateEtHoraires-yqKtvK1K.js";import"decimal.js";import"earcut";import"roughjs";const z="Construire des symétriques de figures par rapport à un point",J="28/09/2024",W=!0,Z="custom",ee="d37ea",se={"fr-fr":["5G11-20"],"fr-ch":["9ES6-28","10ES2-15"]};function w(b){const[i,h]=[b[0].x,b[0].y],[e,n]=[b[1].x,b[1].y],[r,d]=[b[2].x,b[2].y];if(i**2+h**2<16||i**2+h**2>25||(e-i)**2+(n-h)**2>40||(e-i)**2+(n-h)**2<16||.5*Math.abs(i*(n-d)+e*(d-h)+r*(h-n))<8)return!1;for(const u of b)if(u.y<-8||u.y>8)return!1;return!0}class ie extends T{antecedents;labels;centres;typesDeQuestions;nbPoints;exoCustomResultat;figuresApiGeom;constructor(){super(),this.exoCustomResultat=!0,this.nbQuestions=6,this.spacing=1,this.spacingCorr=1,this.besoinFormulaireNumerique=["Type d'aide",4,`Quadrillages
Demi-droites en pointillés
Marques de compas
Aucune`],this.besoinFormulaire2Texte=["Type de figures",`1 : Segment
2 : Droite
3 : Demi-droite
4 : Cercle
5 : Triangle
6 : Mélange`],this.sup=1,this.sup2="6"}nouvelleVersion(){const i=["//","o","||"],h=["red","green","purple","blue","gray"];this.answers={},this.figuresApiGeom=[],this.antecedents=[],this.labels=[],this.centres=[],this.typesDeQuestions=[],this.nbPoints=[],this.typesDeQuestions=D({nbQuestions:this.nbQuestions,saisie:this.sup2,min:1,max:5,melange:6,defaut:6,listeOfCase:["segment","droite","demidroite","cercle","triangle"]});for(let e=0,n=0;e<this.nbQuestions&&n<20;){let r=[];do{r=[];for(let s=-8;s<8;s+=1)s!==0&&r.push({y:(C(2,8)+1)*(-1)**s,x:s});r=M(r)}while(!w(r));r=r.slice(0,3),this.labels[e]=Array.from(A(r.length,"Q",!0));const d=A(1,this.labels[e].join("")+"Q",!0)[0];let u=`Construire par symétrie de centre $${d}$, l'image `;const g={};switch(this.sup===1&&Object.assign(g,{snapGrid:!0,dx:1,dy:1}),this.figuresApiGeom[e]=new y(Object.assign(g,{xMin:-10,yMin:-10,width:300,height:300,scale:.5})),this.figuresApiGeom[e].options.latexHeight=20,this.figuresApiGeom[e].options.labelDxInPixels=20,this.figuresApiGeom[e].options.labelDyInPixels=20,this.figuresApiGeom[e].setToolbar({tools:["DRAG","POINT","NAME_POINT","POINT_ON","POINT_INTERSECTION","CIRCLE_CENTER_POINT","RAY","LINE","SEGMENT","POLYGON","UNDO","REDO","REMOVE"],position:"top"}),this.centres[e]=this.figuresApiGeom[e].create("Point",{x:0,y:0,isVisible:!0,isSelectable:!0,label:d}),this.antecedents[e]=r.map((s,c)=>this.figuresApiGeom[e].create("Point",{x:s.x,y:s.y,isVisible:!0,isSelectable:!0,label:this.labels[e][c]})),this.typesDeQuestions[e]){case"segment":this.nbPoints[e]=2,u+=`du segment $[${this.labels[e][0]}${this.labels[e][1]}]$.`,this.figuresApiGeom[e].create("Segment",{point1:this.antecedents[e][0],point2:this.antecedents[e][1],isVisible:!0});break;case"droite":this.nbPoints[e]=2,u+=`de la droite $(${this.labels[e][0]}${this.labels[e][1]})$.`,this.figuresApiGeom[e].create("Line",{point1:this.antecedents[e][0],point2:this.antecedents[e][1],isVisible:!0});break;case"demidroite":this.nbPoints[e]=2,u+=`de la demi-droite $(${this.labels[e][0]}${this.labels[e][1]})$.`,this.figuresApiGeom[e].create("Ray",{point1:this.antecedents[e][0],point2:this.antecedents[e][1],isVisible:!0});break;case"cercle":this.nbPoints[e]=2,u+=`du cercle de centre $${this.labels[e][0]}$ passant par $${this.labels[e][1]}$.`,this.figuresApiGeom[e].create("CircleCenterPoint",{center:this.antecedents[e][0],point:this.antecedents[e][1],isVisible:!0});break;case"triangle":this.nbPoints[e]=3,u+=`du triangle $${this.labels[e][0]}${this.labels[e][1]}${this.labels[e][2]}$.`,this.figuresApiGeom[e].create("Polygon",{points:[this.antecedents[e][0],this.antecedents[e][1],this.antecedents[e][2]],isVisible:!0});break;default:throw new Error("Type de question inconnu")}if(this.antecedents[e][0].isVisible=!0,this.antecedents[e][1].isVisible=!0,this.typesDeQuestions[e]!=="triangle"&&(this.antecedents[e][2].isVisible=!1),this.sup===1&&this.figuresApiGeom[e].create("Grid",{xMin:-10,yMin:-10,xMax:10,yMax:10,stepX:1,stepY:1,color:"gray",axeX:!1,axeY:!1,labelX:!1,labelY:!1}),this.sup===2)for(let s=0;s<this.nbPoints[e];s++)this.figuresApiGeom[e].create("Ray",{point1:this.antecedents[e][s],point2:this.centres[e],isDashed:!0,color:"gray"});if(this.sup===3)for(let s=0;s<this.nbPoints[e];s++)this.figuresApiGeom[e].create("CircleCenterPoint",{center:this.figuresApiGeom[e].create("Point",{isVisible:!1,x:this.centres[e].x,y:this.centres[e].y}),point:this.antecedents[e][s],isDashed:!0,color:"gray"});this.interactif?this.listeQuestions[e]=u+"<br>"+P({exercice:this,figure:this.figuresApiGeom[e],i:e,isDynamic:!0,defaultAction:"NAME_POINT"}):this.listeQuestions[e]=u+"<br>"+x(this.figuresApiGeom[e]);const a=new y(Object.assign(g,{xMin:-10,yMin:-10,width:300,height:300,scale:.5,isDynamic:!1}));a.setToolbar({tools:["UNDO"],position:"top"}),a.options.latexHeight=20;const o=[],l=a.create("Point",{x:0,y:0,isVisible:!0,isSelectable:!1,label:this.centres[e].label}),t=this.antecedents[e].map((s,c)=>a.create("Point",{x:s.x,y:s.y,isVisible:!0,isSelectable:!1,label:this.labels[e][c]}));this.typesDeQuestions[e]!=="triangle"&&(t[2].isVisible=!1);for(let s=0;s<(this.typesDeQuestions[e]==="triangle"?3:2);s++)o[s]=t[s].rotate(l,180,{label:this.antecedents[e][s].label+"'"}),a.create("Segment",{point1:t[s],point2:o[s],isDashed:!0,color:"gray"}),a.create("MarkBetweenPoints",{point1:o[s],point2:l,text:i[s],fontSize:"10px",color:h[s]}),a.create("MarkBetweenPoints",{point2:t[s],point1:l,text:i[s],fontSize:"10px",color:h[s]});if(this.sup===1&&a.create("Grid",{xMin:-10,yMin:-10,xMax:10,yMax:10,stepX:1,stepY:1,color:"gray",axeX:!1,axeY:!1,labelX:!1,labelY:!1}),this.sup===2)for(let s=0;s<this.nbPoints[e];s++)a.create("Ray",{point1:this.antecedents[e][s],point2:this.centres[e],isDashed:!0,color:"gray"});if(this.sup===3)for(let s=0;s<this.nbPoints[e];s++)a.create("CircleCenterPoint",{center:this.figuresApiGeom[e].create("Point",{isVisible:!1,x:this.centres[e].x,y:this.centres[e].y}),point:this.antecedents[e][s],isDashed:!0,color:"gray"});switch(this.typesDeQuestions[e]){case"segment":a.create("Segment",{point1:o[0],point2:o[1],color:"orange",isVisible:!0}),a.create("Segment",{point1:t[0],point2:t[1],color:"black",isVisible:!0});break;case"droite":a.create("Line",{point1:o[0],point2:o[1],color:"orange",isVisible:!0}),a.create("Line",{point1:t[0],point2:t[1],color:"black",isVisible:!0});break;case"demidroite":a.create("Ray",{point1:o[0],point2:o[1],color:"orange",isVisible:!0}),a.create("Ray",{point1:t[0],point2:t[1],color:"black",isVisible:!0});break;case"cercle":a.create("CircleCenterPoint",{center:o[0],point:o[1],color:"orange",isVisible:!0}),a.create("CircleCenterPoint",{center:t[0],point:t[1],color:"black",isVisible:!0});break;case"triangle":a.create("Polygon",{points:[o[0],o[1],o[2]],color:"orange",isVisible:!0}),a.create("Polygon",{points:[t[0],t[1],t[2]],color:"black",isVisible:!0});break;default:throw new Error("Type de question inconnu")}this.questionJamaisPosee(e,this.typesDeQuestions[e],this.labels.join(""),d)&&(this.listeCorrections[e]=x(a),e++),n++}}correctionInteractive=i=>{this.answers===void 0&&(this.answers={}),this.answers[this.figuresApiGeom[i].id]=this.figuresApiGeom[i].json;const h=document.querySelector(`#feedbackEx${this.numeroExercice}Q${i}`),e=this.typesDeQuestions[i],n=m(this.antecedents[i][0],this.centres[i],180),r=m(this.antecedents[i][1],this.centres[i],180),d=m(this.antecedents[i][2],this.centres[i],180),[u,g,a]=[this.antecedents[i][0].label,this.antecedents[i][1].label,this.antecedents[i][2].label];let o,l,t,s;const c=["KO","KO"],p=[];switch(e){case"segment":o=V({figure:this.figuresApiGeom[i],point1:n,point2:r}).isValid,o&&(c[0]="OK"),l=f({figure:this.figuresApiGeom[i],x:n.x,y:n.y,checkOnlyAbscissa:!1}).isValid,t=f({figure:this.figuresApiGeom[i],x:r.x,y:r.y,checkOnlyAbscissa:!1}).isValid,l||p.push(`L'image du point $${u}$ n'est pas correcte.`),t||p.push(`L'image du point $${g}$ n'est pas correcte.`),l&&t&&(c[1]="OK");break;case"droite":o=O({figure:this.figuresApiGeom[i],point1:n,point2:r}).isValid,o&&(c[0]="OK"),l=f({figure:this.figuresApiGeom[i],x:n.x,y:n.y,checkOnlyAbscissa:!1}).isValid,t=f({figure:this.figuresApiGeom[i],x:r.x,y:r.y,checkOnlyAbscissa:!1}).isValid,l||p.push(`L'image du point $${u}$ n'est pas correcte.`),t||p.push(`L'image du point $${g}$ n'est pas correcte.`),l&&t&&(c[1]="OK");break;case"demidroite":o=k({figure:this.figuresApiGeom[i],point1:n,point2:r}).isValid,o&&(c[0]="OK"),l=f({figure:this.figuresApiGeom[i],x:n.x,y:n.y,checkOnlyAbscissa:!1}).isValid,t=f({figure:this.figuresApiGeom[i],x:r.x,y:r.y,checkOnlyAbscissa:!1}).isValid,l&&t&&(c[2]="OK"),l||p.push(`L'image du point $${u}$ n'est pas correcte.`),t||p.push(`L'image du point $${g}$ n'est pas correcte.`);break;case"cercle":o=G({figure:this.figuresApiGeom[i],center:n,radius:Math.sqrt((r.x-n.x)**2+(r.y-n.y)**2)}).isValid,o&&(c[0]="OK"),l=f({figure:this.figuresApiGeom[i],x:n.x,y:n.y,checkOnlyAbscissa:!1}).isValid,t=f({figure:this.figuresApiGeom[i],x:r.x,y:r.y,checkOnlyAbscissa:!1}).isValid,l&&t&&(c[1]="OK"),l||p.push(`L'image du point $${u}$ n'est pas correcte.`),t||p.push(`L'image du point $${g}$ n'est pas correcte.`);break;case"triangle":o=$({figure:this.figuresApiGeom[i],points:[n,r,d]}).isValid,o&&(c[0]="OK"),l=f({figure:this.figuresApiGeom[i],x:n.x,y:n.y,checkOnlyAbscissa:!1}).isValid,t=f({figure:this.figuresApiGeom[i],x:r.x,y:r.y,checkOnlyAbscissa:!1}).isValid,s=f({figure:this.figuresApiGeom[i],x:d.x,y:d.y,checkOnlyAbscissa:!1}).isValid,l||p.push(`L'image du point $${u}$ n'est pas correcte.`),t||p.push(`L'image du point $${g}$ n'est pas correcte.`),s||p.push(`L'image du point $${a}$ n'est pas correcte.`),l&&t&&s&&(c[1]="OK");break;default:throw new Error("Type de question inconnu")}return c[0]==="OK"&&c[1]==="OK"?(h&&(h.innerHTML="Bravo !<br/>2/2"),this.figuresApiGeom[i].isDynamic=!1,this.figuresApiGeom[i].divButtons.style.display="none",this.figuresApiGeom[i].divUserMessage.style.display="none",c):(h&&c.includes("OK")&&p.push("1/2"),h&&!c.includes("OK")&&p.push("0/2"),p.length&&(h.innerHTML=p.join("<br/>")),this.figuresApiGeom[i].isDynamic=!1,this.figuresApiGeom[i].divButtons.style.display="none",this.figuresApiGeom[i].divUserMessage.style.display="none",c)}}export{J as dateDePublication,ie as default,W as interactifReady,Z as interactifType,se as refs,z as titre,ee as uuid};
