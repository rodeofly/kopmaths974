import{h as g}from"./gestionInteractif-DujZpSu8.js";import{a as B}from"./questionMathLive-DdRvWqlN.js";import{g as Q,a as x,r as b,e as m,bG as v,b2 as D,af as y,m as C}from"./embellissements-BYV7mIDn.js";import{g as P}from"./Personne-DRrbQFAY.js";import{S as M}from"./SchemaEnBoite-ByW1TtFb.js";import{E as A}from"./Exercice-DtXhjCyI.js";import"decimal.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./index-BUDQz6-w.js";import"mathjs";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"seedrandom";import"katex";import"earcut";import"roughjs";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"./AjouteTableauMathlive-Bz24QHd3.js";const xe="Modéliser des problèmes niveau 2",fe=!0,ze="mathLive",he="3/06/2025",Me="4e89c",Pe={"fr-fr":["6N4A-2"],"fr-2016":["6C35-1"],"fr-ch":[]},j=[[{nomPluriel:"tee-shirts",nom:"un tee-shirt",prixMini:7,prixMaxi:15},{nomPluriel:"paires de baskets",nom:"une paire de baskets",prixMini:70,prixMaxi:130},{nomPluriel:"shorts",nom:"un short",prixMini:10,prixMaxi:25}],[{nomPluriel:"livres",nom:"un livre",prixMini:5,prixMaxi:20},{nomPluriel:"cahiers",nom:"un cahier",prixMini:2,prixMaxi:5},{nomPluriel:"stylos",nom:"un stylo",prixMini:1,prixMaxi:5}],[{nomPluriel:"jeux vidéo",nom:"un jeu vidéo",prixMini:20,prixMaxi:60},{nomPluriel:"consoles de jeu",nom:"une console de jeu",prixMini:200,prixMaxi:400},{nomPluriel:"casques audio",nom:"un casque audio",prixMini:30,prixMaxi:100}],[{nomPluriel:"vélos",nom:"un vélo",prixMini:100,prixMaxi:300},{nomPluriel:"casques de vélo",nom:"un casque de vélo",prixMini:10,prixMaxi:30},{nomPluriel:"pompes à vélo",nom:"une pompe à vélo",prixMini:5,prixMaxi:15}],[{nomPluriel:"sacs à dos",nom:"un sac à dos",prixMini:15,prixMaxi:50},{nomPluriel:"trousses",nom:"une trousse",prixMini:5,prixMaxi:15},{nomPluriel:"ordinateurs portables",nom:"un ordinateur portable",prixMini:300,prixMaxi:1e3}],[{nomPluriel:"smartphones",nom:"un smartphone",prixMini:200,prixMaxi:800},{nomPluriel:"tablettes",nom:"une tablette",prixMini:150,prixMaxi:600},{nomPluriel:"montres connectées",nom:"une montre connectée",prixMini:50,prixMaxi:300}]],N=[{nom:"paquets de gâteaux",nomPart:"gâteaux",partsMaxParObjet:10,partsMinParObjet:4,multiplicateurParts:1},{nom:"sacs de billes",nomPart:"billes",partsMaxParObjet:5,partsMinParObjet:1,multiplicateurParts:10},{nom:"boîtes de chocolats",nomPart:"chocolats",partsMaxParObjet:8,partsMinParObjet:2,multiplicateurParts:5},{nom:"sachets de bonbons",nomPart:"bonbons",partsMaxParObjet:12,partsMinParObjet:5,multiplicateurParts:2}],O=($=!1,f="schéma",z=!1)=>{const s=x(j),a=s.map(c=>b(c.prixMini,c.prixMaxi)+(z?Number(Math.random().toFixed(1))+x([.05,0]):0)),i=a.reduce((c,d)=>c+d,0),e=x(P),n=e.prenom,o=e.pronom,p=`${n} achète ${s[0].nom} à zone0 €, ${s[1].nom} à zone1 € et ${s[2].nom} à zone2 €. Combien a-t-${o} dépensé au total ?<br><br>
    Réponse : ${n} a dépensé au total : $${m(a[0],2)}+${m(a[1],2)}+${m(a[2],2)}=$ zone3 €.`,r=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:p,barre:r,reponses:[a[0],a[1],a[2],i]}},T=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=b(2,15)*100,n=e*15,o=e*5,p=e+n+o,r=`${a} participe à un triathlon. Il nage zone0 m, fait du vélo sur zone1 m et court sur zone2 m. Quelle distance totale a-t-${i} parcourue ?<br><br>
      Réponse : ${a} a parcouru au total : $${m(e,0)}+${m(n,0)}+${m(o,0)} = $ zone3 m.`,c=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:r,barre:c,reponses:[e,n,o,p]}},R=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=b(5,25)*50,n=b(5,25,Math.round(e/100))*50,o=b(5,25,[e/100,n/100].map(Math.round))*50,p=e+n+o,r=`${a} effectue à vélo une étape de montagne du tour de France. ${v(i)} grimpe trois cols qui ont les dénivelés suivants : zone0 m pour le premier col, zone1 m pour le deuxième et zone2 m pour le dernier. Quelle dénivelé cumulé a-t-${i} grimpé ?<br><br>
      Réponse : ${a} a grimpé au total en m : $${m(e,0)}+${m(n,0)}+${m(o)}=$ zone3.`,c=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:r,barre:c,reponses:[e,n,o,p]}},E=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=b(10,15)*300,n=b(10,15,Math.round(e/300))*300,o=b(10,15,[e/300,n/300].map(Math.round))*100,p=e+n+o,r=`${a} part en randonnée. ${v(i)} marche zone0 m avant sa première halte, puis zone1 m avant le repas de midi et enfin zone2 m. Quelle distance totale a-t-${i} parcourue ?<br><br>
      Réponse : ${a} a parcouru au total : $${m(e,0)}+${m(n,0)}+${m(o,0)}=$ zone3 m.`,c=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:r,barre:c,reponses:[e,n,o,p]}},I=($=!1,f="schéma",z=!1)=>{const s=x(j),a=s.map(d=>b(d.prixMini,d.prixMaxi)+(z?Number(Math.random().toFixed(1))+x([.05,0]):0)),i=a.reduce((d,t)=>d+t,0),e=a[0]+a[1],n=x(P),o=n.prenom,p=n.pronom,r=`${o} achète ${s[0].nom} à zone0 €, ${s[1].nom} à zone1 € et ${s[2].nom}. ${v(p)} a payé en tout zone3 €. Combien coûte ${s[2].nom} ?<br><br>
    Réponse :<br>
    - Calcul de la somme dépensée pour ${s[0].nom} et ${s[1].nom} en € : $${m(a[0],2)}+${m(a[1],2)}=${m(e,2)}$<br>
    - Prix ${s[2].nom.replace("une","de la").replace("un","du")} en € : $${m(i,2)}-${m(e,2)}=$ zone2.`,c=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:r,barre:c,reponses:[a[0],a[1],a[2],i],type:"parties-tout"}},q=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=b(2,15)*100,n=e*15,o=e*5,p=e+n+o,r=e+o,c=`${a} participe à un triathlon. Il nage zone0 m, fait ensuite du vélo et ensuite court sur zone2 m. ${v(i)} a parcouru en tout zone3 m. Quelle distance a-t-${i} parcourue à vélo ?<br><br>
      Réponse :<br>
      - Calcul de la distance parcourue en nage et en course à pied en m : $${m(e,0)}+${m(o,0)}=${m(r,0)}$<br>
      - Distance parcourue à vélo en m : $${m(p,0)}-${m(r,0)}=$ zone1.`,d=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:c,barre:d,reponses:[e,n,o,p]}},F=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=b(5,25)*50,n=b(5,25,Math.round(e/100))*50,o=b(5,25,[e/100,n/100].map(Math.round))*50,p=e+n+o,r=`${a} effectue à vélo une étape de montagne du tour de France. ${v(i)} grimpe trois cols qui ont les dénivelés suivants : zone0 m pour le premier col et zone2 m pour le dernier. ${v(i)} a grimpé au total zone3 m. Combien de mètres a-t-${i} grimpé lors de l'ascension du deuxième col ?<br><br>
      Réponse : ${a} a grimpé zone1 m au deuxième col.`,c=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:r,barre:c,reponses:[e,n,o,p]}},S=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=b(10,15)*300,n=b(10,15,Math.round(e/300))*300,o=b(10,15,[e/300,n/300].map(Math.round))*100,p=e+n+o,r=e+n,c=`${a} part en randonnée. ${v(i)} marche zone0 m avant sa première halte, ${i} marche encore un peu avant le repas de midi et repart ensuite pour éffectuer zone2 m. ${v(i)} a parcouru au total zone3 m. Quelle distance a-t-${i} parcourue entre sa halte matinale et le repas de midi ?<br><br>
         Réponse :<br>
      - Calcul de la distance parcourue le matin en m : $${m(e,0)}+${m(n,0)}=${m(r,0)}$<br>
      - Distance parcourue l'après-midi en m : $${m(p,0)}-${m(r,0)}=$ zone2.`,d=M.additionPartiesTout("zone3",2,["zone0","zone1","zone2"]);return{enonce:c,barre:d,reponses:[e,n,o,p]}},k=($=!1,f="schéma",z=!1)=>{const s=x(N),a=x(P),i=a.prenom,e=a.pronom;let n,o,p,r,c;do n=b(4,9),o=b(s.partsMinParObjet,s.partsMaxParObjet)*s.multiplicateurParts,p=D(n,[],!1),r=Math.floor(p*o/n),c=p*o-n*r;while(c===0||p===o||p===r||o===r||r===n||p===n||o===n);const d=`${i} a zone0 ${s.nom} chacun contenant zone1 ${s.nomPart}. Quand ${e} les distribue à ses amis, chacun en a zone2 et il en reste ${c}. Combien a-t-${e} d'amis ?<br><br>
    Réponse :<br>
    - Calcul du nombre de ${s.nomPart} total : $${p} \\times ${o} = ${p*o}$.<br>
    - Calcul du nombre de ${s.nomPart} partagés : $${p*o}-${c}=${n*r}$.<br>
    - Nombre d'amis : $${n*r} \\div ${r} = ${n}$.<br>
    ${i} a zone3 amis.`,t=M.multiplicationPuisDivisionAvecReste("zone0","zone1","zone2","zone3",c,0);return{enonce:d,barre:t,reponses:[p,o,r,n]}},J=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom;let e,n,o,p,r,c;do e=x([30,60,90,120]),n=b(5,8),o=e*n,p=x([55,65,85]),r=Math.floor(o/p),c=o%p;while(c===0||r<2);const d=`${a} veut réviser avant un examen. ${v(i)} dispose de zone0 jours de révision et décide de travailler zone1 minutes chaque jour. Chaque thème à réviser demande zone2 minutes de révisions et il restera ${c} minutes à la fin pour faire un bilan de ses révisions. Combien de thèmes a-t-${i} à réviser ?<br><br>
    Réponse :<br>
    - Calcul du temps de révision total : $${n} \\times ${e} = ${o}$ minutes.<br>
    - Calcul du temps hors bilan : $${o}-${c}=${o-c}$.<br>
    - Nombre de thèmes révisés :  $${o-c}\\div ${p}=${r}$.<br>
    ${a} a zone3 thèmes à réviser.`,t=M.multiplicationPuisDivisionAvecReste("zone0","zone1","zone2","zone3",c,0);return{enonce:d,barre:t,reponses:[n,e,p,r]}},L=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom;let e,n,o,p,r;const c=x(["cookies","muffins","madeleines","cupcakes","gâteaux"]);do e=b(4,9),n=b(3,5)*2,o=D(n,[],!1),r=Math.floor(e*n/o),p=e*n-r*o;while(p===0||e===n||e===o||e===r||n===o||n===r||o===r);const d=`${a} prépare des ${c}. ${v(i)} utilise zone0 moules, chacun pouvant contenir zone1 parts. Quand ${i} les
 range dans des assiettes, chaque assiette contient zone2 parts et il en reste ${p}. Combien d'assiettes a-t-${i} prévues ?<br><br>
  Réponse :<br>
  - Calcul du nombre de ${c} total : $${e} \\times ${n} = ${e*n}$.<br>
  - Calcul de nombres de ${c} disposés sur les assiettes : $${e*n}-${p}=${r*o}$.<br>
  - Nombre d'assiettes : $${r*o} \\div ${o} = ${r}$.<br>
  ${a} a prévu zone3 assiettes.`,t=M.multiplicationPuisDivisionAvecReste("zone0","zone1","zone2","zone3",p,0);return{enonce:d,barre:t,reponses:[e,n,o,r]}},w=($=!1,f="schéma",z=!1)=>{const s=x(P),a=s.prenom,i=s.pronom,e=x(j),n=b(e[0].prixMini,e[0].prixMaxi)+(z?Number(Math.random().toFixed(1))+x([.05,0]):0),o=b(e[1].prixMini,e[1].prixMaxi)+(z?Number(Math.random().toFixed(1))+x([.05,0]):0),[p,r]=n<o?[e[0],n]:[e[1],o],[c,d]=n<o?[e[1],o]:[e[0],n],t=Math.round((n+o)*b(5,8)/10),l=`${v(p.nom)} coûte zone0 € et ${c.nom} coûte zone1 €. ${a} a zone2 €. Combien ${a} doit-${i} avoir en plus pour acheter ces deux objets ?<br><br>
  Réponse :<br>
  - Calcul du prix total en € : $${m(r,2)}+${m(d,2)}=${m(r+d)}$.<br>
  - Calcul de la différence en € : $${m(r+d)}-${t}=${r+d-t}$.<br>
  ${a} doit avoir zone3 € de plus pour acheter ces deux objets.`,u=M.additionPartiesToutComparaison2("zone0","zone1","zone2","zone3"),h=[r,d,t,Math.max(0,r+d-t)];return{enonce:l,barre:u,reponses:h}};function V($,f,z=0,s){const a=$.interactif;let{enonce:i,barre:e,reponses:n}=s(a,f),o=z;const p=y(["e","s"],4);for(let t=0;t<=3;t++)if(f==="schéma")i=i.replace(`zone${t}`,`$${m(n[t],2)}$`);else if(f==="énoncé"){for(const l of e.lignes){const u=l.barres.findIndex(h=>h.content.includes(`zone${t}`));u!==-1&&(l.barres[u].content=l.barres[u].content.replace(`zone${t}`,`$${m(n[t],2)}$`))}if(e.topBraces!=null){const l=e.topBraces.findIndex(u=>u.text.includes(`zone${t}`));l!==-1&&(e.topBraces[l].text=e.topBraces[l].text.replace(`zone${t}`,`$${m(n[t],2)}$`))}if(e.bottomBraces!=null){const l=e.bottomBraces.findIndex(u=>u.text.includes(`zone${t}`));l!==-1&&(e.bottomBraces[l].text=e.bottomBraces[l].text.replace(`zone${t}`,`$${m(n[t],2)}$`))}}else if(p[t]==="e")i=i.replace(`zone${t}`,`$${m(n[t],2)}$`);else{for(const l of e.lignes){const u=l.barres.findIndex(h=>h.content.includes(`zone${t}`));u!==-1&&(l.barres[u].content=l.barres[u].content.replace(`zone${t}`,`$${m(n[t],2)}$`))}if(e.topBraces!=null){const l=e.topBraces.findIndex(u=>u.text.includes(`zone${t}`));l!==-1&&(e.topBraces[l].text=e.topBraces[l].text.replace(`zone${t}`,`$${m(n[t],2)}$`))}if(e.bottomBraces!=null){const l=e.bottomBraces.findIndex(u=>u.text.includes(`zone${t}`));l!==-1&&(e.bottomBraces[l].text=e.bottomBraces[l].text.replace(`zone${t}`,`$${m(n[t],2)}$`))}}let r=i;const c=new M({topBraces:e.topBraces?JSON.parse(JSON.stringify(e.topBraces)):void 0,bottomBraces:e.bottomBraces?JSON.parse(JSON.stringify(e.bottomBraces)):void 0,lignes:JSON.parse(JSON.stringify(e.lignes))});for(let t=0;t<4;t++){if(r.includes(`zone${t}`)&&(r=r.replaceAll(`zone${t}`,`$${C(m(n[t],2))}$`)),c.topBraces!=null){const l=c.topBraces.findIndex(u=>u.text.includes(`zone${t}`));l!==-1&&(c.topBraces[l].text=c.topBraces[l].text.replace(`zone${t}`,`$${C(m(n[t],2))}$`))}if(c.bottomBraces!=null){const l=c.bottomBraces.findIndex(u=>u.text.includes(`zone${t}`));l!==-1&&(c.bottomBraces[l].text=c.bottomBraces[l].text.replace(`zone${t}`,`$${C(m(n[t],2))}$`))}for(const l of c.lignes){const u=l.barres.findIndex(h=>h.content.includes(`zone${t}`));u!==-1&&(l.barres[u].content=l.barres[u].content.replace(`zone${t}`,`$${C(m(n[t],2))}$`))}}r=f==="schéma"?`Le problème :<br><br>${r}<br><br>
  se modélise par le schéma suivant :<br><br>
${c.display()}`:f==="énoncé"?`Le schéma : <br><br>${c.display()}<br>
correspond à l'énoncé ci-dessous :<br><br>
${r}`:`Voici l'énoncé et le schéma correspondant :<br><br>
${r}<br><br>
${c.display()}`;for(let t=0;t<4;t++)i.includes(`zone${t}`)&&(a&&$!=null?(i=i.replaceAll(`zone${t}`,B($,o,"schemaEnBoite")),g($,o,{reponse:{value:m(n[t],2),options:{noFeedback:!0}}}),o++):(i=i.replace(`zone${t}`,"$\\ldots$"),o++));for(let t=0;t<4;t++){if(e.topBraces!=null){const l=e.topBraces.filter(u=>u.text.includes(`zone${t}`));l.length>0&&(a&&$!=null?(l.forEach(u=>{u.text=u.text.replace(`zone${t}`,B($,o,"schemaEnBoite")),g($,o,{reponse:{value:m(n[t],2),options:{noFeedback:!0}}})}),o++):(l.forEach(u=>{u.text=u.text.replace(`zone${t}`,"\\ldots")}),o++))}if(e.bottomBraces!=null){const l=e.bottomBraces.filter(u=>u.text.includes(`zone${t}`));l.length>0&&(a&&$!=null?(l.forEach(u=>{u.text=u.text.replace(`zone${t}`,B($,o,"schemaEnBoite")),g($,o,{reponse:{value:m(n[t],2),options:{noFeedback:!0}}})}),o++):(l.forEach(u=>{u.text=u.text.replace(`zone${t}`,"\\ldots")}),o++))}for(const l of e.lignes){const u=l.barres.filter(h=>h.content.includes(`zone${t}`));u.length>0&&(a&&$!=null?(u.forEach(h=>{h.content=h.content.replace(`zone${t}`,B($,o,"schemaEnBoite")),g($,o,{reponse:{value:m(n[t],2),options:{noFeedback:!0}}})}),o++):(u.forEach(h=>{h.content=h.content.replace(`zone${t}`,"\\ldots")}),o++))}}return{enonce:`${i}<br><br>
  ${e.display()}<br><br>`,nextInteractif:o,correction:r}}class ve extends A{constructor(){super(),this.nbQuestions=1,this.besoinFormulaireTexte=["Types de questions",`Nombres séparés par des tirets :
1 : Compléter le schéma
2 : Compléter l'énoncé
3 : Compléter le schéma et l'énoncé
4 : Mélange`],this.sup="4",this.besoinFormulaire2Texte=["Types de problèmes",`Nombres séparés par des tirets :
1 : Calcul de partie manquante avec comparaison
2 : Somme de trois parties
3 : Partie manquante d'une somme
4 : Quotient (avec reste) d'un produit de deux nombre
5 : Mélange`],this.sup2="5"}nouvelleVersion(){this.consigne=`Trouver les nombres manquants dans ${this.nbQuestions>1?"ces problèmes":"ce problème"} afin que énoncé, réponse et schéma se correspondent.`;const f=Q({saisie:this.sup,min:1,max:3,defaut:1,melange:4,nbQuestions:this.nbQuestions,listeOfCase:["schéma","énoncé","mixte"]}),z=Q({saisie:this.sup2,min:1,max:4,defaut:5,melange:5,nbQuestions:this.nbQuestions}).map(e=>Number(e)-1),s=[[w],[O,T,R,E],[I,q,F,S],[k,J,L]],a=z.map((e,n)=>s[e][n%s[e].length]);let i=0;for(let e=0;e<this.nbQuestions;){const{enonce:n,nextInteractif:o,correction:p}=V(this,f[e],i,a[e]);this.questionJamaisPosee(e,n.split(" ")[0])&&(i=o,this.listeQuestions.push(n),this.listeCorrections.push(p),e++)}}}export{w as comparaisonDeuxSommes,he as dateDePublication,ve as default,R as etapeDeMontagne,F as etapeDeMontagne2,fe as interactifReady,ze as interactifType,J as partageDuTemps,k as partageEntreAmis,L as preparationCulinaire,E as randonnee,S as randonnee2,Pe as refs,xe as titre,T as triathlon,O as troisAchats,j as troisObjetsAVendre,I as unAchatParmisTrois,Me as uuid};
