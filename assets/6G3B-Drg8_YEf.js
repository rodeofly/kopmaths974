import{S as M}from"./main-Vl0czKSA.js";import{E as b}from"./exerciseMethods-CtbYPwln.js";import{f as C}from"./figureApigeom-Da_B6AP0.js";import{c as E}from"./aleatoires-BLhzzHLc.js";import{am as A,r as S,y as T,af as G,aq as g,l as D}from"./embellissements-BYV7mIDn.js";import{E as I}from"./Exercice-DtXhjCyI.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"./generalStore-C3E9FHtR.js";import"./canStore-DaSrd7sp.js";import"./dateEtHoraires-yqKtvK1K.js";import"decimal.js";import"earcut";import"roughjs";const U="Construire des médiatrices",j="18/03/2025",z=!0,J="custom",W="0dbe7",X={"fr-fr":["6G3B"],"fr-2016":["6G25-0"],"fr-ch":["9ES3-11"]};class Y extends I{figuresApiGeom;figuresApiGeomCorr;lesPoints;lesPointsCorr;mediatrices;nbMediatrices;ensembleDesQuestions;constructor(){super(),this.nbQuestions=1,this.besoinFormulaireNumerique=["Nombre de points par question (entre 2 et 23)",23],this.besoinFormulaire2Numerique=["Nombre de médiatrices (4 maximum)",4],this.besoinFormulaire3Numerique=["Type de construction",3,`1 : Avec une perpendiculaire
2 : Avec des cercles
3 : L'un ou l'autre`],this.sup=3,this.sup2=1,this.sup3=1,this.exoCustomResultat=!0,this.interactif=!0,this.comment="Dans cet exercice, vous pouvez choisir le nombre de points visibles, le nombre de médiatrices à construire (plafonné à 4) ainsi si la construction doit se faire avec une perpendiculaire ou avec des cercles."}nouvelleVersion(){this.figuresApiGeom=[],this.figuresApiGeomCorr=[],this.lesPoints=[],this.lesPointsCorr=[],this.ensembleDesQuestions=[],this.mediatrices=[];for(let e=0,r=0;e<this.nbQuestions&&r<50;){this.mediatrices[e]=[],this.lesPoints[e]=[],this.lesPointsCorr[e]=[];const c=A(2,23,this.sup,3),l=E(c,"OQW");let t="",o="";const m=[];this.figuresApiGeom[e]=new M({xMin:-5.5,yMin:-5.5,width:330,height:330,border:!0}),this.figuresApiGeomCorr[e]=new M({xMin:-5.5,yMin:-5.5,width:330,height:330,border:!0});let h=!0,s=[];for(let i=0;i<c;i++){do s=[S(-4,4),S(-4,4)],h=m.some(n=>n[0]===s[0]&&n[1]===s[1]);while(h);m[i]=s,this.lesPoints[e][i]=this.figuresApiGeom[e].create("Point",{x:s[0],y:s[1],shape:"x",label:l[i],labelDxInPixels:10,labelDyInPixels:20}),this.lesPoints[e][i].isDeletable=!1,this.lesPointsCorr[e][i]=this.figuresApiGeomCorr[e].create("Point",{x:s[0],y:s[1],shape:"x",label:l[i],labelDxInPixels:10,labelDyInPixels:20})}for(let i=0;i<c;i++)for(let n=i+1;n<c;n++)this.mediatrices[e].push({pointSeg1:this.lesPoints[e][i],pointSeg2:this.lesPoints[e][n],pointMed1:this.lesPoints[e][i],pointMed2:this.lesPoints[e][n],codage:"",couleurMed:{couleurFrancais:"",couleurHTML:""}});this.mediatrices[e]=T(this.mediatrices[e]);const P=this.mediatrices[e].length;this.nbMediatrices=A(1,Math.min(P,4),this.sup2,1);const f=G([["rouge","red"],["bleu","blue"],["orange","orange"],["vert","green"]]),u=G(["||","O","|","|||"]);for(let i=0;i<this.nbMediatrices;i++)switch(this.mediatrices[e][i].couleurMed={couleurFrancais:f[i][0],couleurHTML:f[i][1]},t+=(this.nbMediatrices===1?"":g(i))+`Tracer, en ${this.mediatrices[e][i].couleurMed.couleurFrancais}, `,t+=`la médiatrice du segment $[${this.mediatrices[e][i].pointSeg1.label}${this.mediatrices[e][i].pointSeg2.label}]$.<br>`,o+=this.nbMediatrices===1?"":g(i),this.sup3){case 2:{o+=`La médiatrice du segment $[${this.mediatrices[e][i].pointSeg1.label}${this.mediatrices[e][i].pointSeg2.label}]$ est la droite contenant tous les points à égale distance de $${this.mediatrices[e][i].pointSeg1.label}$ et de $${this.mediatrices[e][i].pointSeg2.label}$.<br>`,this.figuresApiGeomCorr[e].create("Segment",{point1:this.mediatrices[e][i].pointSeg1,point2:this.mediatrices[e][i].pointSeg2});const n=this.figuresApiGeomCorr[e].create("Distance",{point1:this.mediatrices[e][i].pointSeg1,point2:this.mediatrices[e][i].pointSeg2}),a=this.figuresApiGeomCorr[e].create("Circle",{center:this.mediatrices[e][i].pointSeg1,radius:.75*n.value,isDashed:!0}),p=this.figuresApiGeomCorr[e].create("Circle",{center:this.mediatrices[e][i].pointSeg2,radius:.75*n.value,isDashed:!0}),d=this.figuresApiGeomCorr[e].create("PointsIntersectionCC",{circle1:a,circle2:p});this.mediatrices[e][i].pointMed1=d.point1,this.mediatrices[e][i].pointMed2=d.point2,this.figuresApiGeomCorr[e].create("Segment",{point1:this.mediatrices[e][i].pointSeg1,point2:this.mediatrices[e][i].pointMed1,isDashed:!0}),this.figuresApiGeomCorr[e].create("Segment",{point1:this.mediatrices[e][i].pointSeg2,point2:this.mediatrices[e][i].pointMed1,isDashed:!0}),this.figuresApiGeomCorr[e].create("Segment",{point1:this.mediatrices[e][i].pointSeg1,point2:this.mediatrices[e][i].pointMed2,isDashed:!0}),this.figuresApiGeomCorr[e].create("Segment",{point1:this.mediatrices[e][i].pointSeg2,point2:this.mediatrices[e][i].pointMed2,isDashed:!0}),this.figuresApiGeomCorr[e].create("MarkBetweenPoints",{point1:this.mediatrices[e][i].pointMed1,point2:this.mediatrices[e][i].pointSeg1,text:u[i],color:this.mediatrices[e][i].couleurMed.couleurHTML}),this.figuresApiGeomCorr[e].create("MarkBetweenPoints",{point1:this.mediatrices[e][i].pointMed2,point2:this.mediatrices[e][i].pointSeg1,text:u[i],color:this.mediatrices[e][i].couleurMed.couleurHTML}),this.figuresApiGeomCorr[e].create("MarkBetweenPoints",{point1:this.mediatrices[e][i].pointMed1,point2:this.mediatrices[e][i].pointSeg2,text:u[i],color:this.mediatrices[e][i].couleurMed.couleurHTML}),this.figuresApiGeomCorr[e].create("MarkBetweenPoints",{point1:this.mediatrices[e][i].pointMed2,point2:this.mediatrices[e][i].pointSeg2,text:u[i],color:this.mediatrices[e][i].couleurMed.couleurHTML}),this.figuresApiGeomCorr[e].create("Line",{point1:this.mediatrices[e][i].pointMed1,point2:this.mediatrices[e][i].pointMed2,color:this.mediatrices[e][i].couleurMed.couleurHTML,thickness:2}),this.figuresApiGeom[e].setToolbar({tools:["POINT","POINT_ON","POINT_INTERSECTION","SEGMENT","LINE","CIRCLE_CENTER_POINT","CIRCLE_RADIUS","DRAG","SHAKE","REMOVE","SET_OPTIONS"]}),this.figuresApiGeom[e].options.changeColorChangeActionToSetOptions=!0;break}default:{o+=`La médiatrice du segment $[${this.mediatrices[e][i].pointSeg1.label}${this.mediatrices[e][i].pointSeg2.label}]$ est la droite perpendiculaire à $[${this.mediatrices[e][i].pointSeg1.label}${this.mediatrices[e][i].pointSeg2.label}]$ passant par son milieu.<br>`;const n=this.figuresApiGeomCorr[e].create("Segment",{point1:this.mediatrices[e][i].pointSeg1,point2:this.mediatrices[e][i].pointSeg2}),a=this.figuresApiGeomCorr[e].create("Middle",{point1:this.mediatrices[e][i].pointSeg1,point2:this.mediatrices[e][i].pointSeg2,color:this.mediatrices[e][i].couleurMed.couleurHTML});this.figuresApiGeomCorr[e].create("MarkBetweenPoints",{point1:a,point2:this.mediatrices[e][i].pointSeg2,text:u[i],color:this.mediatrices[e][i].couleurMed.couleurHTML}),this.figuresApiGeomCorr[e].create("MarkBetweenPoints",{point1:this.mediatrices[e][i].pointSeg1,point2:a,text:u[i],color:this.mediatrices[e][i].couleurMed.couleurHTML});const p=this.figuresApiGeomCorr[e].create("LinePerpendicular",{point:a,line:n,color:this.mediatrices[e][i].couleurMed.couleurHTML,thickness:2}),d=this.figuresApiGeomCorr[e].create("PointOnLine",{line:p,isVisible:!1});this.mediatrices[e][i].pointMed1=a,this.mediatrices[e][i].pointMed2=d,this.figuresApiGeomCorr[e].create("MarkRightAngle",{point:a,directionPoint:d}),this.sup3===1?this.figuresApiGeom[e].setToolbar({tools:["POINT","MIDDLE","POINT_ON","POINT_INTERSECTION","SEGMENT","LINE","LINE_PERPENDICULAR","DRAG","SHAKE","REMOVE","SET_OPTIONS"]}):this.figuresApiGeom[e].setToolbar({tools:["POINT","MIDDLE","POINT_ON","POINT_INTERSECTION","SEGMENT","LINE","LINE_PERPENDICULAR","CIRCLE_CENTER_POINT","CIRCLE_RADIUS","DRAG","SHAKE","REMOVE","SET_OPTIONS"]}),this.figuresApiGeom[e].options.changeColorChangeActionToSetOptions=!0;break}}t+=C({exercice:this,i:e,figure:this.figuresApiGeom[e],idAddendum:"6G25"+e,defaultAction:"DRAG"}),o+=C({exercice:this,i:e,figure:this.figuresApiGeomCorr[e],idAddendum:"6G25Cor"+e}),this.figuresApiGeomCorr[e].isDynamic=!1,this.figuresApiGeomCorr[e].divButtons.style.display="none",this.figuresApiGeomCorr[e].divUserMessage.style.display="none",this.questionJamaisPosee(e,t)&&(this.listeQuestions[e]=t,this.listeCorrections[e]=o,this.ensembleDesQuestions[e]={mediatrice:this.mediatrices[e]},e++),r++}D(this)}async shakeCorrection(e){await this.figuresApiGeom[e].shake();for(let r=0;r<this.lesPoints[e].length;r++)this.lesPointsCorr[e][r].x=this.lesPoints[e][r].x,this.lesPointsCorr[e][r].y=this.lesPoints[e][r].y}correctionInteractive=e=>{this.answers==null&&(this.answers={}),this.answers[this.figuresApiGeom[e].id]=this.figuresApiGeom[e].json;const r=[],c=document.querySelector(`#feedbackEx${this.numeroExercice}Q${e}`);let l="";this.shakeCorrection(e);for(let t=0;t<this.nbMediatrices;t++){let o="";const m=[...this.figuresApiGeom[e].elements.values()].filter(s=>s instanceof b&&s.color===this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurHTML),h=[...this.figuresApiGeom[e].elements.values()].filter(s=>s instanceof b&&s.color===this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurHTML&&s.type.includes("Line"));if(m.length===0)r[t]="KO",o="Aucun élement n'est en "+this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurFrancais+".";else if(m.length>1)r[t]="KO",o="Il y a trop d'élements en "+this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurFrancais+".";else if(h.length!==1)r[t]="KO",o="L'élement en "+this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurFrancais+" n'est pas une droite.";else{const s=this.figuresApiGeom[e].checkPerpendicularBisector({label1:this.mediatrices[e][t].pointSeg1.label,label2:this.mediatrices[e][t].pointSeg2.label,color:this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurHTML});r[t]=s.isValid?"OK":"KO",s.isValid||(o=`La droite en ${this.ensembleDesQuestions[e].mediatrice[t].couleurMed.couleurFrancais} n'est pas la médiatrice de $[${this.ensembleDesQuestions[e].mediatrice[t].pointSeg1.label}${this.ensembleDesQuestions[e].mediatrice[t].pointSeg2.label}]$.`)}o=(o===""?"😎 ":"☹️ ")+o,t!==this.nbMediatrices-1&&(o+="<br>"),l+=(this.nbMediatrices===1?"":g(t))+o}return c&&(c.innerHTML=l),this.figuresApiGeom[e].isDynamic=!1,this.figuresApiGeom[e].divButtons.style.display="none",this.figuresApiGeom[e].divUserMessage.style.display="none",r}}export{j as dateDePublication,Y as default,z as interactifReady,J as interactifType,X as refs,U as titre,W as uuid};
