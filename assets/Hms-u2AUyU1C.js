class n{week;day;hour;minute;second;sign;constructor({week:e=0,day:r=0,hour:o=0,minute:i=0,second:s=0,sign:t=""}={}){this.week=e,this.day=r,this.hour=o,this.minute=i,this.second=s,this.sign=t}static fromString(e){const r=new n;e=e.replaceAll(" ",""),e=e.replaceAll("&nbsp;",""),e=e.replaceAll("{\\:\\text{semaines}\\:}","semaines"),e=e.replaceAll("{\\:\\text{j}\\:}","j"),e=e.replaceAll("{\\:\\text{h}\\:}","h"),e=e.replaceAll("{\\:\\text{min}\\:}","min"),e=e.replaceAll("{\\:\\text{s}\\:}","s"),e=e.replaceAll("sem","semaines");const o=/(?:(?<sign>[+,-]))?(?:(?<week>\d+)\s*semaines\s*)?(?:(?<day>\d+)\s*j\s*)?(?:(?<hour>\d+)\s*h\s*)?(?:(?<minute>\d+)\s*min\s*)?(?:(?<second>\d+)\s*s)?/gm;for(const i of e.matchAll(o))i.groups!==void 0&&(Number.isInteger(parseInt(i.groups.week))&&(r.week=parseInt(i.groups.week)),Number.isInteger(parseInt(i.groups.day))&&(r.day=parseInt(i.groups.day)),Number.isInteger(parseInt(i.groups.hour))&&(r.hour=parseInt(i.groups.hour)),Number.isInteger(parseInt(i.groups.minute))&&(r.minute=parseInt(i.groups.minute)),Number.isInteger(parseInt(i.groups.second))&&(r.second=parseInt(i.groups.second)),(i.groups.sign==="+"||i.groups.sign==="-")&&(r.sign=i.groups.sign));if(e.includes("min")&&!e.endsWith("s")){const i=/(?:(?<sign>[+,-]))?(?:(?<week>\d+)\s*semaines\s*)?(?:(?<day>\d+)\s*j\s*)?(?:(?<hour>\d+)\s*h\s*)?(?:(?<minute>\d+)\s*min\s*)?(?:(?<second>\d+))?/gm;for(const s of e.matchAll(i))s.groups!==void 0&&Number.isInteger(parseInt(s.groups.week))&&(r.week=parseInt(s.groups.week)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.day))&&(r.day=parseInt(s.groups.day)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.hour))&&(r.hour=parseInt(s.groups.hour)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.minute))&&(r.minute=parseInt(s.groups.minute)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.second))&&(r.second=parseInt(s.groups.second)),s.groups!==void 0&&(s.groups.sign==="+"||s.groups.sign==="-")&&(r.sign=s.groups.sign)}else if(e.includes("h")&&!e.includes("min")&&!e.endsWith("s")){const i=/(?:(?<sign>[+,-]))?(?:(?<week>\d+)\s*semaines\s*)?(?:(?<day>\d+)\s*j\s*)?(?:(?<hour>\d+)\s*h\s*)?(?:(?<minute>\d+))?/gm;for(const s of e.matchAll(i))s.groups!==void 0&&Number.isInteger(parseInt(s.groups.week))&&(r.week=parseInt(s.groups.week)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.day))&&(r.day=parseInt(s.groups.day)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.hour))&&(r.hour=parseInt(s.groups.hour)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.minute))&&(r.minute=parseInt(s.groups.minute)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.second))&&(r.second=parseInt(s.groups.second)),s.groups!==void 0&&(s.groups.sign==="+"||s.groups.sign==="-")&&(r.sign=s.groups.sign)}else{const i=/(?:(?<sign>[+,-]))?(?:(?<week>\d+)\s*semaines\s*)?(?:(?<day>\d+)\s*j\s*)?(?:(?<hour>\d+)\s*h\s*)?(?:(?<minute>\d+)\s*min\s*)?(?:(?<second>\d+)\s*s)?/gm;for(const s of e.matchAll(i))s.groups!==void 0&&Number.isInteger(parseInt(s.groups.week))&&(r.week=parseInt(s.groups.week)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.day))&&(r.day=parseInt(s.groups.day)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.hour))&&(r.hour=parseInt(s.groups.hour)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.minute))&&(r.minute=parseInt(s.groups.minute)),s.groups!==void 0&&Number.isInteger(parseInt(s.groups.second))&&(r.second=parseInt(s.groups.second)),s.groups!==void 0&&(s.groups.sign==="+"||s.groups.sign==="-")&&(r.sign=s.groups.sign)}return r}toString(){let e="";return this.week>0&&(e+=`${this.week} semaines `,(this.day>0||this.hour>0||this.minute>0||this.second>0)&&(e+=" ")),this.day>0&&(e+=`${this.day} jours `,(this.hour>0||this.minute>0||this.second>0)&&(e+=" ")),this.hour>0&&(this.hour%24===0?e+="0 h":e+=`${this.hour} h`,(this.minute>0||this.second>0)&&(e+=" ")),this.minute>0&&(e+=this.minute>9?`${this.minute} min`:`0${this.minute} min`,this.second>0&&(e+=" ")),this.second>0&&(e+=`${this.second} s`),e}toString2(){return this.hour>0&&this.second===0?this.toString().replace(" min",""):this.minute>0?this.toString().replace(" s",""):this.toString()}isGreaterThan(e){return this.toSeconds()>e.toSeconds()}isEqual(e){return this.toSeconds()===e.toSeconds()}isTheSame(e){return this.week===e.week&&this.day===e.day&&this.hour===e.hour&&this.minute===e.minute&&this.second===e.second}isEquivalentToString(e){return n.fromString(e).toSeconds()===this.toSeconds()}toSecondsString(){return`${this.toSeconds()} s`}toSeconds(){return this.week*604800+this.day*86400+this.hour*3600+this.minute*60+this.second}normalize(){return this.minute+=Math.floor(this.second/60),this.second=this.second%60,this.hour+=Math.floor(this.minute/60),this.minute=this.minute%60,this}add(e){const r=new n;return r.second=this.toSeconds()+e.toSeconds(),r.normalize(),r}substract(e){const r=new n;return r.second=Math.abs(this.toSeconds()-e.toSeconds()),r.normalize(),r}}export{n as H};
