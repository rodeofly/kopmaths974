import{E as x,K as c}from"./Exercice-DtXhjCyI.js";import{h as b}from"./gestionInteractif-DujZpSu8.js";import{a as d}from"./questionMathLive-DdRvWqlN.js";import{g as C,a as N,r as a,af as y,o as f,m as v,l as g}from"./embellissements-BYV7mIDn.js";import{l as q}from"./Labyrinthe-BCFJckxv.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"decimal.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"earcut";import"roughjs";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";import"./findPath-D-bvJShA.js";const Y="7/12/2020",Z="29/10/2024",_=!0,ee="mathLive",ie="Parcourir un labyrinthe de multiples basé sur les critères de divisibilité",se="a3870",te={"fr-fr":["5A11-1"],"fr-ch":["9NO4-11"]};class re extends x{niveau;constructor(){super(),this.besoinFormulaireTexte=["Critères de divisibilité pour chaque question","Nombres séparés par des tirets :"],this.besoinFormulaire2Numerique=["Niveau de rapidité",6,`1 : Escargot
2 : Tortue
3 : Lièvre
4 : Antilope
5 : Guépard
6 : Au hasard`],this.besoinFormulaire3Numerique=["Nombre de lignes du labyrinthe (entre 2 et 8 ou bien 1 si vous laissez le hasard décider)",8],this.besoinFormulaire4Numerique=["Nombre de colonnes du labyrinthe (entre 2 et 8 ou bien 1 si vous laissez le hasard décider)",8],this.niveau="5e",this.nbQuestions=5,this.sup="2-5-10",this.sup3=1,this.sup4=1,this.sup2=this.niveau==="CM"?3:4}nouvelleVersion(){let n,u,s;const m=C({min:2,max:20,defaut:N([2,5,10]),nbQuestions:this.nbQuestions,saisie:this.sup,shuffle:!1,melange:0}).map(Number);for(let i=0;i<this.nbQuestions;){const t=this.sup3===1?a(2,8):Math.max(2,this.sup3),l=this.sup4===1?a(3,11-t):Math.max(3,this.sup4),e=q({nbLignes:t,nbColonnes:l,scaleFigure:.7});e.niveau=this.sup2,s=e.choisitChemin(e.niveau),e.murs2d=e.construitMurs(s),e.chemin2d=e.traceChemin(s),n=`Trouver la sortie en ne passant que par les cases contenant un nombre divisible par ${m[i]}.<br>`;let o=[];const h=[];for(let r=200;r<=12e3;r+=a(1,100))o.push(m[i]*r);for(let r=1;r<=l*t;r++)h.push(a(200,5e3)*m[i]+a(1,m[i]-1));o=y(o,12),e.nombres2d=e.placeNombres(s,o,h,.8);const p={xmin:-4,ymin:0,xmax:5+3*l,ymax:2+3*t,pixelsParCm:20,scale:.7};n+=f(p,e.murs2d,e.nombres2d),n+=d(this,2*i,c.clavierNumbers,{texteAvant:"Indiquer le numéro de la bonne sortie :"}),b(this,2*i,{reponse:{value:`${t-s[s.length-1][1]}`}}),n+=d(this,2*i+1,c.clavierNumbers,{texteAvant:"<br>Combien de nombres rencontrés avant la sortie ?"}),b(this,2*i+1,{reponse:{value:`${e.chemin2d.length-1}`}}),u=`Voici le chemin en couleur ($${v(e.chemin2d.length-1)}$ nombres rencontrés avant la sortie) et la sortie est le numéro $${v(t-s[s.length-1][1])}$.<br>`,u+=f(p,e.murs2d,e.nombres2d,e.chemin2d),this.questionJamaisPosee(i,o[0],h[0])&&(this.listeQuestions[i]=n,this.listeCorrections[i]=u,i++)}g(this)}}export{Z as dateDeModifImportante,Y as dateDePublication,re as default,_ as interactifReady,ee as interactifType,te as refs,ie as titre,se as uuid};
