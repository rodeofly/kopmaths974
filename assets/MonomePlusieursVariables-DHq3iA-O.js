import{a9 as h,r as u,F as x,x as d}from"./embellissements-BYV7mIDn.js";class l{coefficient;partieLitterale;degre;constructor(e,t){this.coefficient=h(e),this.partieLitterale={...t},this.degre=this.partieLitterale.exposants.reduce((i,n)=>i+n,0);const r=this.partieLitterale.variables.map((i,n)=>({variable:i,exposant:this.partieLitterale.exposants[n]})).sort((i,n)=>i.variable.localeCompare(n.variable));this.partieLitterale.variables=r.map(i=>i.variable),this.partieLitterale.exposants=r.map(i=>i.exposant)}static genereCoefficients(e,t=10){let r,i,n;e==="entier"?n=1:n=u(-t,t,[0,1,-1]);do i=u(-t,t),r=new x(i,n);while(i===0||r.estEntiere&&e!=="entier");return h(r)}static createMonomeFromPartieLitterale(e,t,r=10){const i=this.genereCoefficients(e,r);return new l(i,t)}static createRandomMonome(e,t,r,i=10){const n={variables:[],exposants:[]};let s=e;const o=Array(r.length).fill(0),f=Math.min(r.length,e),c=Array.from({length:r.length},(a,p)=>p);for(let a=0;a<f-1;a++){const p=c.splice(Math.floor(Math.random()*c.length),1)[0];o[p]=1,s-=1}for(;s>0;){const a=Math.floor(Math.random()*r.length);o[a]+=1,s-=1}for(let a=0;a<r.length;a++)n.variables.push(r[a]),n.exposants.push(o[a]);return new l(this.genereCoefficients(t,i),n)}estSemblable(e){const{variables:t,exposants:r}=this.partieLitterale,i=e.partieLitterale.variables,n=e.partieLitterale.exposants;if(t.length!==i.length)return!1;for(let s=0;s<t.length;s++)if(t[s]!==i[s]||r[s]!==n[s])return!1;return!0}somme(e){if(this.estSemblable(e)){const t=this.coefficient.sommeFractions(e.coefficient);return new l(t,this.partieLitterale)}else throw new Error("Impossible d'additionner deux monômes non semblables")}oppose(){return new l(this.coefficient.oppose(),this.partieLitterale)}estCarre(){return this.coefficient.estParfaite?!!this.partieLitterale.exposants.every(e=>e%2===0):!1}evaluer(e){let t=this.coefficient;return this.partieLitterale.variables.forEach((r,i)=>{if(e[r])t=t.produitFraction(e[r].puissanceFraction(this.partieLitterale.exposants[i]));else throw new Error(`Impossible d'évaluer le monôme avec les variables fournies. Variable manquante : ${r}`)}),t}pgcd(e){if(this.coefficient.estEntiere&&e.coefficient.estEntiere){const t=this.coefficient.num,r=e.coefficient.num,i=d(t,r),n=this.partieLitterale.variables.filter(o=>e.partieLitterale.variables.includes(o)),s={variables:[],exposants:[]};return n.forEach(o=>{const f=this.partieLitterale.variables.indexOf(o),c=e.partieLitterale.variables.indexOf(o),a=Math.min(this.partieLitterale.exposants[f],e.partieLitterale.exposants[c]);s.variables.push(o),s.exposants.push(a)}),new l(i,s)}else throw new Error("Impossible de calculer le pgcd de deux monômes avec des coefficients non entiers")}diviserPar(e){const t=this.coefficient.diviseFraction(e.coefficient),r=this.partieLitterale.variables.filter(n=>e.partieLitterale.variables.includes(n)),i={variables:[],exposants:[]};return r.forEach(n=>{if(!this.partieLitterale.variables.includes(n)||!e.partieLitterale.variables.includes(n)||this.partieLitterale.exposants[this.partieLitterale.variables.indexOf(n)]<e.partieLitterale.exposants[e.partieLitterale.variables.indexOf(n)])throw new Error("Impossible de diviser deux monômes avec des variables qui ne sont pas semblables");{const s=this.partieLitterale.variables.indexOf(n),o=e.partieLitterale.variables.indexOf(n),f=this.partieLitterale.exposants[s]-e.partieLitterale.exposants[o];i.variables.push(n),i.exposants.push(f)}}),new l(t,i)}produit(e){const t=this.coefficient.produitFraction(e.coefficient),r={variables:[...this.partieLitterale.variables],exposants:[...this.partieLitterale.exposants]};return e.partieLitterale.variables.forEach((i,n)=>{const s=r.variables.indexOf(i);s!==-1?r.exposants[s]+=e.partieLitterale.exposants[n]:(r.variables.push(i),r.exposants.push(e.partieLitterale.exposants[n]))}),new l(t,r)}toStringEvaluate(e){const t=this.partieLitterale.variables.map((r,i)=>{const n=this.partieLitterale.exposants[i];return n===0?"":n===1?e[r].signe===-1?`\\left(${e[r].texFractionSimplifiee}\\right)`:`${e[r].texFractionSimplifiee}`:`\\left(${e[r].texFractionSimplifiee}\\right)^{${n}}`}).filter(r=>r!=="").join(" ");return this.coefficient.num===0?"0":this.coefficient.texFractionSimplifiee==="1"?t===""?"1":t:this.coefficient.texFractionSimplifiee==="-1"?t===""?"-1":`-${t}`:`${this.coefficient.texFractionSimplifiee}${t===""?"":"\\times"} ${t}`}toString(){const e=this.partieLitterale.variables.map((t,r)=>{const i=this.partieLitterale.exposants[r];return i===0?"":i===1?`${t}`:`${t}^${i}`}).filter(t=>t!=="").join(" ");return this.coefficient.num===0?"0":this.coefficient.texFractionSimplifiee==="1"?e===""?"1":e:this.coefficient.texFractionSimplifiee==="-1"?e===""?"-1":`-${e}`:`${this.coefficient.texFractionSimplifiee} ${e}`}toStringAvecSigne(){const e=this.partieLitterale.variables.map((t,r)=>{const i=this.partieLitterale.exposants[r];return i===0?"":i===1?`${t}`:`${t}^${i}`}).filter(t=>t!=="").join(" ");return this.coefficient.num===0?"0":this.coefficient.texFractionSimplifiee==="1"?e===""?"+1":`+${e}`:this.coefficient.texFractionSimplifiee==="-1"?e===""?"-1":`-${e}`:this.coefficient.signe===-1?`${this.coefficient.texFractionSimplifiee} ${e}`:`+${this.coefficient.texFractionSimplifiee} ${e}`}toStringAvecParentheses(){const e=this.partieLitterale.variables.map((t,r)=>{const i=this.partieLitterale.exposants[r];return i===0?"":i===1?`${t}`:`${t}^${i}`}).filter(t=>t!=="").join(" ");return this.coefficient.num===0?"0":this.coefficient.num===1&&this.coefficient.den===1?e===""?"1":e:this.coefficient.texFractionSimplifiee==="-1"?`\\left(-${e}\\right)`:this.coefficient.signe===-1?`\\left(${this.coefficient.texFractionSimplifiee} ${e}\\right)`:`${this.coefficient.texFractionSimplifiee} ${e}`}}export{l as M};
