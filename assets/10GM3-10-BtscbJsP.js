import{E as F,K as A}from"./Exercice-DtXhjCyI.js";import{h as I}from"./gestionInteractif-DujZpSu8.js";import{a as E}from"./questionMathLive-DdRvWqlN.js";import{af as L,r as g,e as t,l as O,F as Q,m as N,s as P}from"./embellissements-BYV7mIDn.js";import{G as y}from"./comparisonFunctions-B45ZZ3C7.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"decimal.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./Hms-u2AUyU1C.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"earcut";import"roughjs";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";import"./compute-engine.min.umd-BwAhpA7x.js";const me="Convertir des durées en heures-minutes-secondes, en heures décimales ou en minutes décimales",he="19/08/2025",ae=!0,le="mathLive",de="31e61",$e={"fr-ch":["10GM3-10"],"fr-fr":[""]};class pe extends F{version;constructor(){super(),this.nbQuestions=5,this.sup=1,this.sup2=!1,this.sup3=!1,this.besoinFormulaireNumerique=["Type de conversions",6,`1 : heures-minutes-secondes vers heures décimales
2 : heures-minutes-secondes vers minutes décimales
3 : heures décimales vers heures-minutes-secondes
4 : minutes décimales vers heures-minutes-secondes
5 : heures ↔ minutes décimales
6 : Mélange`],this.besoinFormulaire2CaseACocher=["Quarts et demi-heures seulement",!1],this.besoinFormulaire3CaseACocher=["Dixièmes d'heure seulement",!0],this.correctionDetailleeDisponible=!0,this.correctionDetaillee=!0,this.version="10GM3-10"}nouvelleVersion(){this.autoCorrection=[];let h;switch(this.sup){case 1:h=[1];break;case 2:h=[2];break;case 3:h=[3];break;case 4:h=[4];break;case 5:h=[5,6];break;default:h=[1,2,3,4,5,6];break}if(this.version==="6M4C-3")for(let c=h.length-1;c>=0;c--)h[c]===5?h.splice(c,1):h[c]===3?h.splice(c,1,6):h[c]===4&&h.splice(c,1,1,2,6);else if(this.version==="6M4C-4")for(let c=h.length-1;c>=0;c--)switch(h[c]){case 3:h.splice(c,1,3,4);break;case 1:h.splice(c,1,3);break;case 2:h.splice(c,1,4);break;case 5:case 6:h.splice(c,1);break}const $=L(h,this.nbQuestions);this.consigne=`${this.sup===4||this.sup===3||this.sup2||this.sup3?" ":`Arrondir, si nécessaire, ${this.nbQuestions>1?"les résultats":"le résultat"} au centième.`}`;for(let c=0,x=0,b=0;c<this.nbQuestions&&x<50;c++){let u,e;const i=$[c];let m=0,r=0,s="",n="",o=0;const f=!1;switch(i){case 1:s="hhmmss",n="hdec";break;case 2:s="hhmmss",n="mindec";break;case 3:s="hdec",n="hhmmss";break;case 4:s="mindec",n="hhmmss";break;case 5:s="hdec",n="mindec";break;case 6:s="mindec",n="hdec";break;default:s="hhmmss",n="hdec";break}let l=!1,v=!1,T=!1;do{if(this.sup2)m=(s==="hhmmss"?g(1,31,[4,8,12,16,20,24,28]):g(1,12))*900;else if(this.sup3)m=g(11,79,[10,20,30,40,50,60,70])*360;else{const d=[];for(let a=120;a<3600;a+=60)d.push(a);m=g(60,3*3600,d)}const k=new y(m,"hhmmss");if(s==="hhmmss")this.sup3&&n==="hdec"&&(r=(g(0,3)+.1*g(1,9))*3600),r=k.toHHMMSS();else{const d=k.convertirEn(s),a=typeof d.mesure=="number"?d.mesure:Number(d.mesure);r=Math.round(a*100)/100,this.sup3&&s==="mindec"&&(r=(g(0,3)+.1*g(1,9))*60)}if(n==="hhmmss")s!=="hhmmss"?(r=Math.floor(r*100)/100,o=new y(r,s).toHHMMSS()):o=k.toHHMMSS();else if(s!=="hhmmss"){const a=new y(r,s).convertirEn(n);o=typeof a.mesure=="number"?a.mesure:Number(a.mesure)}else{const d=k.convertirEn(n),a=typeof d.mesure=="number"?d.mesure:Number(d.mesure);Math.round(a*100)!==a*100?o=Math.round(a*100)/100:o=a}l=n==="hhmmss"&&(o.length===3||o.length===0),v=s==="hhmmss"&&m<3600,T=n==="hhmmss"&&!(o.includes("h")&&o.includes("min")||o.includes("h")&&o.includes("s")||o.includes("min")&&o.includes("s"))}while(l||v||T);let C;if(s==="hhmmss"){const k=r.match(/(\d+) h|(\d+) min|(\d+) s/g)||[],d=[];k.forEach(a=>{if(a.includes(" h")){const p=parseInt(a.replace(" h",""));p>0&&d.push(`$${p}${P()}$${p<=1?"heure":"heures"}`)}else if(a.includes(" min")){const p=parseInt(a.replace(" min",""));p>0&&d.push(`$${p}${P()}$${p<=1?"minute":"minutes"}`)}else if(a.includes(" s")){const p=parseInt(a.replace(" s",""));p>0&&d.push(`$${p}${P()}$${p<=1?"seconde":"secondes"}`)}}),C=d.join(`${P()}`)}else C=`$${t(r,2)}$`;let D="",M="";switch(s){case"hhmmss":D=this.sup2||this.sup3?"format heures-minutes":"format heures-minutes-secondes";break;case"hdec":D=r.toString()!=="1"?"heures":"heure";break;case"mindec":D="minutes";break;default:D=this.sup2||this.sup3?"hh:mm:ss":"hh:mm";break}switch(n){case"hhmmss":M=this.sup2||this.sup3?"format heures-minutes":"format heures-minutes-secondes";break;case"hdec":M="heures";break;case"mindec":M="minutes";break;default:M="heures";break}u=`Convertir ${C} ${s==="hhmmss"?"":D} en ${M}.`,this.interactif?n==="hhmmss"?(u+="<br>"+E(this,b,A.clavierNumbers,{texteAvant:"",texteApres:" h "}),u+=E(this,b+1,A.clavierNumbers,{texteAvant:"",texteApres:" min "}),!this.sup2&&!this.sup3&&(u+=E(this,b+2,A.clavierNumbers,{texteAvant:"",texteApres:" s"}))):u+="<br>"+E(this,b,A.clavierNumbers,{texteAvant:" ",texteApres:` ${M}`}):n==="hhmmss"?(u+="<br><br>$\\ldots \\ldots$ h ",u+="$\\ldots \\ldots$ min ",u+="$\\ldots \\ldots$ s "):u+=`<br><br>$\\ldots \\ldots$ ${M}`,e="";const w=this.genererCorrectionDetaillee(i,r,o,s,n,f);if(this.correctionDetaillee&&(e=w.texte),e+=this.genererCorrectionSimple(r,o,s,n,w.estApproximation),this.interactif)if(n==="hhmmss"){const d=o.match(/(\d+)\s*h|(\d+)\s*min|(\d+)\s*s/g)||[];let a=0,p=0,H=0;d.forEach(S=>{S.includes("h")?a=parseInt(S.replace(/[^\d]/g,"")):S.includes("min")?p=parseInt(S.replace(/[^\d]/g,"")):S.includes("s")&&(H=parseInt(S.replace(/[^\d]/g,"")))}),I(this,b,{reponse:{value:a,options:{nombreDecimalSeulement:!0}}}),I(this,b+1,{reponse:{value:p,options:{nombreDecimalSeulement:!0}}}),!this.sup2&&!this.sup3&&I(this,b+2,{reponse:{value:H,options:{nombreDecimalSeulement:!0}}})}else I(this,b,{reponse:{value:o,options:{nombreDecimalSeulement:!0}}});this.questionJamaisPosee(c,r,i)?(this.listeQuestions.push(u),this.listeCorrections.push(e),b+=n==="hhmmss"?this.sup2||this.sup3?2:3:1,x++):(x++,c--)}O(this)}genererCorrectionDetaillee(h,$,c,x,b,u=!1){let e="";switch(h){case 1:{const i=$,m=i.match(/(\d+) h/)?parseInt(i.match(/(\d+) h/)[1]):0,r=i.match(/(\d+) min/)?parseInt(i.match(/(\d+) min/)[1]):0,s=i.match(/(\d+) s/)?parseInt(i.match(/(\d+) s/)[1]):0;if(e=this.sup2||this.sup3?"Pour convertir un temps au format heures-minutes en heures, on convertit les minutes en fractions d'heures. <br>":"Pour convertir un temps au format heures-minutes-secondes en heures, on convertit les minutes et secondes en fractions d'heures. <br>",m>0&&(e+=` Le nombre d'heures ne change pas : $${m}\\text{\\,h}$. <br>`),r>0){const l=r/60,v=100,T=Math.round(l*v)!==l*v,C=Math.round(l*100)===l*100;T&&(u=!0),e+=this.sup2?"":"On divise le nombre de minutes par $60$ pour le convertir en heures : ",e+=`$${r}\\text{\\,min} = ${this.sup2?new Q(r,60).simplifie().texFSD:new Q(r,60).texFSD}\\text{\\,h}`,C?(e+=`${u?"\\approx":"="}`,e+=`${t(l,2)}\\text{\\,h}$. <br>`):e+="$. <br>"}const n=s/3600,o=Math.round(n*100)===n*100;if(o||(u=!0),s>0){const l=s/3600;Math.round(l*100)!==l*100&&(u=!0),e+=`On divise le nombre de secondes par $${t(3600)}$ pour le convertir en heures : $${s}\\text{\\,s} = \\dfrac{${s}}{${t(3600)}}\\text{\\,h} ${o?`=${l}\\text{\\,h}`:""}$.<br>`}e+="On somme : $";const f=[];if(m>0&&f.push(`${m}`),r>0){const l=r/60;Math.round(l*100)===l*100?f.push(`${t(l,2)}`):f.push(`\\dfrac{${r}}{60}`)}s>0&&(o?f.push(`${t(n,2)}`):f.push(`\\dfrac{${s}}{${t(3600)}}`)),e+=f.join(" + "),u&&!this.sup3&&!this.sup2?e+=` \\approx ${t(c,2)}$`:e+=` = ${t(c,2)}$`;break}case 2:{const i=$,m=i.match(/(\d+) h/)?parseInt(i.match(/(\d+) h/)[1]):0,r=i.match(/(\d+) min/)?parseInt(i.match(/(\d+) min/)[1]):0,s=i.match(/(\d+) s/)?parseInt(i.match(/(\d+) s/)[1]):0,n=m*60+r+s/60;e=this.sup2||this.sup3?"Pour convertir un temps au format heures-minutes en minutes, on convertit tout en minutes. <br>":"Pour convertir un temps au format heures-minutes-secondes en minutes, on convertit tout en minutes. <br>";const o=s/60,f=Math.round(o*1e3)===o*1e3;if(m>0&&(e+=` heures : $${m}\\text{\\,h} = ${m} \\times 60\\text{\\,min}= ${m*60}\\text{\\,min}$ ;`),e+=` minutes : $${r}\\text{\\,min}$${s>0?" ;":"."}`,s>0){const l=s/60;Math.round(l*1e3)!==l*1e3&&(u=!0),e+=` secondes : $${s}\\text{\\,s} = \\dfrac{${s}}{60}\\text{\\,min}${f?`=${l}\\text{\\,h}`:""}$.`}e+=`<br>On somme : $${m*60} + ${r}`,s>0&&(f?e+=` + ${t(o,3)}`:e+=` + \\dfrac{${s}}{60}`),u?e+=` \\approx ${t(n,2)}\\text{\\,min}$`:e+=` = ${t(n,2)}\\text{\\,min}$`}break;case 3:{const i=$,m=Math.floor(i),r=c,s=r.match(/(\d+) min/)?parseInt(r.match(/(\d+) min/)[1]):0,n=i-m;if(e=this.sup2||this.sup3?"Pour convertir des heures au format heures-minutes, on sépare la partie entière (heures) et on convertit la partie décimale.<br>":"Pour convertir des heures au format heures-minutes-secondes, on sépare la partie entière (heures) et on convertit la partie décimale.<br>",e+=`$${t(i,2)}\\text{\\,h} = ${m}\\text{\\,h} + ${t(n,2)}\\text{\\,h}$`,n>0)if(this.sup2||this.sup3){e+="<br><br>Conversion de la partie décimale en minutes :<br>";const o=n*60;e+=`$${t(n,2)}\\text{\\,h} = ${t(n,2)} \\times 60\\text{\\,min} = ${t(o,0)}\\text{\\,min}$`}else{e+="<br><br>Conversion de la partie décimale en secondes :<br>";const o=n*3600;if(e+=`$${t(n,2)}\\text{\\,h} = ${t(n,2)} \\times ${t(3600)}\\text{\\,s} = ${t(o,0)}\\text{\\,s}$`,s>0){e+=`<br><br>Le nombre de minutes entières est la partie entière du quotient $${t(o,0)} \\div 60$, soit $${s}\\text{\\,min}$.<br>`;const f=Math.round(o-s*60);e+=`Le nombre de secondes est donné par le nombre de secondes total moins le nombre de minutes entières $${t(o)} - ${s} \\times 60 = ${t(f)}\\text{\\,s}$`}else e+=`<br><br>Comme ${t(o,0)} < 60, il n'y a pas de minutes entières, donc ${t(o,0)} secondes.`}break}case 4:{const i=$,m=Math.floor(i/60),r=i-m*60,s=Math.floor(r),n=Math.round((r-s)*60);if(e="Pour convertir des minutes au format heures-minutes-secondes, on divise par $60$ pour obtenir le nombre d'heures, puis on traite le reste.<br><br>",e+=`Le nombre d'heures entières correspond à la partie entière du quotient $${t(i,2)}\\text{\\,min} \\div 60$, soit $${m}\\text{\\,h}$. `,m>0&&(!this.sup2&&!this.sup3?(e+=`<br><br>Il reste à convertir : $${i}-(${m}\\times 60) =${t(r,2)}\\text{\\,min}$ en minutes`,e+=this.sup2||this.sup3?"":" et secondes"):e+=`<br><br>Il reste à trouver les minutes : $${i}-(${m}\\times 60) =${t(r,2)}\\text{\\,min}$`),!this.sup2&&!this.sup3){const o=u?"\\approx":"=";r!==s?(e+=`<br><br>$${t(r,2)}\\text{\\,min} = ${s}\\text{\\,min} + ${t(r-s,3)}\\text{\\,min}$<br>`,e+=`$${t(r-s,3)}\\text{\\,min} = ${t(r-s,3)} \\times 60 \\text{\\,s} ${o} ${n}\\text{\\,s}$`):e+=`<br><br> Il y a un nombre entier de minutes, donc $${s}\\text{\\,min}$ et $0\\text{\\,s}$.`}break}case 5:{e="Pour convertir des heures en minutes, on multiplie par $60$ (car $1\\text{\\,h} = 60\\text{\\,min}$).<br><br>";const i=u?"\\approx":"=";e+=`$${t($,2)}\\text{\\,h} = ${t($,2)} \\times 60 \\text{\\,min}${i} ${t(c,2)}\\text{\\,min}$`;break}case 6:{e="Pour convertir des minutes en heures, on divise par $60$ (car $60\\text{\\,min} = 1\\text{\\,h}$).<br><br>",t(c,2)!==t(c,3)&&(u=!0);const i=u?"\\approx":"=";e+=`$${t($,2)}\\text{\\,min} = ${t($,2)} \\div 60 \\text{\\,h}${i} ${t(c,2)}\\text{\\,h}$`;break}}return e+=".<br>Ainsi, ",{texte:e,estApproximation:u}}genererCorrectionSimple(h,$,c,x,b){let u="$";if(typeof h=="string"){const i=h.replace(/(\d+) h/g,"$1\\text{\\,h }").replace(/(\d+) min/g,"$1\\text{\\,min }").replace(/(\d+) s/g,"$1\\text{\\,s}");u+=`${i} `}else{const i=c==="hdec"?"\\text{\\,h}":c==="mindec"?"\\text{\\,min}":"";u+=`${t(h,2)}${i} `}let e=b?"\\approx":"=";if(c==="hdec"&&x==="hhmmss"&&(e="="),typeof $=="string"){let i=$.replace(/(\d+) h/g,"$1\\text{\\,h }").replace(/(\d+) min/g,"$1\\text{\\,min }").replace(/(\d+) s/g,"$1\\text{\\,s}");($.includes("h")||$.includes("min"))&&!$.includes("s")&&!this.sup2&&!this.sup3&&(i+=" 0\\text{\\,s}"),u+=`${e} ${i.replace(/(\d+)/g,m=>N(m))}`}else{const i=x==="hdec"?"\\text{\\,h}":x==="mindec"?"\\text{\\,min}":"";u+=`${e} ${N(t($,2))+i}`}return u+="$.",u}}export{he as dateDePublication,pe as default,ae as interactifReady,le as interactifType,$e as refs,me as titre,de as uuid};
