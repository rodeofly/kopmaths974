const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ElementInstrumenpoche-Jd5UnyKs.js","assets/index-BUDQz6-w.js","assets/index-CYxqNNrG.css","assets/embellissements-BYV7mIDn.js"])))=>i.map(i=>d[i]);
import{_ as B}from"./index-BUDQz6-w.js";import{G as H,ah as g,b6 as p,aE as m,n as $,aF as R,aR as z,dI as ee,b7 as te,cB as V,be as w,ag as T,aa as d,p as q,bj as x,ai as X,a4 as j,a3 as D,cA as E,aJ as P,r as v,aX as re,bg as Q,d as se,b as O,y as ie,aQ as ae,S as C,b8 as oe,cg as ne,dJ as y,k as I,bf as Z,cS as L,bX as U}from"./embellissements-BYV7mIDn.js";const ce=function(i,t,e={}){e.longueur1=e.longueur1??3,e.longueur2=e.longueur2??-3,e.codage=e.codage??"X",e.couleurCodage=e.couleurCodage??this.couleurCodage,e.couleurCompas=e.couleurCompas??this.couleurCompas,e.coderFigure=e.coderFigure??!0;const r=H(i,t),s=g(i,r,-90),a=p(r,s,e.longueur1),o=p(r,s,e.longueur2);this.compasMontrer(),this.compasDeplacer(i,e);let c,n,l,u;if(e.longueur1===-1*e.longueur2?(this.compasEcarter(m(i,a),{vitesse:e.vitesse,sens:e.vitesse}),c=this.compasTracerArcCentrePoint(i,a,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo}),n=this.compasTracerArcCentrePoint(i,o,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo}),u=this.compasTracerArcCentrePoint(t,o,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo}),l=this.compasTracerArcCentrePoint(t,a,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo})):(this.compasEcarter(m(i,a),e),c=this.compasTracerArcCentrePoint(i,a,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo}),n=this.compasTracerArcCentrePoint(t,a,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo}),l=this.compasTracerArcCentrePoint(t,o,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo}),u=this.compasTracerArcCentrePoint(i,o,{delta:e.delta,couleur:e.couleurCompas,sens:e.sens,vitesse:e.vitesse,tempo:e.tempo})),this.compasMasquer(),a.x<=o.x?this.regleDroite(a,o,e):this.regleDroite(o,a,e),this.regleMasquer(),e.coderFigure){const h=this.segmentCodage(i,r,{codage:e.codage,couleur:e.couleurCodage,tempo:e.tempo}),M=this.segmentCodage(r,t,{codage:e.codage,couleur:e.couleurCodage,tempo:e.tempo}),f=this.codageAngleDroit(i,r,s,{couleur:e.couleurCodage,tempo:e.tempo,vitesse:e.vitesse});return[c,n,l,u,h,M,...f]}else return[c,n,l,u]},le=function(i,t,e="X"){const r=H(i,t);this.regleMontrer(),this.regleDeplacer(i),this.regleRotation(t),this.crayonMontrer();const s=g(i,r,-90),a=g(i,r,90),o=p(r,s,.2),c=p(r,a,.2);this.y(o)>this.y(c)?this.trait(r,o):this.trait(r,c),this.regleMasquer(),this.x(i)<this.x(t)?(this.equerreDeplacer(i),this.equerreMontrer(),this.equerreRotation(t)):(this.equerreDeplacer(t),this.equerreMontrer(),this.equerreRotation(i)),this.equerreDeplacer(r),this.crayonDeplacer(r),this.trait(r,s),this.equerreMasquer(),this.regleDroite(s,a),this.regleMasquer(),this.segmentCodage(i,r,{codage:e}),this.segmentCodage(r,t,{codage:e}),this.codageAngleDroit(i,r,s)},ue=function(i,t,e,r=!0){const s=$(i,t);s.isVisible=!1;const a=R(e,s);let o,c;this.x(i)<this.x(t)?(o=i,c=t):(o=t,c=i),(this.x(a)<this.x(o)||this.x(a)>this.x(c))&&(this.x(a)<this.x(o)&&this.regleProlongerSegment(c,o,{longueur:m(o,a)+2,pointilles:!0,couleur:"red"}),this.x(a)>this.x(c)&&this.regleProlongerSegment(o,c,{longueur:m(c,a)+2,pointilles:!0,couleur:"red"}),this.regleMasquer()),this.x(i)<this.x(t)?(this.equerreDeplacer(i),this.equerreMontrer(),this.equerreRotation(t)):(this.equerreDeplacer(t),this.equerreMontrer(),this.equerreRotation(i)),this.equerreDeplacer(a),this.crayonMontrer(),this.crayonDeplacer(a),this.trait(a,e,{epaisseur:1,couleur:"red"}),this.equerreMasquer(),r&&this.codageAngleDroit(i,a,e,{epaisseur:1,couleur:"red"}),this.crayonMasquer()},he=function(i,t,e,r={}){r.codage=r.codage??"X",r.epaisseur=r.epaisseur??1,r.couleur=r.couleur??"green";const s=H(i,t);this.regleMontrer(i,r),this.regleRotation(t,r),this.crayonMontrer();const a=g(i,s,-90),o=g(i,s,90),c=p(s,a,.2),n=p(s,o,.2);c.y>n.y?this.trait(s,c,r):this.trait(s,n,r),this.regleSegment(s,e,r),r.codage&&(this.segmentCodage(i,s,r),this.segmentCodage(s,t,r))},me=function(i,t,e,r={}){r.codage=r.codage??"/",r.distanceDeA=r.distanceDeA??2,r.masquerTraitsDeConstructions=r.masquerTraitsDeConstructions??!0,r.longueur=r.longueur??m(t,i),r.epaisseur=r.epaisseur??1;const s=p(t,i,r.distanceDeA),a=p(t,e,r.distanceDeA),o=z(i,t,e),c=g(t,s,-(180-o)),n=this.compasTracerArcCentrePoint(t,s,r),l=this.compasTracerArcCentrePoint(t,a,r),u=this.compasTracerArcCentrePoint(s,c,r),h=this.compasTracerArcCentrePoint(a,c,r);return this.compasMasquer(),this.regleDemiDroiteOriginePoint(t,c,r),this.regleMasquer(),this.crayonMasquer(),r.codage&&(this.angleCodage(i,t,c,r),this.angleCodage(c,t,e,r)),r.masquerTraitsDeConstructions&&(this.traitMasquer(n),this.traitMasquer(l),this.traitMasquer(u),this.traitMasquer(h)),{arc1:n,arc2:l,arc3:u,arc4:h}},ge=function(i,t,e,r={}){r.couleurMediatrice=r.couleurMediatrice??r.couleur??this.couleur,r.couleurCercle=r.couleurCercle??r.couleur??this.couleur,r.codage=r.codage??"X";const s=this.mediatriceAuCompas(i,t,r);this.traitMasquer(s[0]),this.traitMasquer(s[1]),this.traitMasquer(s[2]),this.traitMasquer(s[3]),r.codage="||";const a=this.mediatriceAuCompas(t,e,r);this.traitMasquer(a[0]),this.traitMasquer(a[1]),this.traitMasquer(a[2]),this.traitMasquer(a[3]),r.codage="///";const o=this.mediatriceAuCompas(i,e,r);this.traitMasquer(o[0]),this.traitMasquer(o[1]),this.traitMasquer(o[2]),this.traitMasquer(o[3]);const c=ee(i,t,e);r.couleur=r.couleurCercle,this.compasCercleCentrePoint(c,i,r)},pe=function(i,t,e,r){let s,a,o;i.x<t.x?(s=i,a=t):(s=t,a=i);const c=$(i,t),n=R(e,c);n.x<a.x?o=p(n,a,-2):n.x>a.x?o=p(n,a,2):o=p(n,s,2);const l=R(o,te(e,c)),u=p(l,e,6);if(n.x<s.x&&m(n,s)>3&&(this.regleProlongerSegment(a,s,r),this.regleMasquer(r)),n.x>a.x&&m(n,a)>3&&this.regleProlongerSegment(s,a,r),this.equerreMontrer(o,r),u.x>l.x?this.equerreRotation(c.angleAvecHorizontale-90,r):this.equerreRotation(c.angleAvecHorizontale+90,r),o.y>l.y)this.regle.visibilite?(this.regleDeplacer(o,Object.assign({},r,{tempo:0})),this.regleRotation(l,Object.assign({},r,{tempo:0}))):(this.regleDeplacer(o,Object.assign({},r,{vitesse:1e3,tempo:0})),this.regleRotation(l,Object.assign({},r,{sens:1e3,tempo:0})));else{const h=p(l,o,-2);this.regle.visibilite?(this.regleDeplacer(h,Object.assign({},r,{tempo:0})),this.regleRotation(o,Object.assign({},r,{tempo:0}))):(this.regleDeplacer(h,Object.assign({},r,{vitesse:1e3,tempo:0})),this.regleRotation(o,Object.assign({},r,{sens:1e3,tempo:0})),this.regleMontrer())}this.equerreDeplacer(l,r),this.crayonMontrer(),this.crayonDeplacer(l,r),this.tracer(u,r),this.regleMasquer(r),this.equerreMasquer(r),this.crayonMasquer(r)},de=function(i,t,e,r={}){const s=this.regle.longueur,a=this.equerre.zoom,o=$(i,t);o.nom=`(${i.nom}${t.nom})`;let c;if(i.nom===void 0&&(i.nom="A"),t.nom===void 0&&(t.nom="B"),e.estSur($(i,t))){const n=g(e,e,0),l=V(e,o);e=w(l,T(n,5.5)),c=7.5}else{const n=R(e,o);c=m(n,e)+2}this.equerreZoom(c*100/7.5,r),this.regleModifierLongueur(Math.max(c*2,15),r),this.perpendiculaireRegleEquerreDroitePoint(o,e,r),this.equerreZoom(a,r),this.regleModifierLongueur(s,r),this.regleMasquer(r),this.equerreMasquer(r),this.crayonMasquer(r)},fe=function(i,t,e={}){if(t.estSur(i)){const r=t,s=T(t,6),a=x(i,-1e4),o=x(i,1e4),c=w(i,s);let n=g(c,t,90);n.y<t.y&&(n=g(n,t,180));const l=z(q(1e4,r.y),r,o);e.description&&this.textePosition(`1. Placer un côté de l'angle droit de l'équerre sur la droite ${i.nom} avec l'angle droit au point ${t.nom}.`,0,10,{couleur:"lightblue"}),this.equerreRotation(l,e),this.equerreMontrer(r,e),e.description&&this.textePosition("2. Tracer le long de l'autre côté de l'angle droit de l'équerre",0,9.3,{couleur:"lightblue"}),this.crayonMontrer(n,e),this.tracer(r,e),this.equerreMasquer(e),e.description&&this.textePosition(`3. Prolonger la perpendiculaire à ${i.nom} à la règle.`,0,8.6,{couleur:"lightblue"}),this.regleMontrer(n,e),this.regleRotation(l-90,e),this.crayonDeplacer(n,e),this.tracer(g(n,r,180),e),e.description&&this.textePosition("4. Coder l'angle droit.",0,7.9,{couleur:"lightblue"}),this.regleMasquer(e),this.codageAngleDroit(a,r,n,e)}else{const r=R(t,i),s=g(t,r,90),a=g(s,r,180),o=d(t,r,1.2),c=z(q(1e4,r.y),r,a);e.description&&this.textePosition(`1. Placer un côté de l'angle droit de l'équerre sur la droite ${i.nom} et l'autre côté de l'angle droit passant par le point ${t.nom}.`,0,10,{couleur:"lightblue"}),this.equerreRotation(c,e),this.equerreMontrer(r,e),e.description&&this.textePosition(`2. Tracer le segment de droite passant par le point ${t.nom}`,0,9.3,{couleur:"lightblue"}),this.crayonMontrer(t,e),this.tracer(r,e),this.equerreMasquer(e),e.description&&this.textePosition(`3. Prolonger la perpendiculaire à ${i.nom} à la règle.`,0,8.6,{couleur:"lightblue"}),this.regleMontrer(o,e),this.regleRotation(c-90,e),this.crayonDeplacer(o,e),this.tracer(g(o,r,180),e),e.description&&this.textePosition("4. Coder l'angle droit.",0,7.9,{couleur:"lightblue"}),this.regleMasquer(e),this.codageAngleDroit(s,r,t,Object.assign({},e,{couleurCodage:"red"}))}},qe=function(i,t,e={}){const r=x(i,t,"A"),s=x(i,t+5),a=g(s,r,90),o=g(a,r,180);i.nom===void 0&&(i.nom="(d)"),this.traitRapide(x(i,-20),x(i,20),e),this.pointCreer(r,e),e.description&&this.textePosition(`1. Placer un côté de l'angle droit de l'équerre sur la droite ${i.nom}.`,0,10,{couleur:"lightblue"}),this.equerreRotation(i.angleAvecHorizontale,e),this.equerreMontrer(s,e),e.description&&this.textePosition(`2. Faire glisser l'équerre sur la droite jusqu'au point ${r.nom}`,0,9.3,{couleur:"lightblue"}),this.equerreDeplacer(r,e),e.description&&this.textePosition("3. Tracer le long de l'autre côté de l'angle droit de l'équerre.",0,8.6,{couleur:"lightblue"}),this.crayonMontrer(r,e),this.tracer(a,e),this.equerreMasquer(e),e.description&&this.textePosition(`4. Prolonger la perpendiculaire à ${i.nom} à la règle.`,0,7.9,{couleur:"lightblue"}),this.regleRotation(i.angleAvecHorizontale-90,e),this.regleMontrer(a,e),this.crayonDeplacer(a,e),this.tracer(o,e),e.description&&this.textePosition("4. Coder l'angle droit.",0,7.2,{couleur:"lightblue"}),this.regleMasquer(e),this.codageAngleDroit(a,r,s,e)},Me=function(i,t,e={}){const r=x(i,t,"A"),s=x(i,t+3,"B"),a=x(i,t-3,"C"),o=X(s,r,90,1.2),c=X(s,r,-90,1.2);i.nom===void 0&&(i.nom="(d)"),this.traitRapide(x(i,-20),x(i,20),e),this.pointCreer(r,e),e.description&&this.textePosition("1. Avec le compas, marquer deux points B et C de part et d'autre de A, tels que AB=AC.",0,10,{couleur:"lightblue"}),this.compasEcarter2Points(r,s,e),this.compasTracerArcCentrePoint(r,s,{couleur:"lightgray",epaisseur:1}),this.compasTracerArcCentrePoint(r,a,{couleur:"lightgray",epaisseur:1}),e.description&&this.textePosition("2. Choisir un écartement de compas supérieur à la longueur AB.",0,9.3,{couleur:"lightblue"}),this.compasEcarter2Points(s,o,e),e.description&&this.textePosition("3. Tracer un arc de cercle de centre B avec cet écartement.",0,8.6,{couleur:"lightblue"}),this.compasTracerArcCentrePoint(s,o,{couleur:"lightgray",epaisseur:1}),e.description&&this.textePosition("4. Tracer un arc de cercle de centre C en conservant le même écartement.",0,7.9,{couleur:"lightblue"}),this.compasTracerArcCentrePoint(a,o,{couleur:"lightgray",epaisseur:1}),this.compasMasquer(e),e.description&&this.textePosition("4. Tracer la droite qui passe par le point d'intersection des arcs de cercle et par le point A.",0,7.2,{couleur:"lightblue"}),this.regleRotation(i.angleAvecHorizontale-90,e);const n=d(o,r,1.1),l=d(c,r,1.1);this.regleMontrer(n,e),this.crayonMontrer(n,e),this.tracer(l,e),e.description&&this.textePosition("5. Coder l'angle droit.",0,6.5,{couleur:"lightblue"}),this.regleMasquer(e),this.codageAngleDroit(o,r,s,e)},Pe=function(i,t,e={}){const r=R(t,i),s=X(t,r,-90,1.2,"B"),a=d(s,r,-.7,"C"),o=g(t,r,180),c=d(t,r,1.2),n=d(t,r,-1.2);i.nom===""&&(i.nom="(d)"),t.nom===""&&(t.nom="A"),this.traitRapide(x(i,-20),x(i,20),e),this.textePoint(i.nom,j(x(i,0),D(0,-.5)),e),this.pointCreer(t,e),e.description&&this.textePosition(`1. Choisir deux points B et C sur la droite ${i.nom}.`,0,11,{couleur:"lightblue",tempo:20}),this.tempo=20,this.pointCreer(s,e),this.pointCreer(a,e),e.description&&this.textePosition(`2. Tracer un arc de cercle de centre B passant par A et un autre de centre C passant par ${t.nom}.`,0,10.3,{couleur:"lightblue",tempo:20}),this.compasEcarter2Points(s,t,e),this.compasTracerArcCentrePoint(s,o,Object.assign({},e,{couleur:"lightgray",epaisseur:1})),this.compasEcarter2Points(a,t,e),this.compasTracerArcCentrePoint(a,o,Object.assign({},e,{couleur:"lightgray",epaisseur:1})),e.description&&this.textePosition(`3. Ces deux arcs de cercle se recoupent en un point qui est le symétrique de ${t.nom} par rapport à ${i.nom}`,0,9.6,{couleur:"lightblue",tempo:20}),this.compasMasquer(e),e.description&&this.textePosition("4. Tracer la droite qui passe par le point d'intersection des arcs de cercle et par le point A.",0,8.9,{couleur:"lightblue",tempo:20}),this.regleRotation(i.angleAvecHorizontale-90,e),this.regleMontrer(c,e),this.crayonMontrer(c,e),this.tracer(n,e),e.description&&this.textePosition("5. Coder l'angle droit.",0,8.2,{couleur:"lightblue",tempo:20}),this.regleMasquer(e),this.codageAngleDroit(c,r,s,e)},$e=function(i,t,e,r,s={description:!0}){i.nom="A",t.nom="B",e.nom="M";const a=d(i,t,2),o=d(t,i,2),c=$(i,t),n=g(c,i,90),l=R(e,n),u=d(e,l,1.5),h=d(l,e,2),M=this.tempo;this.tempo=10,this.pointMasquer(a,o,s),this.traitRapide(a,o,s),this.textePosition("Parallèle à une droite passant par un point (règle et équerre)",-10,10.7,{couleur:"green",taille:4,tempo:20}),s.description&&this.textePosition("On veut construire la parallèle à (AB) passant par M à la règle et à l'equerre.",-10,10,{couleur:"red",taille:4,tempo:50}),s.description&&this.textePosition("1. Placer l'équerre un côté de l'angle droit le long de la droite (AB).",-9,9.3,{couleur:"lightblue",taille:2,tempo:10}),this.equerreMontrer(i,s),this.equerreRotation(c.angleAvecHorizontale+(r?-90:0),Object.assign({},s,{tempo:20})),s.description&&this.textePosition("2. Placer ensuite la règle contre l'autre côté de l'angle droit de l'équerre.",-9,8.6,{couleur:"lightblue",taille:2,tempo:10}),this.regleRotation(c.angleAvecHorizontale-90,s),this.regleMontrer(a,s),this.regleDeplacer(d(g(t,i,90),i,1.5),Object.assign({},s,{tempo:20})),s.description&&this.textePosition("Remarque : On peut tracer des pointillés pour matérialiser la position de la règle.",-9.5,7.9,{couleur:"pink",taille:2,tempo:10}),this.crayonMontrer(i,s),this.tracer(d(g(t,i,r?90:-90),i,1.5),s),s.description&&this.textePosition("3. Faire glisser l'équerre le long de la règle jusqu'au point M.",-9,7.2,{couleur:"lightblue",taille:2,tempo:10}),r||this.equerreRotation(c.angleAvecHorizontale-90,s),this.equerreDeplacer(l,Object.assign({},s,{tempo:20})),s.description&&this.textePosition("4. Tracer le segment de droite passant par M.",-9,6.5,{couleur:"lightblue",taille:2,tempo:10}),this.crayonDeplacer(l,s),this.tracer(u,s),this.equerreMasquer(s),s.description&&this.textePosition("5. Placer la règle sur ce segment et prolonger la parallèle à (AB).",-9,5.8,{couleur:"lightblue",taille:2,tempo:10}),this.regleDeplacer(h,s),this.regleRotation(c.angleAvecHorizontale,s),this.tracer(h,s),this.regleMasquer(s),s.description&&this.textePosition("6. Pour finir, coder la figure.",-9,5.1,{couleur:"lightblue",taille:2,tempo:20}),this.codageAngleDroit(t,i,l,s),this.codageAngleDroit(i,l,e,s),this.crayonMasquer(s),this.tempo=M},Ce=function(i,t,e,r={description:!0}){const s=E(e,i,t,"D");i.nom="A",t.nom="B",e.nom="C";const a=d(i,t,1.5),o=d(t,i,1.5),c=d(e,s,1.5),n=d(s,e,1.5),l=this.tempo;this.tempo=10,this.traitRapide(a,o,r),this.textePosition("Parallèle à une droite passant par un point (compas et règle)",-10,10.7,{couleur:"green",taille:4,tempo:20}),r.description&&this.textePosition("On veut construire la parallèle à (AB) passant par C à la règle et au compas.",-10,10,{couleur:"red",taille:4,tempo:30}),r.description&&this.textePosition("1. Prendre avec le compas l'écartement correspondant à la longueur AB.",-9,9.3,{couleur:"lightblue",taille:2,tempo:10}),this.compasEcarter2Points(i,t,r),r.description&&this.textePosition("2. Reporter cette longueur à partir du point C.",-9,8.6,{couleur:"lightblue",taille:2,tempo:10}),this.compasTracerArcCentrePoint(e,s,Object.assign({},r,{couleur:"lightgray",epaisseur:1})),r.description&&this.textePosition("3. Prendre ensuite avec le compas l'écartement correspondant à la longueur AC.",-9,7.9,{couleur:"lightblue",taille:2,tempo:10}),this.compasEcarter2Points(i,e,r),r.description&&this.textePosition("4. Reporter cette longueur à partir du point B.",-9,7.2,{couleur:"lightblue",taille:2,tempo:10}),this.compasTracerArcCentrePoint(t,s,Object.assign({},r,{couleur:"lightgray",epaisseur:1})),this.compasMasquer(r),r.description&&this.textePosition("5. Noter D, le point d'intersection des deux arcs de cercle.",-9,6.5,{couleur:"lightblue",taille:2,tempo:10}),this.pointCreer(s,r),r.description&&this.textePosition("6. Tracer la droite passant par C et D.",-9,5.8,{couleur:"lightblue",taille:2,tempo:10}),this.regleSegment(c,n,r),this.regleMasquer(r),this.crayonMasquer(r),this.tempo=l},xe=function(i,t,e,r={}){const s=E(e,i,t),a=d(e,s,1.5),o=d(s,e,1.5);return this.compasEcarter2Points(i,t,r),this.compasTracerArcCentrePoint(e,s,r),this.compasEcarter2Points(i,e,r),this.compasTracerArcCentrePoint(t,s,r),this.compasMasquer(r),this.regleSegment(a,o,r),s};function be(i,t,e,r="",s=!0){const a=E(e,t,i);a.nom=r;const o=Math.min(i.x,t.x,e.x,a.x),c=Math.min(i.y,t.y,e.y,a.y);this.traitRapide(i,t),this.traitRapide(t,e),this.pointCreer(i,{tempo:0}),this.pointCreer(t,{tempo:0}),this.pointCreer(e,{tempo:0}),s&&this.textePosition(`${i.nom+t.nom+e.nom+a.nom} est un parallélogramme donc ses côtés opposés sont de même longueur.`,o-1,c-1),this.compasEcarter2Points(t,i),this.textePosition(`${t.nom+i.nom} = ${e.nom+a.nom}`,o-1,c-2),this.compasTracerArcCentrePoint(e,a),this.compasEcarter2Points(t,e),this.textePosition(`${t.nom+e.nom} = ${i.nom+a.nom}`,o-1,c-3),this.compasTracerArcCentrePoint(i,a),this.pointCreer(a),this.compasMasquer(),this.regleSegment(e,a),this.regleSegment(a,i),this.regleMasquer(),this.crayonMasquer(),this.segmentCodage(i,t,{codage:"///",couleur:this.couleurCodage,tempo:0}),this.segmentCodage(a,e,{codage:"///",couleur:this.couleurCodage,tempo:0}),this.segmentCodage(t,e,{codage:"//",couleur:this.couleurCodage,tempo:0}),this.segmentCodage(i,a,{codage:"//",couleur:this.couleurCodage,tempo:0})}function ye(i,t,e,r="",s="",a=!0){const o=E(e,i,e);o.nom=r;const c=E(e,t,e);c.nom=s;const n=i.nom+t.nom+o.nom+c.nom;(m(i,o)>12||m(t,c)>12)&&this.regleModifierLongueur(30);const l=Math.min(i.x,t.x,o.x,c.x),u=Math.min(i.y,t.y,o.y,c.y);this.traitRapide(i,t),this.pointCreer(i,{tempo:0}),this.pointCreer(t,{tempo:0}),this.pointCreer(e,{tempo:0}),a&&n.length===4&&this.textePosition(`${i.nom+t.nom+o.nom+c.nom} est un parallélogramme donc ses diagonales se coupent en leur milieu.`,l-1,u-1),this.pointilles=!0,this.epaisseur=1,this.couleur=this.couleurTraitsDeConstruction,this.regleDemiDroiteOriginePoint(i,e,{longueur:m(i,o)+3}),this.regleMasquer(),this.crayonMasquer(),this.compasEcarter2Points(i,e),a&&n.length===4&&this.textePosition(`${i.nom+e.nom} = ${e.nom+o.nom}`,l-1,u-2),this.pointilles=!1,this.compasTracerArcCentrePoint(e,o),this.compasMasquer(),this.pointilles=!0,this.regleDemiDroiteOriginePoint(t,e,{longueur:m(t,c)+3}),this.regleMasquer(),this.crayonMasquer(),this.pointilles=!1,this.compasEcarter2Points(t,e),a&&n.length===4&&this.textePosition(`${t.nom+e.nom} = ${e.nom+c.nom}`,l-1,u-3),this.compasTracerArcCentrePoint(e,c),this.compasMasquer(),this.couleur="blue",this.epaisseur=3,this.pointCreer(c),this.regleSegment(i,c),this.regleSegment(c,o),this.regleSegment(o,t),this.regleMasquer(),this.compasMasquer(),this.crayonMasquer(),this.segmentCodage(i,e,{codage:"//",couleur:this.couleurCodage,tempo:0}),this.segmentCodage(e,o,{codage:"//",couleur:this.couleurCodage,tempo:0}),this.segmentCodage(t,e,{codage:"O",couleur:this.couleurCodage,tempo:0}),this.segmentCodage(e,c,{codage:"O",couleur:this.couleurCodage,tempo:0})}function ve(i,t,e,r){const s=p(t,e,m(t,e)+2),a=p(t,i,m(t,i)+2),o=E(e,t,i);this.traitRapide(t,s),this.traitRapide(t,a),this.pointCreer(r,{tempo:0}),this.pointCreer(t,{tempo:0}),this.regleDemiDroiteOriginePoint(t,r,{couleur:this.couleurTraitsDeConstruction,epaisseur:1,pointilles:!0}),this.pointilles=!1,this.regleMasquer(),this.crayonMasquer(),this.compasEcarter2Points(t,r),this.compasTracerArcCentrePoint(r,o,{couleur:this.couleurTraitsDeConstruction}),this.compasMasquer(),this.paralleleRegleEquerre2points3epoint(s,t,o,{couleur:this.couleurTraitsDeConstruction,epaisseur:1}),this.equerreMasquer(),this.regleDroite(o,i,{couleur:this.couleurTraitsDeConstruction,epaisseur:1}),this.paralleleRegleEquerre2points3epoint(t,a,o,{couleur:this.couleurTraitsDeConstruction,epaisseur:1}),this.equerreMasquer(),this.regleDroite(o,e,{couleur:this.couleurTraitsDeConstruction,epaisseur:1}),this.pointCreer(i,{tempo:0}),this.pointCreer(e,{tempo:0}),this.pointCreer(o,{tempo:0}),this.regleSegment(e,o),this.regleSegment(o,i),this.regleMasquer(),this.crayonMasquer()}function De(i,t,e,r,{distance:s=1,monAngle:a=40,nom:o="",nommerGraduations:c=!1}={}){this.traitRapide(i,t),this.regleMasquerGraduations(),this.regleMontrer(i);const n=X(t,i,a,(Math.max(e,r)+1)*s/m(i,t));this.regleSegment(i,n),this.regleMasquer(),this.crayonMasquer();const l=[i];for(let M=1;M<=Math.max(e,r);M++)l.push(P(i,s*M,a+$(i,t).angleAvecHorizontale)),this.compasTracerArcCentrePoint(l[M-1],l[M]),c&&this.pointCreer(l[M],{label:i.nom+"_"+M,dx:-1,dy:.5});this.compasMasquer(),this.regleSegment(l[r],t),this.regleMasquer(),this.crayonMasquer();const u=this.paralleleAuCompas(l[r],t,l[e]),h=d(t,i,e/r);return u.y>h.y&&this.regleProlongerSegment(u,h,{longueur:1}),this.regleSegment(i,h,{couleur:"red",epaisseur:3}),o&&this.pointCreer(h,{label:o}),this.regleMasquer(),this.crayonMasquer(),h}const je=function(i,t,e){t=q(5,0,i[0]);const s=P(t,e,v(-20,20),i[1]),a=g(t,s,-90,i[2]),o=g(s,t,90,i[3]),c=p(t,o,e+2,"E"),n=p(o,a,e+2,"F");return this.equerreZoom((e+3)*100/7.5),this.tempo=20,this.textePosition(`1) On veut construire un carré dont les côtés mesurent ${e} cm, donc on commence par tracer un segment, ici [${i[0]+i[1]}], de cette longueur.`,0,-2),this.pointCreer(t,{tempo:0}),this.pointNommer(t,t.nom,{dx:-.5,dy:0}),this.regleSegment(t,s),this.pointCreer(s),this.regleMasquer(),this.longueurSegment(t,s,-1),this.textePosition(`2) Un carré possède 4 angles droits, donc on trace la perpendiculaire à (${i[0]+i[1]}) passant par ${i[0]}.`,0,-2-1*1),this.equerreMontrer(),this.equerreDeplacer(t),this.equerreRotation(s),this.trait(t,c),this.equerreMasquer(),this.codageAngleDroit(s,t,o),this.textePosition(`3) Les 4 côtés d'un carré sont de la même longueur, donc on place le point ${i[3]} sur cette perpendiculaire, à ${e} cm de ${i[0]}.`,0,-2-2*1),this.regleSegment(t,o),this.pointCreer(o,{tempo:0}),this.pointNommer(o,o.nom,{dx:-.7,dy:.5}),this.regleMasquer(),this.segmentCodage(t,s),this.segmentCodage(t,o),this.textePosition(`4) De même, on trace la perpendiculaire à (${i[0]+i[3]}) passant par ${i[3]}, puis on place le point ${i[2]} sur cette perpendiculaire, à ${e} cm de ${i[3]}.`,0,-2-3*1),this.equerreMontrer(),this.equerreDeplacer(o),this.equerreRotation(t),this.trait(o,n),this.equerreMasquer(),this.codageAngleDroit(t,o,a),this.regleSegment(o,a),this.pointCreer(a,{tempo:0}),this.pointNommer(a,a.nom,{dx:0,dy:.9}),this.regleMasquer(),this.segmentCodage(o,a),this.textePosition(`5) On trace le segment [${i[1]+i[2]}].`,0,-2-4*1),this.regleSegment(a,s),this.regleMasquer(),this.segmentCodage(s,a),this.textePosition(`6) On vérifie que ${i[1]+i[2]} = ${e} cm et que les deux derniers angles tracés sont droits.`,0,-2-5*1),this.equerreMontrer(a,{tempo:0}),this.equerreRotation(o),this.equerreMasquer(),this.codageAngleDroit(o,a,s),this.equerreMontrer(s,{tempo:0}),this.equerreRotation(a),this.equerreMasquer(),this.codageAngleDroit(a,s,t),re(t,s,a,o)},F=["/","//","///","O","\\\\"],Re=function(i,t,e,r={}){(e===void 0||e==="")&&(e=i.nom+"'");const s=Q(i,t,e);if(m(i,s)!==0){const a=H(i,s),o=g(i,a,90),c=g(o,a,180);this.regleMasquerGraduations(r),this.perpendiculaireRegleEquerre2points3epoint(o,c,i,Object.assign({},r,{couleur:r.couleur??this.couleurTraitsDeConstruction,epaisseur:this.epaisseurTraitsDeConstruction,pointilles:!0})),this.compasEcarter2Points(a,i,r),this.compasTracerArcCentrePoint(a,s,r),this.regleMasquer(r),this.equerreMasquer(r),this.segmentCodage(i,a,r),this.segmentCodage(s,a,r),this.crayonMasquer(r),this.compasMasquer(r)}this.pointCreer(s,r)},Ee=function(i,t,e,r,s={}){(r===void 0||r==="")&&(r=i.nom+"'");const a=g(i,t,e,r);this.regleSegment(t,i,Object.assign({},s,{epaisseur:this.epaisseurTraitsDeConstruction,pointilles:!0})),this.rapporteurMontrer(t,s),this.rapporteurTracerDemiDroiteAngle(t,i,e,Object.assign({},s,{epaisseur:this.epaisseurTraitsDeConstruction,pointilles:!0})),this.regleMasquer(s),this.rapporteurMasquer(s),this.compasEcarter2Points(t,i,s),this.compasTracerArcCentrePoint(t,a,s),this.compasMasquer(s),this.pointCreer(a,s),s.codage&&(Math.abs(e)===90?this.codageAngleDroit(i,t,a,s):(this.angleCodage(i,t,a,s),this.textePoint(Math.abs(e)+"°",j(d(g(i,t,e/2),t,1.3/m(t,i)),D(-.2,.5)),s)))},Te=function(i,t,e,r,s={}){const a=D(t,e);(r===void 0||r==="")&&(r=i.nom+"'");const o=j(i,a,r);m(t,i)!==0&&(this.compasEcarter2Points(t,i,s),this.compasTracerArcCentrePoint(e,o,s),this.compasEcarter2Points(t,e,s),this.compasTracerArcCentrePoint(i,o,s)),this.compasMasquer(),this.pointCreer(o,s);const c=v(0,4),n=v(0,4,c),l=F[c],u=F[n];this.traitRapide(i,o,Object.assign({},s,{epaisseur:.5,pointilles:!0})),this.traitRapide(t,e,Object.assign({},s,{epaisseur:.5,pointilles:!0})),this.segmentCodage(i,o,Object.assign({},s,{codage:l})),this.segmentCodage(t,e,Object.assign({},s,{codage:l})),this.traitRapide(e,o,Object.assign({},s,{epaisseur:.5,pointilles:!0})),this.traitRapide(t,i,Object.assign({},s,{epaisseur:.5,pointilles:!0})),this.segmentCodage(e,o,Object.assign({},s,{codage:u})),this.segmentCodage(t,i,Object.assign({},s,{codage:u}))},Se=function(i,t,e,r={}){(e===void 0||e==="")&&(e=i.nom+"'");const s=g(i,t,180,e);this.compasEcarter2Points(t,i,r),this.compasTracerArcCentrePoint(t,s,r),this.compasMasquer(r),this.crayonDeplacer(i,r),this.regleSegment(i,s,Object.assign({},r,{epaisseur:.5,pointilles:!0})),this.pointCreer(s,r),this.regleMasquer(r),this.crayonMasquer(r),this.segmentCodage(i,t,r),this.segmentCodage(t,s,r)},_e=function(i,t,e,r,s){let a;(r===void 0||r==="")&&(r=i.nom+"'");const o=d(i,t,e,r);e>0?a=this.textePosition(`Comme le rapport est positif, alors les points ${i.nom} et ${o.nom} sont du même côté de ${t.nom}.`,s.positionTexte.x,s.positionTexte.y,Object.assign({taille:15},s)):a=this.textePosition(`Comme le rapport est négatif, alors ${t.nom} est entre les points ${i.nom} et ${o.nom}.`,s.positionTexte.x,s.positionTexte.y,Object.assign({taille:15},s)),this.regleSegment(i,t,Object.assign({},s,{epaisseur:.5,pointilles:!0}));const c=m(i,t),n=se(c,1)*Math.abs(e),l=this.textePosition(`La mesure de [${t.nom}${i.nom}] est ${O(c,1)} cm et le rapport de l'homothétie est ${O(e,3)}`,s.positionTexte.x,s.positionTexte.y-1,Object.assign({taille:15},s)),u=this.textePosition(`donc ${t.nom}${o.nom} est ${O(c,1)} cm × ${O(Math.abs(e),3)} = ${O(n,2)} cm.`,s.positionTexte.x,s.positionTexte.y-2,Object.assign({taille:15},s));this.regleSegment(t,o,Object.assign({},s,{epaisseur:.5,pointilles:!0})),this.regleMasquer(s),this.crayonMasquer(s),this.pointCreer(o,Object.assign({couleurPoint:"blue"},s)),this.pause(),this.texteMasquer(l,s),this.texteMasquer(u,s),this.texteMasquer(a,s)},Oe=function(i,t,e,r=[],s={couleur:this.couleur,couleurCodage:this.couleurCodage}){let a;const o=g(i,t,e);let c;const n=ie(F);for(let l=0;l<i.listePoints.length;l++)r[l]!==void 0?a=r[l]:a=i.listePoints[l].nom+"'",l<1?c=s.codage??"plein":c="",m(t,i.listePoints[l])!==0&&(this.rotationPoint(i.listePoints[l],t,e,a,Object.assign({},s,{codage:c})),this.segmentCodage(i.listePoints[l],t,Object.assign({},s,{codage:n[l]})),this.segmentCodage(o.listePoints[l],t,Object.assign({},s,{codage:n[l]})));this.polygoneRapide(...o.listePoints,Object.assign(s,{epaisseur:2}))},He=function(i,t,e=[],r={}){let s;const a=Q(i,t);let o=0;const c=["/","//","///","O","\\\\"];for(const n of i.listePoints)e[o]!==void 0?s=e[o]:s=n.nom+"'",this.symetrieAxialePoint(n,t,s,Object.assign({},r,{codage:c[o],epaisseur:.5})),o++;this.compasMasquer(r),this.crayonMasquer(r),this.polygoneRapide(...a.listePoints,Object.assign({},r,{epaisseur:2}))},Ie=function(i,t,e,r=[],s={}){let a;const o=D(t,e),c=j(i,o);for(let n=0;n<i.listePoints.length;n++)r[n]!==void 0?a=r[n]:a=i.listePoints[n].nom+"'",this.translationPoint(i.listePoints[n],t,e,a,s);this.polygoneRapide(...c.listePoints,Object.assign({},s,{epaisseur:2}))},Le=function(i,t,e=[],r={}){const s=g(i,t,180);let a,o=0;const c=["/","//","///","O","\\\\"];for(const n of i.listePoints)e[o]!==void 0?a=e[o]:a=n.nom+"'",this.demiTourPoint(n,t,a,Object.assign({},r,{codage:c[o]})),o++;this.polygoneRapide(...s.listePoints,Object.assign({},r,{epaisseur:2}))},ze=function(i,t,e,r=[],s={}){let a;const o=d(i,t,e),c=this.textePosition("Comme k est "+(e>=0?"positif":"négatif")+" alors "+(e>=0?"les figures sont du même côté de "+t.nom:t.nom+" est entre les figures"),0,0,Object.assign({taille:15},s));let n=0;for(const l of i.listePoints)r[n]!==void 0?a=r[n]:a=l.nom+"'",this.homothetiePoint(l,t,e,a,Object.assign({},s,{epaisseur:1,positionTexte:{x:0,y:0}})),n++;this.polygoneRapide(...o.listePoints,Object.assign({},s,{epaisseur:2})),this.texteMasquer(c)},Xe=function(i,t,e,r,s={}){const a=q(6,0),o=P(a,t,v(-20,20)),n=ae(a,o,e,r).listePoints[2];let l=s.description??!0;return i.length!==3?l=!1:(a.nom=i[0],o.nom=i[1],n.nom=i[2]),l&&this.textePosition(`${a.nom+o.nom} = ${C(t)} cm`,0,-2,s),this.pointCreer(a,s),this.regleSegment(a,o,s),this.pointCreer(o,s),this.crayonMasquer(s),l&&this.textePosition(`${a.nom+n.nom} = ${C(e)} cm donc ${n.nom} appartient au cercle de centre ${a.nom} et de rayon ${C(e)} cm.`,0,-3,s),this.couleur="forestgreen",this.epaisseur=2,this.compasMontrer(a,s),this.compasEcarterAvecRegle(e,s),this.compasTracerArcCentrePoint(a,n,s),l&&this.textePosition(`${o.nom+n.nom} = ${C(r)} cm donc ${n.nom} appartient au cercle de centre ${o.nom} et de rayon ${C(r)} cm.`,0,-4,s),this.compasDeplacer(o,s),this.compasEcarterAvecRegle(r,s),this.compasTracerArcCentrePoint(o,n,s),this.compasMasquer(s),this.couleur="blue",this.epaisseur=3,l&&this.textePosition(`Le point ${n.nom} est à une intersection des deux cercles.`,0,-5,s),this.pointCreer(n,s),this.regleSegment(o,n,s),this.regleSegment(n,a,s),this.crayonMasquer(s),this.regleMasquer(s),[a,o,n]},we=function(i,t,e,r={}){const s=q(6,0),a=P(s,t,v(-20,20)),o=$(s,a);o.isVisible=!1;const c=V(a,o);c.isVisible=!1;const n=T(s,e);n.isVisible=!1;const l=w(c,n),u=d(l,a,1.2);let h=r.description??!0;return i.length!==3?h=!1:(s.nom=i[0],a.nom=i[1],l.nom=i[2]),m(s,l)>8&&this.equerreZoom(150),h&&this.textePosition(`${s.nom+a.nom} = ${C(t)} cm`,0,-2),this.equerreRotation(o.angleAvecHorizontale,r),this.pointCreer(s,r),this.regleSegment(s,a,r),this.pointCreer(a,r),h&&this.textePosition(`${s.nom+a.nom+l.nom} est un triangle rectangle en ${a.nom} donc ${l.nom} appartient à la perpendiculaire à (${s.nom+a.nom}) passant par ${a.nom}.`,0,-3,r),this.equerreMontrer(s,r),this.equerreDeplacer(a,r),this.tracer(u,r),this.equerreMasquer(r),this.codageAngleDroit(s,a,l,r),this.crayonMasquer(r),h&&this.textePosition(`${s.nom+l.nom} = ${C(e)} cm donc ${l.nom} appartient au cercle de centre ${s.nom} et de rayon ${C(e)} cm.`,0,-4,r),this.compasMontrer(s,r),this.compasEcarterAvecRegle(e,r),this.couleur="forestgreen",this.epaisseur=2,this.compasTracerArcCentrePoint(s,l,r),this.couleur="blue",this.epaisseur=2,h&&this.textePosition(`${l.nom} est à une intersection de la perpendiculaire et du cercle.`,0,-5,r),this.crayonMontrer(l,r),this.pointCreer(l,r),this.compasMasquer(r),this.regleSegment(s,l,r),this.regleMasquer(r),this.crayonMasquer(r),[s,a,l]},Fe=function(i,t,e,r={}){const s=q(6,0),a=P(s,t,v(-20,20)),o=$(s,a);o.isVisible=!1;const c=V(a,o);c.isVisible=!1;const n=T(a,e);n.isVisible=!1;const l=w(c,n),u=d(l,a,1.2);let h=r.description??!0;return i.length!==3?h=!1:(s.nom=i[0],a.nom=i[1],l.nom=i[2]),m(s,l)>8&&this.equerreZoom(150,r),h&&this.textePosition(`${s.nom+a.nom} = ${C(t)} cm`,0,-2,r),this.equerreRotation(o.angleAvecHorizontale,r),this.pointCreer(s,r),this.regleSegment(s,a,r),this.pointCreer(a,r),h&&this.textePosition(`${s.nom+a.nom+l.nom} est un triangle rectangle en ${a.nom} donc ${l.nom} appartient à la perpendiculaire à (${s.nom+a.nom}) passant par ${a.nom}.`,0,-3,r),this.equerreMontrer(s,r),this.equerreDeplacer(a,r),this.tracer(u,r),this.equerreMasquer(r),this.codageAngleDroit(s,a,l,r),h&&this.textePosition(`${a.nom+l.nom} = ${C(e)} cm donc ${l.nom} est à ${C(e)} cm de ${a.nom} sur la perpendiculaire à (${s.nom+a.nom}) passant par ${a.nom}.`,0,-4,r),this.regleMontrer(a,r),this.regleRotation(l,r),this.crayonDeplacer(l,r),this.pointCreer(l,r),this.couleur="blue",this.epaisseur=2,this.compasMasquer(r),this.regleSegment(s,l,r),this.regleMasquer(r),this.crayonMasquer(r),[s,a,l]},Ve=function(i,t,e,r,s={}){const a=v(-20,20),o=e,c=r,n=q(6,0),l=P(n,t,a),u=P(n,5.2,o+a),h=p(n,u,10),M=p(u,h,.4),f=P(l,3,180-c+a),S=p(l,f,10),K=p(f,S,-.4),G=P(l,5.2,180-c+a),W=p(G,S,.4),k=g($(n,l),n,o);u.isVisible=!1;const N=g($(l,n),l,-c);N.isVisible=!1;const b=oe(k,N);let _=s.description??!0;const A=s.mesure??!1;return i.length!==3?_=!1:(n.nom=i[0],l.nom=i[1],b.nom=i[2]),this.couleur="blue",this.epaisseur=3,this.pointCreer(n,s),_&&this.textePosition(`On trace le côté [${n.nom+l.nom}] de ${C(t)} cm.`,0,-4,s),this.regleSegment(n,l,s),this.pointCreer(l,s),this.couleur="grey",this.epaisseur=1,this.rapporteurMontrer(n,s),this.rapporteurDeplacer(n,s),this.rapporteurRotation(a,s),_&&this.textePosition(`On place un repère à ${o} degrés pour tracer la demi-droite [${n.nom+b.nom}).`,0,-5,s),this.epaisseur=3,this.trait(u,M,Object.assign({},s,{tempo:20})),this.epaisseur=1,this.rapporteurMasquer(s),this.regleSegment(n,h,s),this.regleMasquer(s),this.angleCodage(l,n,b,s),this.rapporteurMontrer(n,s),this.rapporteurDeplacer(l,s),_&&this.textePosition(`On place un repère à ${c} degrés pour tracer la demi-droite [${l.nom+b.nom}).`,0,-6,s),this.epaisseur=3,this.trait(f,K,Object.assign({},s,{tempo:10})),this.trait(G,W,Object.assign({},s,{tempo:20})),this.epaisseur=1,this.rapporteurMasquer(s),this.regleMontrer(l,s),this.regleSegment(l,S,s),this.angleCodage(b,l,n,s),this.pointCreer(b,s),this.couleur="blue",this.epaisseur=3,this.regleSegment(l,b,s),this.regleSegment(b,n,s),this.regleMasquer(s),this.crayonMasquer(s),_&&A&&this.textePosition(`On peut mesurer ${n.nom+b.nom} ≈ ${C(m(n,b,1))} cm et ${l.nom+b.nom} ≈ ${C(m(l,b,1))} cm.`,0,-7,s),[n,l,b]},Ge=function(i,t,e,r,s={}){let a=s.description??!0;const o=v(-20,20),c=r,n=q(6,0),l=P(n,t,o),u=P(n,5.2,c+o),h=p(n,u,10),M=p(u,h,.4),f=p(n,h,e);return i.length!==3?a=!1:(n.nom=i[0],l.nom=i[1],f.nom=i[2]),this.couleur="blue",this.epaisseur=3,this.pointCreer(n,s),a&&this.textePosition(`On trace le côté [${n.nom+l.nom}] de ${C(t)} cm.`,0,-4,s),this.regleSegment(n,l,s),this.pointCreer(l,s),this.couleur="grey",this.epaisseur=1,this.rapporteurMontrer(n,s),this.rapporteurDeplacer(n,s),this.rapporteurRotation(o,s),a&&this.textePosition(`On place un repère à ${c} degrés pour tracer la demi-droite [${n.nom+f.nom}).`,0,-5,s),this.epaisseur=3,this.trait(u,M,Object.assign({},s,{tempo:20})),this.epaisseur=1,this.rapporteurMasquer(s),this.regleSegment(n,h,s),this.angleCodage(l,n,f,s),this.rapporteurMasquer(s),a&&this.textePosition(`On place le point ${f.nom} sur la demi-droite [${n.nom+f.nom}) à ${e} cm de ${n.nom}.`,0,-6,s),this.epaisseur=3,this.couleur="blue",this.crayonDeplacer(f,s),this.pointCreer(f,s),this.regleSegment(n,f,s),this.crayonMasquer(s),a&&this.textePosition(`On trace le côté [${l.nom+f.nom}].`,0,-7,s),this.regleMontrer(f,s),this.crayonMontrer(f,s),this.regleSegment(f,l,s),this.regleMasquer(s),this.crayonMasquer(s),[n,l,f]},Ne=function(i,t,e=""){const r=g(t,i,60);return r.nom=e,this.traitRapide(i,t),this.pointCreer(i),this.pointCreer(t),this.compasEcarter2Points(i,t),this.compasTracerArcCentrePoint(i,r),this.compasTracerArcCentrePoint(t,r),this.pointCreer(r),this.compasMasquer(),this.regleSegment(i,r),this.regleSegment(r,t),this.regleMasquer(),this.crayonMasquer(),this.segmentCodage(i,t),this.segmentCodage(i,r),this.segmentCodage(t,r),[i,t,r]},Ze=function(i,t){const e=q(6,0),r=P(e,t,v(-20,20)),s=g(r,e,60);return i.length===3&&(e.nom=i[0],r.nom=i[1],s.nom=i[2]),this.regleSegment(e,r),this.pointCreer(e),this.pointCreer(r),this.compasEcarter2Points(e,r),this.compasTracerArcCentrePoint(e,s),this.compasTracerArcCentrePoint(r,s),this.pointCreer(s),this.compasMasquer(),this.regleSegment(e,s),this.regleSegment(s,r),this.regleMasquer(),this.crayonMasquer(),this.segmentCodage(e,r),this.segmentCodage(e,s),this.segmentCodage(r,s),[e,r,s]},Ue=function(i,t,e,r={}){const s=q(6,0),a=P(s,e,v(-10,10));P(s,t,0);const o=T(s,t),c=T(a,t),n=ne(o,c,"C",1);return i.length===3&&(s.nom=i[0],n.nom=i[2],a.nom=i[1]),this.pointCreer(s,r),this.regleSegment(s,a,r),this.compasMontrer(s,r),this.pointCreer(a,r),this.compasEcarterAvecRegle(t,r),this.compasTracerArcCentrePoint(s,n,r),this.compasTracerArcCentrePoint(a,n,r),this.pointCreer(n,r),this.compasMasquer(r),this.couleur="blue",this.epaisseur=3,r.description&&this.textePosition(`Le point ${n.nom} est à une intersection des deux cercles.`,0,-5,r),this.pointCreer(n,r),this.regleSegment(n,a,r),this.regleSegment(n,s,r),this.crayonMasquer(r),this.regleMasquer(r),[s,n,a]},Y={};class J{static getXml(t){return Y[t]}static saveXml(t,e){Y[t]=e}}class Qe{idIEP;idHTML;tempo;vitesse;couleur;couleurCompas;couleurTexte;couleurPoint;couleurCodage;couleurTraitsDeConstruction;epaisseur;epaisseurTraitsDeConstruction;pointilles;liste_script;translationX;translationY;xMin;yMin;xMax;yMax;regle;crayon;equerre;requerre;rapporteur;compas;xml;symetrieAxialePoint=Re;parallelogramme3sommetsConsecutifs=be;parallelogrammeAngleCentre=ve;partageSegment=De;paralleleRegleEquerre2points3epoint=pe;perpendiculaireRegleEquerre2points3epoint=de;perpendiculaireRegleEquerreDroitePoint=fe;perpendiculaireRegleEquerrePointSurLaDroite=qe;perpendiculaireCompasPointSurLaDroite=Me;perpendiculaireCompasPoint=Pe;paralleleRegleEquerreDroitePointAvecDescription=$e;paralleleAuCompasAvecDescription=Ce;paralleleAuCompas=xe;mediatriceAuCompas=ce;mediatriceRegleEquerre=le;hauteur=ue;mediane=he;bissectriceAuCompas=me;cercleCirconscrit=ge;triangle3longueurs=Xe;triangleRectangleCoteHypotenuse=we;triangleRectangle2Cotes=Fe;triangle1longueur2angles=Ve;triangle2longueurs1angle=Ge;triangleEquilateral2Sommets=Ne;triangleEquilateral=Ze;carre1point1longueur=je;rotationPoint=Ee;translationPoint=Te;demiTourPoint=Se;homothetiePoint=_e;rotationPolygone=Oe;symetrieAxialePolygone=He;translationPolygone=Ie;demiTourPolygone=Le;homothetiePolygone=ze;parallelogramme2sommetsConsecutifsCentre=ye;triangleIsocele2Longueurs=Ue;constructor(){this.idIEP=0,this.idHTML=0,this.tempo=5,this.vitesse=10,this.couleur="blue",this.couleurCompas="forestgreen",this.couleurTexte="black",this.couleurPoint="black",this.couleurCodage="#f15929",this.couleurTraitsDeConstruction="gray",this.epaisseur=2,this.epaisseurTraitsDeConstruction=.5,this.pointilles=!1,this.liste_script=[],this.translationX=0,this.translationY=10,this.xMin=0,this.yMin=0,this.xMax=0,this.yMax=0,this.regle={visibilite:!1,position:q(0,0),angle:0,longueur:15,zoom:100},this.crayon={visibilite:!1,position:q(0,0),angle:0,zoom:100},this.equerre={visibilite:!1,position:q(0,0),angle:0,zoom:100},this.requerre={visibilite:!1,position:q(0,0),angle:0,zoom:100},this.rapporteur={visibilite:!1,position:q(0,0),angle:0,rayon:5.2,zoom:100},this.compas={visibilite:!1,position:q(0,0),angle:0,orientation:"droite",ecartement:0,leve:!1,zoom:100},this.xml=""}x(t){const e=Math.round((t.x+this.translationX)*30);return t.x>this.xMax&&(this.xMax=t.x),t.x<this.xMin&&(this.xMin=t.x),e}y(t){const e=Math.round((-t.y+this.translationY)*30);return t.y<this.yMin&&(this.yMin=t.y),t.y>this.yMax&&(this.yMax=t.y),e}script(){if(this.xml.length>1)return this.xml;{let t=`<?xml version="1.0" encoding="UTF-8"?>
`;return t+=`<INSTRUMENPOCHE version="2">
`,t+=this.liste_script.join(`
`),t+=`
</INSTRUMENPOCHE>`,t}}html(t,e=0){{this.ensureInstrumenPocheElementsRegistered();const r=`IEP_${t}_${e}`;return J.saveXml(r,this.script()),`<alea-instrumenpoche id=${r}>`}}htmlBouton(t=0,e=0){{this.ensureInstrumenPocheElementsRegistered();const r=`IEP_${t}_${e}`;return J.saveXml(r,this.script()),`<alea-buttoninstrumenpoche id=${r}>`}}async ensureInstrumenPocheElementsRegistered(){if(customElements.get("alea-instrumenpoche")===void 0)try{const{ElementInstrumenpoche:t,ElementButtonInstrumenpoche:e}=await B(async()=>{const{ElementInstrumenpoche:r,ElementButtonInstrumenpoche:s}=await import("./ElementInstrumenpoche-Jd5UnyKs.js");return{ElementInstrumenpoche:r,ElementButtonInstrumenpoche:s}},__vite__mapDeps([0,1,2,3]));customElements.get("alea-instrumenpoche")===void 0&&(customElements.define("alea-instrumenpoche",t),customElements.define("alea-buttoninstrumenpoche",e))}catch(t){if(t instanceof DOMException&&t.name==="NotSupportedError")console.debug("Custom elements already registered:",t.message);else throw t}}recadre(t,e){this.translationX=1-t,this.translationY=e+3}taille(t,e){this.liste_script.push(`<viewBox width="${t}" height="${e}" />`)}montrer(t,e,r={}){const s=r.tempo??this.tempo;if(!this[t].visibilite||this[t].position!==e){let a="",o;typeof e>"u"?o=this[t].position:o=e,this[t].visibilite?this.deplacer(t,o,r):(a=`<action objet="${t}" mouvement="montrer" abscisse="${this.x(o)}" ordonnee="${this.y(o)}" tempo="${s}" />`,this[t].visibilite=!0),this[t].position=o,this.liste_script.push(a)}}regleMontrer(t,e={}){this.montrer("regle",t??this.regle.position,e)}crayonMontrer(t,e={}){this.montrer("crayon",t??this.crayon.position,e)}equerreMontrer(t,e={}){this.montrer("equerre",t??this.equerre.position,e)}requerreMontrer(t,e={}){this.montrer("requerre",t??this.requerre.position,e)}compasMontrer(t,e={}){this.montrer("compas",t??this.compas.position,e)}rapporteurMontrer(t,e={}){this.montrer("rapporteur",t??this.rapporteur.position,e)}masquer(t,e={}){const r=e.tempo??this.tempo;if(this[t].visibilite){const s=`<action objet="${t}" mouvement="masquer" tempo="${r}" />`;this[t].visibilite=!1,this.liste_script.push(s)}}regleMasquer(t={}){this.masquer("regle",t)}crayonMasquer(t={}){this.masquer("crayon",t)}equerreMasquer(t={}){this.masquer("equerre",t)}requerreMasquer(t={}){this.masquer("requerre",t)}compasMasquer(t={}){this.masquer("compas",t)}rapporteurMasquer(t={}){this.masquer("rapporteur",t)}deplacer(t,e,r={}){const s=r.tempo??this.tempo,a=r.vitesse??this.vitesse;if(this[t].position!==e){const o=`<action objet="${t}" mouvement="translation" abscisse="${this.x(e)}" ordonnee="${this.y(e)}" tempo="${s}" vitesse="${a}" />`;this[t].position=e,this.liste_script.push(o)}}regleDeplacer(t,e={}){this.deplacer("regle",t,e)}texteDeplacer(t,e,r={}){const s=r.tempo??this.tempo,a=r.vitesse??this.vitesse,o=`<action objet="texte" id="${t}" mouvement="translation" abscisse="${this.x(e)}" ordonnee="${this.y(e)}" tempo="${s}" vitesse="${a}" />`;this.liste_script.push(o)}crayonDeplacer(t,e={}){this.deplacer("crayon",t,e)}equerreDeplacer(t,e={}){this.deplacer("equerre",t,e)}requerreDeplacer(t,e={}){this.deplacer("requerre",t,e)}compasDeplacer(t,e={}){this.deplacer("compas",t,e)}rapporteurDeplacer(t,e={}){this.deplacer("rapporteur",t,e)}rotation(t,e,r={}){const s=r.tempo??this.tempo,a=r.sens??Math.round(this.vitesse/2);let o;if(typeof e=="number"?o=e:o=$(this[t].position,e).angleAvecHorizontale,this[t].angle!==e){const c=`<action objet="${t}" mouvement="rotation" angle="${-1*o}" tempo="${s}" sens="${a}" />`;this[t].angle=o,typeof o=="number"&&isFinite(o)?this.liste_script.push(c):console.error("Angle de rotation non défini pour l'objet .",t)}}regleRotation(t,e={}){this.rotation("regle",t,e)}crayonRotation(t,e={}){this.rotation("crayon",t,e)}equerreRotation(t,e={}){this.rotation("equerre",t,e)}requerreRotation(t,e={}){this.rotation("requerre",t,e)}compasRotation(t,e={}){this.rotation("compas",t,e)}rapporteurRotation(t,e={}){this.rotation("rapporteur",t,e)}zoom(t,e,r={}){const s=r.tempo??0;this[t].zoom=e,this.liste_script.push(`<action echelle="${e}" mouvement="zoom" objet="${t}" tempo="${s}" />`)}regleZoom(t,e={}){this.zoom("regle",t,e),this.regle.longueur=this.regle.longueur*t/100}equerreZoom(t,e={}){this.zoom("equerre",t,e)}requerreZoom(t,e={}){this.zoom("requerre",t,e)}rapporteurZoom(t,e={}){this.zoom("rapporteur",t,e)}compasZoom(t,e={}){this.zoom("compas",t,e)}pointCreer(t,e={}){const r=e.label??t.nom,s=e.couleurPoint??e.couleur??this.couleurPoint,a=e.tempo??this.tempo,o=e.couleurLabel??s;e.id?t.id=e.id:(this.idIEP++,t.id=this.idIEP);let c;if(r){c=`<action abscisse="${this.x(t)}" ordonnee="${this.y(t)}" couleur="${s}" id="${t.id}" mouvement="creer" objet="point" tempo="${a}"/>`;const n=q(t.x,t.y);e.dx&&(n.x+=e.dx),e.dy&&(n.y+=e.dy),this.textePoint(`$${r}$`,n,{tempo:0,couleur:o})}else c=`<action abscisse="${this.x(t)}" ordonnee="${this.y(t)}" couleur="${s}" id="${t.id}" mouvement="creer" objet="point" tempo="${a}" />`;this.liste_script.push(c)}pointsCreer(...t){const e={tempo:0};t.filter(r=>!(r instanceof y)).forEach(r=>{Object.assign(e,r)}),t.filter(r=>r instanceof y).forEach(r=>{this.pointCreer(r,e)})}pointMasquer(...t){const e={tempo:0};t.filter(r=>!(r instanceof y)).forEach(r=>{Object.assign(e,r)}),t.filter(r=>r instanceof y).forEach(r=>{this.liste_script.push(`<action id="${r.id}" mouvement="masquer" objet="point" tempo="${e.tempo}" />`)})}pointMontrer(t,e={}){const r=e.tempo??this.tempo;this.liste_script.push(`<action id="${t.id}" mouvement="montrer" objet="point" tempo="${r}" />`)}pointDeplacer(t,e,r,s={}){const a=s.tempo??this.tempo,o=s.vitesse??this.vitesse,c=q(e,r);this.liste_script.push(`<action abscisse="${this.x(c)}" ordonnee="${this.y(c)}" id="${t.id}" mouvement="translation" objet="point" tempo="${a}" vitesse="${o}" />`)}pointNommer(t,e,r={}){const s=q(t.x,t.y);r.dx&&(s.x+=r.dx),r.dy&&(s.y+=r.dy),this.textePoint(`$${e}$`,s,r)}compasRetourner(t={}){const r=`<action mouvement="retourner" objet="compas" tempo="${t.tempo??this.tempo}" />`;this.compas.orientation==="droite"?this.compas.orientation="gauche":this.compas.orientation="droite",this.liste_script.push(r)}compasEcarter(t,e={}){const r=e.tempo??this.tempo,s=e.vitesse??this.vitesse,a=`<action ecart="${t*30}" mouvement="ecarter" objet="compas" tempo="${r}" vitesse="${s}" />`;this.compas.ecartement=t,this.liste_script.push(a)}compasEcarterAvecRegle(t,e={}){this.regleRotation(0,e),this.regleMontrer(this.compas.position,e),this.regleDeplacer(this.compas.position,e),this.compasMontrer(this.compas.position,e),this.compasRotation(0,e),this.compasEcarter(t,e)}compasEcarter2Points(t,e,r={}){this.compasMontrer(t,r),this.compasDeplacer(t,r);const s=I(t,e);s.isVisible=!1;const a=s.angleAvecHorizontale;this.compasRotation(a,r),this.compasEcarter(m(t,e),r)}compasLever(t={}){const e=t.tempo??this.tempo;if(!this.compas.leve){const r=`<action mouvement="lever" objet="compas" tempo="${e} />`;this.compas.leve=!0,this.liste_script.push(r)}}compasCoucher(t={}){const e=t.tempo??this.tempo;if(this.compas.leve){const r=`<action mouvement="coucher" objet="compas" tempo="${e}" />`;this.compas.leve=!1,this.liste_script.push(r)}}compasTracerArc2Angles(t,e,r={}){const s=r.tempo??this.tempo,a=r.sens??this.vitesse/2,o=r.epaisseur??.5,c=r.couleurCompas??this.couleurCompas,n=r.pointilles?'pointille="tiret"':"";this.idIEP+=1,Math.abs(this.compas.angle-t)>Math.abs(this.compas.angle-e)&&([t,e]=[e,t]);let l=`<action sens="${a}" angle="${-t}" mouvement="rotation" objet="compas" tempo="${s}" />
`;l+=`<action mouvement="lever" objet="compas" />
`,l+=`<action sens="${a}" angle="${-t}" mouvement="rotation" objet="compas" />
`;let u;return e>t?u=a:u=-1*a,l+=`<action couleur="${c}" epaisseur="${o}" sens="${u}" debut="${-t}" fin="${-e}" mouvement="tracer" objet="compas"  ${n} id="${this.idIEP}" />
`,l+=`<action mouvement="coucher" objet="compas" tempo="${s}"/>`,this.compas.angle=e,this.liste_script.push(l),this.idIEP}compasTracerArcCentrePoint(t,e,r={}){const s=r.delta??10;this.compasMontrer(this.compas.position,r),this.compasDeplacer(t,r);const a=I(t,e);a.visibility=!1;const o=a.angleAvecHorizontale-s,c=a.angleAvecHorizontale+s;return Math.abs(this.compas.ecartement-m(this.compas.position,e))>.1&&this.compasEcarter(m(t,e),r),this.compasTracerArc2Angles(o,c,r)}compasCercleCentrePoint(t,e,r={}){this.compasEcarter2Points(t,e,r);const a=$(t,e).angleAvecHorizontale;this.compasTracerArc2Angles(a,a+360,r)}requerreGlisserEquerre(t,e={}){const r=e.tempo??this.tempo,s=e.vitesse??this.vitesse;this.liste_script.push(`<action abscisse="${t*30}" mouvement="glisser" objet="requerre" tempo="${r}" vitesse="${s}" />`)}rapporteurMasquerGraduationsExterieures(t={}){const e=t.tempo??this.tempo;this.liste_script.push(`<action mouvement="masquer_nombres" objet="rapporteur" tempo="${e}"/>`)}rapporteurMontrerGraduationsExterieures(t={}){const e=t.tempo??this.tempo;this.liste_script.push(`<action mouvement="montrer_nombres" objet="rapporteur" tempo="${e}"/>`)}rapporteurMasquerGraduationsInterieures(t={}){const e=t.tempo??this.tempo;this.liste_script.push(`<action mouvement="vide" objet="rapporteur" tempo="${e}"/>`)}rapporteurMontrerGraduationsInterieures(t={}){const e=t.tempo??this.tempo;this.liste_script.push(`<action mouvement="graduations" objet="rapporteur" tempo="${e}"/>`)}rapporteurDeplacerRotation2Points(t,e,r={}){const s=$(t,e);s.isVisible=!1,this.rapporteurMontrer(this.rapporteur.position,r),this.rapporteurDeplacer(t,r),this.rapporteurRotation(s.angleAvecHorizontale,r)}rapporteurCrayonMarqueAngle(t,e={}){const r=this.rapporteur.position,s=this.rapporteur.rayon*this.rapporteur.zoom/100,a=P(r,s,t+this.rapporteur.angle),o=P(r,s+.3,t+this.rapporteur.angle);this.crayonMontrer(this.crayon.position,e),this.crayonDeplacer(a,e),this.tracer(o,e)}rapporteurTracerDemiDroiteAngle(t,e,r,s={}){if(r>0)this.rapporteurDeplacerRotation2Points(t,e,s),this.rapporteurCrayonMarqueAngle(r,s);else{const c=g(e,t,180);this.rapporteurDeplacerRotation2Points(t,c,s),this.rapporteurCrayonMarqueAngle(180-Math.abs(r),s)}const a=$(t,e);a.isVisible=!1;const o=P(t,this.rapporteur.rayon*this.rapporteur.zoom/100,a.angleAvecHorizontale+r);this.rapporteurMasquer(s),this.regleDemiDroiteOriginePoint(t,o,s)}regleMasquerGraduations(t={}){const e=t.tempo??this.tempo;this.liste_script.push(`<action mouvement="vide" objet="regle" tempo="${e}"/>`)}regleMontrerGraduations(t={}){const e=t.tempo??this.tempo;this.liste_script.push(`<action mouvement="graduations" objet="regle" tempo="${e}"/>`)}regleModifierLongueur(t=20,e={}){const r=e.tempo??this.tempo;this.regle.longueur=t,this.liste_script.push(`<action mouvement="modifier_longueur" objet="regle" longueur="${this.regle.longueur}" tempo="${r}"/>`)}regleDemiDroiteOriginePoint(t,e,r={}){const s=r.longueur??this.regle.longueur,a=p(t,e,s);this.regleSegment(t,a,r)}regleDroite(t,e,r={}){const s=r.longueur??this.regle.longueur,a=d(e,t,(-s*.5+m(t,e)*.5)/m(t,e)),o=d(t,e,(-s*.5+m(t,e)*.5)/m(t,e));this.x(t)<=this.x(e)?(this.regleMontrer(a),this.regleRotation(o,r),this.regleSegment(a,o,r)):(this.regleMontrer(o),this.regleRotation(a,r),this.regleSegment(o,a,r))}regleProlongerSegment(t,e,r={}){const s=r.longueur??this.regle.longueur-3;if(s>0){const a=p(e,t,3),o=p(e,t,-s);this.regleSegment(a,o,r)}else{const a=p(t,e,3),o=p(t,e,s);this.regleSegment(a,o,r)}}tracer(t,e={}){const r=e.tempo??this.tempo,s=e.vitesse??this.vitesse,a=e.epaisseur??this.epaisseur,o=e.couleur??this.couleur,n=e.pointilles??this.pointilles?'pointille="tiret"':"",l=e.vecteur?'style="vecteur"':"";this.idIEP+=1;const u=`<action abscisse="${this.x(t)}" ordonnee="${this.y(t)}" epaisseur="${a}" couleur="${o}" mouvement="tracer" objet="crayon" tempo="${r}" vitesse="${s}"  ${n} ${l} id="${this.idIEP}" />`;return this.crayon.position=t,this.liste_script.push(u),this.idIEP}trait(t,e,r={}){return this.crayonDeplacer(t,r),this.tracer(e,r)}traitRapide(t,e,r={}){return this.crayonDeplacer(t,Object.assign({tempo:0,vitesse:1e4},r)),this.tracer(e,Object.assign({tempo:0,vitesse:1e4},r))}traitMasquer(t,e={}){const r=e.vitesse??200;this.liste_script.push(`<action mouvement="masquer" objet="trait" id="${t}" vitesse="${r}" />`)}regleSegment(t,e,r){let s,a,o=-1,c={};return t instanceof Z?(s=t.extremite1,a=t.extremite2,e instanceof y?window.notify("regleSegment appelé avec un mauvais jeu d'arguments (arg1 est un segment mais arg2 est un point)",{arg1:t,arg2:e,arg3:r}):typeof e=="object"&&(c=e)):(t instanceof y&&e instanceof y?(s=t,a=e):(window.notify("regleSegment appelé avec un mauvais jeu d'arguments (arg1 et arg2 ne sont pas des points)",{arg1:t,arg2:e,arg3:r}),s=L(0,0),a=L(0,0)),typeof r=="object"&&(c=r)),s.x<=a.x?(this.regleMontrer(s,c),this.regleRotation(a,c)):(this.regleMontrer(a,c),this.regleRotation(s,c)),this.crayon!=null&&(m(this.crayon.position,s)<m(this.crayon.position,a)?(this.crayonMontrer(s,c),o=this.tracer(a,c)):(this.crayonMontrer(a,c),o=this.tracer(s,c))),o}polygoneTracer(...t){for(let e=0;e<t.length-1;e++)this.regleSegment(t[e],t[e+1]);this.regleSegment(t[t.length-1],t[0])}polygoneRapide(...t){const e=[],r={};if(t.forEach(s=>{s instanceof y?e.push(s):typeof s=="object"?Object.assign(r,s):window.notify("polygoneRapide appelé avec un mauvais jeu d'arguments",{arg:s})}),e.length>2){for(let s=0;s<e.length-1;s++)this.traitRapide(e[s],e[s+1],r);this.traitRapide(e[e.length-1],e[0],r)}else throw Error(`Pour utiliser polygoneRapide, il faut passer une liste de points ! et pas ça : ${JSON.stringify(e)} `)}textePoint(t,e,r={}){const s=r.tempo??this.tempo;this.idIEP++;const a=r.police?`police="${r.police}"`:"";let o="";r.couleurFond&&(o+=` couleur_fond="${r.couleurFond}"`),r.opaciteFond&&(o+=` opacite_fond="${r.opaciteFond}"`),r.couleurCadre&&(o+=` couleur_cadre="${r.couleurCadre}"`),r.epaisseurCadre&&(o+=` epaisseur_cadre="${r.epaisseurCadre}"`),r.marge&&(o+=` marge="${r.marge}"`),r.margeGauche&&(o+=` marge_gauche="${r.margeGauche}"`),r.margeDroite&&(o+=` marge_droite="${r.margeDroite}"`),r.margeBas&&(o+=` marge_bas="${r.margeBas}"`),r.margeHaut&&(o+=` marge_haut="${r.margeHaut}"`),r.taille&&(o+=` taille="${r.taille}"`);let c=`<action abscisse="${this.x(e)}" ordonnee="${this.y(e)}" id="${this.idIEP}" mouvement="creer" objet="texte" />`;return c+=`
<action ${a} couleur="${r.couleur||this.couleurTexte}" texte="${t}" id="${this.idIEP}" mouvement="ecrire" objet="texte" ${o} tempo="${s}" />`,this.liste_script.push(c),this.idIEP}textePosition(t,e,r,s={}){const a=q(e,r);return this.textePoint(t,a,s)}longueurSegment(t,e,r,s={}){const a=m(t,e),o=D(t,e),c=D(-o.y*r/U(o),o.x*r/U(o)),n=j(j(p(t,e,a/2-.7),c),D(0,1));return this.textePoint(`${a} cm`,n,s)}mesureAngle(t,e,r){const s=z(t,e,r),a=j(d(g(t,e,s/2),e,1.3/m(e,t)),D(-.2,.5));return this.textePoint(Math.abs(s)+"°",a)}texteMasquer(...t){const e={tempo:0};t.filter(r=>typeof r!="number").forEach(r=>{Object.assign(e,r)}),t.filter(r=>typeof r=="number").forEach(r=>{this.liste_script.push(`<action mouvement="masquer" objet="texte" id="${r}" tempo="${e.tempo}" />`)})}texteChangeCouleur(t,e,r){this.liste_script.push(`
<action couleur="${r}" texte="${t}" id="${e}" mouvement="ecrire" objet="texte" />`)}pause(){this.liste_script.push('<action mouvement="pause" />')}segmentCodage(t,e,r){let s,a={};t instanceof Z?(s=t,e instanceof y?window.notify("segmentCodage appelé avec un mauvais jeu d'arguments (arg1 est un segment mais arg2 est un point",{arg1:t,arg2:e,arg3:r}):typeof e=="object"&&(a=e)):(t instanceof y&&e instanceof y?s=I(t,e):(window.notify("segmentCodage appelé avec un mauvais jeu d'arguments (arg1 et arg2 ne sont pas des points)",{arg1:t,arg2:e,arg3:r}),s=I(L(0,0),L(0,0))),typeof r=="object"&&(a=r));const o=a.tempo??this.tempo,c=a.couleurCodage??a.couleur??this.couleurCodage,n=a.codage??"\\";this.idIEP++;const l=this.idIEP,u=H(s.extremite1,s.extremite2),h=`<action abscisse="${this.x(u)}" ordonnee="${this.y(u)}" forme="${n}"  couleur="${c}" id="${l}" tempo="${o}" mouvement="creer" objet="longueur" />`;return this.liste_script.push(h),l}segmentCodageMasquer(t,e={}){const r=e.tempo??this.tempo;this.liste_script.push(`<action id="${t}" mouvement="masquer" objet="longueur" tempo="${r}" />`)}segmentCodageMontrer(t,e={}){const r=e.tempo??this.tempo;this.liste_script.push(`<action id="${t}" mouvement="montrer" objet="longueur" tempo="${r}" />`)}codageAngleDroit(t,e,r,s={}){const a=s.longueur??.3,o=s.couleurCodage??s.couleur??this.couleurCodage;this.crayonMontrer();const c=p(e,r,a),n=p(e,t,a),l=E(n,e,c),u={...s};u.tempo=0;const h=this.trait(c,l,Object.assign({},u,{couleur:o})),M=this.trait(l,n,Object.assign({},s,{couleur:o}));return[h,M]}codageAngleDroitMasquer(t,e={}){const r=e.tempo??0;this.traitMasquer(t[0],Object.assign({tempo:r},e)),this.traitMasquer(t[1],Object.assign({tempo:r},e))}angleCodage(t,e,r,s={}){const a=s.couleurCodage??s.couleur??this.couleurCodage,o=s.codage??"plein",c=s.rayon??1,n=s.tempo??this.tempo,l=t.id+"_"+e.id+"_"+r.id,u=$(e,t),h=$(e,r);u.isVisible=!1,h.isVisible=!1;const M=-u.angleAvecHorizontale,f=-h.angleAvecHorizontale,S=`<action abscisse="${this.x(e)}" ordonnee="${this.y(e)}" rayon="${c*30}" angle1="${M}" angle2="${f}" forme="${o}"  couleur="${a}" id="${l}" tempo="${n}" mouvement="creer" objet="angle" />`;return this.liste_script.push(S),l}angleCodageMasquer(t,e,r,s={}){const a=s.tempo??0,o=t.id+"_"+e.id+"_"+r.id;this.liste_script.push(`<action id="${o}" mouvement="masquer" objet="angle" tempo="${a}" />`)}angleCodageMontrer(t,e,r,s={}){const a=s.tempo??0,o=t.id+"_"+e.id+"_"+r.id;this.liste_script.push(`<action id="${o}" mouvement="montrer" objet="angle" tempo="${a}" />`)}image(t,e=q(0,0)){this.idIEP++;let r;return r=`<action id="${this.idIEP}" url="${t}" mouvement="chargement" objet="image" />`,r+=`
<action abscisse="${this.x(e)}" ordonnee="${this.y(e)}" id="${this.idIEP}" mouvement="translation" objet="image" vitesse="100000" />`,this.liste_script.push(r),this.idIEP}}export{Qe as A,J as S};
