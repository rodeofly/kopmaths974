class h{value;constructor(e){this.value=e}get string(){return this.value.toString()}toString({parentheses:e}={}){return e?`(${this.string})`:this.string}}class t extends h{type;polynome;k;constructor({polynome:e,k:r=1}){super(e.toString()),this.type="exponential",this.polynome=e,this.k=r}get string(){return this.polynome.toString()===""?String(this.k):this.k===0?"0":`${o(this.k)}e^{${this.polynome.toString()}}`}}class s{toString({parentheses:e}={}){return e?`(${this.string})`:this.string}}class p extends s{type;operande1;operande2;constructor(e,r){super(),this.type="add",this.operande1=e,this.operande2=r}get result(){return this.operande1 instanceof t&&this.operande2 instanceof t&&this.operande1.polynome.isEqual(this.operande2.polynome)?new t({polynome:this.operande1.polynome,k:this.operande1.k+this.operande2.k}):this}get string(){return`${this.operande1.toString()} + ${this.operande2.toString()}`}}class a extends s{type;operande1;operande2;constructor(e,r){super(),this.type="sub",this.operande1=e,this.operande2=r}get string(){return`${this.operande1.toString()} - ${this.operande2.toString()}`}get result(){return this.operande1 instanceof t&&this.operande2 instanceof t&&this.operande1.polynome.isEqual(this.operande2.polynome)?new t({polynome:this.operande1.polynome,k:this.operande1.k-this.operande2.k}):this}}class d extends s{type;operande1;operande2;constructor(e,r){super(),this.type="mul",this.operande1=e,this.operande2=r}get step(){return this.operande1 instanceof t&&this.operande2 instanceof t?this.operande1.k===0||this.operande2.k===0?"":`${o(this.operande1.k*this.operande2.k)}e^{${this.operande1.polynome.toString()} + ${i(this.operande2.polynome.toString())}}`:""}get result(){return this.operande1 instanceof t&&this.operande2 instanceof t?new t({polynome:this.operande1.polynome.add(this.operande2.polynome),k:this.operande1.k*this.operande2.k}):this}get string(){const e=this.operande1 instanceof p||this.operande1 instanceof a,r=this.operande2 instanceof p||this.operande2 instanceof a||this.operande2.toString()[0]==="-";return`${this.operande1.toString({parentheses:e})} \\times ${this.operande2.toString({parentheses:r})}`}}class u extends s{type;num;den;constructor(e,r){super(),this.type="frac",this.num=e,this.den=r}get step(){return this.num instanceof t&&this.den instanceof t?`${o(this.num.k/this.den.k)}e^{${this.num.polynome.toString()} - ${i(this.den.polynome.toString())}}`:""}get result(){return this.num instanceof t&&this.den instanceof t?new t({polynome:this.num.polynome.sub(this.den.polynome),k:this.num.k/this.den.k}):this}get string(){return`\\dfrac{${this.num.toString()}}{${this.den.toString()}}`}}class g extends s{type;operande;exp;constructor(e,r){super(),this.type="pow",this.operande=e,this.exp=r}get string(){return`${this.operande.toString({parentheses:!0})}^{${this.exp.toString()}}`}get step(){return this.operande instanceof t?this.exp===0||this.operande.k===0?"":`${o(this.operande.k**this.exp)}e^{${i(this.operande.polynome.toString())} \\times ${i(this.exp)}}`:""}get result(){return this.operande instanceof t?new t({polynome:this.operande.polynome.mul(this.exp),k:this.operande.k**this.exp}):this}}function o(n){return n===1?"":n===-1?"-":String(n)}function i(n){const e=n.toString();return e.includes("+")||e.includes("-")?`(${e})`:e}export{p as A,t as E,u as F,d as M,g as P,a as S};
