import{c as k,a as q,af as T,aP as S,p as D,r as h,aN as f,aH as v,o as E,l as N,k as G,aI as x,n as H}from"./embellissements-BYV7mIDn.js";import{p as I}from"./qcm-BQR8Ns0N.js";import{E as M}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const _="Donner description et notation de droites, segments et demi-droites",A=!0,B="qcmMult",ee=!0,te="qcm",oe="07/10/2023",ne="d81c6",se={"fr-fr":["6G0-2"],"fr-2016":["6G10-1"],"fr-ch":["9ES1-2"]};class ie extends M{constructor(){super(),this.nbQuestions=3}nouvelleVersion(){this.consigne=this.interactif||k.isAmc?"Cocher les propositions correspondant à la figure.":"Décrire précisément, avec des mots, la figure et donner sa notation mathématique.";const g=[1,4,q([2,3])],R=T(g,this.nbQuestions);let $=[];for(let n=0,s,c,u=0;n<this.nbQuestions&&u<50;){n%5===0&&($=["QD"]);const d=S(2,$);$.push(d);const m=D(0,h(0,20)/10,d[0]),p=D(4,h(0,20)/10,d[1]),Q=f(m,p),y=f(p,m),L=(e,t)=>{let i,r;const a={droite:{phrase:`La droite passant par $${e.nom}$ et $${t.nom}$`,notation:`$(${e.nom}${t.nom})$`,bonneReponse:!1},segment:{phrase:`Le segment d'extrémités $${e.nom}$ et $${t.nom}$`,notation:`$[${e.nom}${t.nom}]$`,bonneReponse:!1},demiDroite1:{phrase:`La demi-droite d'origine $${e.nom}$ passant par $${t.nom}$`,notation:`$[${e.nom}${t.nom})$`,bonneReponse:!1},demiDroite2:{phrase:`La demi-droite d'origine $${t.nom}$ passant par $${e.nom}$`,notation:`$[${t.nom}${e.nom})$`,bonneReponse:!1}};switch(R[n]){case 1:i=H(e,t),r=`La droite qui passe par les points $${e.nom}$ et $${t.nom}$ notée $(${e.nom}${t.nom})$.`,a.droite.bonneReponse=!0;break;case 2:i=x(e,t),r=`La demi-droite d'origine $${e.nom}$ passant par $${t.nom}$ notée $[${e.nom}${t.nom})$.`,a.demiDroite1.bonneReponse=!0;break;case 3:i=x(t,e),r=`La demi-droite d'origine $${t.nom}$ passant par $${e.nom}$ notée $[${t.nom}${e.nom})$.`,a.demiDroite2.bonneReponse=!0;break;case 4:default:i=G(e,t),r=`Le segment d'extrémités $${e.nom}$ et $${t.nom}$ noté $[${e.nom}${t.nom}]$.`,a.segment.bonneReponse=!0;break}return{trait:i,correction:r,propsQcm:a}},{trait:C,correction:l,propsQcm:o}=L(m,p),P=v(m,p);s=E({xmin:-2,ymin:-1,xmax:7,ymax:3,pixelsParCm:40,scale:.6,optionsTikz:["baseline=(current bounding box.north)"]},C,Q,y,P),this.autoCorrection[n]={enonce:s,options:{vertical:!0,ordered:!0},propositions:[{texte:o.droite.phrase,statut:o.droite.bonneReponse},{texte:o.demiDroite1.phrase,statut:o.demiDroite1.bonneReponse},{texte:o.demiDroite2.phrase,statut:o.demiDroite2.bonneReponse},{texte:o.segment.phrase,statut:o.segment.bonneReponse},{texte:o.droite.notation,statut:o.droite.bonneReponse},{texte:o.demiDroite1.notation,statut:o.demiDroite1.bonneReponse},{texte:o.demiDroite2.notation,statut:o.demiDroite2.bonneReponse},{texte:o.segment.notation,statut:o.segment.bonneReponse}]};const b=I(this,n);s+=this.interactif?b.texte:"",this.interactif?c=l+b.texteCorr:c=l,this.questionJamaisPosee(n,s)&&(this.listeQuestions[n]=s,this.listeCorrections[n]=c,n++),u++}N(this)}}export{A as amcReady,B as amcType,oe as dateDeModifImportante,ie as default,ee as interactifReady,te as interactifType,se as refs,_ as titre,ne as uuid};
