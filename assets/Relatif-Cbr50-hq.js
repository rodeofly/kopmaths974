class i{constructor(...e){this.relatifs=e}getSigneNumber(){const e=[];try{if(this.relatifs.forEach(function(t){if(typeof t=="string")throw new TypeError(`${t} est un string !`);if(t===0)throw new RangeError(`${t} a été exclu des valeurs possibles.`)}),this.relatifs.length===0)throw new Error("C'est mieux avec quelques nombres !");this.relatifs.forEach(function(t){t<0&&e.push(-1),t>0&&e.push(1)})}catch(t){console.error(t.message),console.error(t.stack)}return e}getSigneString(){const e=[];return this.getSigneNumber().forEach(function(r){r===-1&&e.push("négatif"),r===1&&e.push("positif")}),e}getSigneProduitNumber(...e){let t=1;try{if(e.forEach(function(r){if(typeof r=="string")throw new TypeError(`${r} est un string !`);if(r===0)throw new RangeError(`${r} a été exclu des valeurs possibles.`)}),e.length===0)throw new Error("C'est mieux avec quelques nombres !");if(e.forEach(function(r){t=t*r}),t<0)return-1;if(t>0)return 1}catch(r){console.error(r.message),console.error(r.stack)}}getSigneProduitString(...e){const t=this.getSigneProduitNumber(...e);if(t===-1)return"négatif";if(t===1)return"positif"}getCardNegatifs([...e]){let t=0;try{if(e.forEach(function(r){if(typeof r=="string")throw new TypeError(`${r} est un string !`);if(r===0)throw new RangeError(`${r} a été exclu des valeurs possibles.`)}),e.length===0)throw new Error("C'est mieux avec quelques nombres !");return e.forEach(function(r){r<0&&(t=t+1)}),t}catch(r){console.error(r.message)}}orthographeFacteursNegatifs(e){return e>=2?"facteurs négatifs":"facteur négatif"}setRegleSigneProduit(...e){try{if(e.forEach(function(t){if(typeof t=="string")throw new TypeError(`${t} est un string !`)}),e.length===0)throw new Error("C'est mieux avec quelques nombres !");if(e.length===2)return this.getCardNegatifs(e)%2===0?"Les deux facteurs ont le même signe donc le produit est positif.":"Les deux facteurs ont un signe différent donc le produit est négatif.";if(e.length>2)return this.getCardNegatifs(e)%2===0?this.getCardNegatifs(e)===0?"Tous les facteurs sont positifs donc le produit est positif.":`Il y a ${this.getCardNegatifs(e)} ${this.orthographeFacteursNegatifs(this.getCardNegatifs(e))}, le nombre de facteurs négatifs est pair donc le produit est positif.`:`Il y a ${this.getCardNegatifs(e)} ${this.orthographeFacteursNegatifs(this.getCardNegatifs(e))}, le nombre de facteurs négatifs est impair donc le produit est négatif.`}catch(t){console.error(t.message)}}setRegleSigneQuotient(...e){try{if(e.forEach(function(t){if(typeof t=="string")throw new TypeError(`${t} est un string !`)}),e.length===0)throw new Error("C'est mieux avec quelques nombres !");if(e.length===2)return this.getCardNegatifs(e)%2===0?"Le numérateur et le dénominateur ont le même signe donc le quotient est positif.":"Les numérateur et le dénominateur ont un signe différent donc le quotient est négatif.";if(e.length>2)return this.getCardNegatifs(e)%2===0?this.getCardNegatifs(e)===0?"Tous les facteurs du numérateur et tous les facteurs du dénominateur sont positifs donc le quotient est positif.":`Quand on compte les facteurs négatifs du numérateur et du dénominateur, on trouve ${this.getCardNegatifs(e)}, ce nombre est pair donc le quotient est positif.`:`Quand on compte les facteurs négatifs du numérateur et du dénominateur, on trouve ${this.getCardNegatifs(e)}, ce nombre est impair donc le quotient est négatif.`}catch(t){console.error(t.message)}}}export{i as R};
