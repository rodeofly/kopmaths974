import{E as Q,K as p}from"./Exercice-DtXhjCyI.js";import{r as a,e as n,m as $,l as G}from"./embellissements-BYV7mIDn.js";import{a as b}from"./questionMathLive-DdRvWqlN.js";import{h}from"./gestionInteractif-DujZpSu8.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"decimal.js";import"earcut";import"roughjs";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";const te="Dénombrement",ne=!0,re="mathLive",oe="21/04/2025",ae="3a384",le={"fr-fr":["TSG1-07"],"fr-ch":[]};class ce extends Q{constructor(){super(),this.nbQuestions=3,this.nbQuestionsModifiable=!1}nouvelleVersion(){function s(u){return u===0||u===1?1:u*s(u-1)}const i=a(20,40),e=a(5,8),q=Math.floor(i/2),t=a(q,i-5),x=i-t,f=["Jean-Claude","Rémi","Éric","Gilles","Stéphane","Mickaël","Sylvain","Guillaume","Liouba","Nathan","Mathieu","Cyril","Maxime","Olivier","Pierre"],C=a(0,14),y=["Sophie","Aude","Mireille","Lydie","Claire","Ève","Julie"],M=a(0,6),D=s(i),v=s(e),L=s(i-e),r=D/(v*L),g=s(t)/(s(e)*s(t-e));this.consigne=`L'association Coopmaths organise son assemblée générale annuelle pour élire son nouveau Conseil d'Administration (CA) composé de $${e}$ membres, qui élira ensuite en son sein, un bureau. `,this.consigne+=`<br>Il y a $${i}$ adhérents à jour de cotisations, qui peuvent donc voter et candidater au CA. <br>`;let A=`${f[C]} souhaite déterminer combien de CA différents il est possible de constituer avec tous les adhérents.<br> Déterminer ce nombre.<br>`;const E=1;let l=`On doit choisir ${e} adhérents parmi ${i}. <br>`;l+=`L'ordre des candidats ne compte pas dans ce choix. Il s'agit donc de déterminer le nombre de combinaisons de  $${e}$ membres parmi $${i}$.<br>`,l+=`On calcule donc <br>$\\begin{aligned}\\dbinom{${i}}{${e}} &= \\dfrac{${i}~!}{${e}~!\\times ${i-e}~!}\\\\&=${n(r)}\\end{aligned}$<br>`,l+=`Il y a donc $${$(n(r))}$ CA possibles.<br>`;let d=`${f[C]} intervient fièrement pour annoncer le résultat de son calcul. Mais ${y[M]} prend la parole pour lui rappeler que les statuts de l'association imposent la présence d'au moins une femme dans le CA et que son calcul est donc faux.<br>`;d+=` Sachant qu'il y a $${t}$ garçons et $${x}$ filles parmi les adhérents, en déduire le nombre exact de CA possibles.`;let o=`Dans les $${n(r)}$ CA possibles, il faut retirer ceux qui ne contiennent que des garçons.`;o+="<br>On calcule donc le nombre de CA possibles avec uniquement des garçons :<br>",o+=`$\\begin{aligned}\\dbinom{${t}}{${e}} &= \\dfrac{${t}~!}{${e}~!\\times ${t-e}~!}\\\\&=${n(s(t)/(s(e)*s(t-e)))}\\end{aligned}$<br>`,o+="Il faut donc soustraire ce résultat du nombre total de CA possibles.<br>",o+=`On a donc $${n(r)} - ${n(g)} = ${$(n(r-g))}$ CA possibles avec au moins une fille.`;const I=2;let m="Le CA étant élu, il se réunit pour élire en son sein le bureau, composé d'un président ou d'une présidente, d'un secrétaire ou d'une secrétaire et d'un trésorier ou d'une trésorière.<br>";m+="Combien de bureaux différents peut-on constituer ?";let c="Pour constituer le bureau, l'ordre compte, puisqu'il y a trois postes différents à pourvoir.<br>";c+=`Il faut donc déterminer le nombre de triplets d'éléments distincts que l'on peut constituer dans une liste à ${e} éléments.<br>`,c+=`On calcule donc <br>$\\begin{aligned}\\dfrac{${e}~!}{(${e} - 3)~!}&=\\dfrac{${e}~!}{${e-3} ~! }\\\\&=${n(s(e)/s(e-3))}\\end{aligned}$<br>`,c+=`Il y a donc $${$(n(s(e)/s(e-3)))}$ bureaux possibles.`;const O=v/s(e-3);G(this),h(this,0,{reponse:{value:E}}),A+=b(this,0,p.clavierDeBase),this.listeQuestions.push(A),this.listeCorrections.push(l),h(this,1,{reponse:{value:I}}),d+=b(this,1,p.clavierDeBase),this.listeQuestions.push(d),this.listeCorrections.push(o),h(this,2,{reponse:{value:O}}),m+=b(this,2,p.clavierDeBase),this.listeQuestions.push(m),this.listeCorrections.push(c)}}export{oe as dateDePublication,ce as default,ne as interactifReady,re as interactifType,le as refs,te as titre,ae as uuid};
