import{V as R,s as F,c as q,h as N,i as V,j as z,u as A,p as O,d as T,k as B,m as G,e as _,n as H,o as J}from"./patternsPreDef-CbRb9iae.js";import{l as y,a as C}from"./shapes2d-C4LL3wzV.js";import{t as I,o as L,D as v,s as K,m as U,r as W,a as X,C as Y,A as Z,p as P}from"./embellissements-BYV7mIDn.js";import{E as ee}from"./Exercice-DtXhjCyI.js";import E from"decimal.js";import{V as Q}from"./VisualPattern-D11BgzPT.js";import"./Canvas3DElement-BqpJ_f1x.js";import"./three.module-6qJVdblD.js";import"./Figures2D-C1IYLm7-.js";import"mathjs";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const ge="Liste des patterns stockés dans Mathaléa avec leurs numéros de référence",ye={"fr-fr":["P023"],"fr-ch":[]},Me="4c9ca";class Ie extends ee{destroyers=[];constructor(){super(),this.nbQuestions=1,this.listePackages=["twemojis"],this.nbQuestionsModifiable=!1,this.besoinFormulaireNumerique=["Liste restreinte pour la référence",6,`1 : 6I13
2 : 6I13-1
3 : 6I13-2
4 : 6I14
5 : 5L10-5
6 : 5P12-2`],this.sup=1,this.besoinFormulaire3Numerique=["Nombre de motifs par pattern",6],this.sup3=4,this.comment=`Affiche la liste des patterns stockés dans Mathaléa avec leurs numéros de référence.<br>
Vous pouvez choisir d'afficher un ou plusieurs patterns en indiquant leur numéro de référence dans le formulaire.<br>
Le nombre de motifs par pattern (3 par défaut) est aussi modifiable dans le formulaire.<br>
Le nombre de patterns à afficher est aussi modifiable dans le formulaire.<br>
Le nombre donné entre parenthèses est le nombre d'éléments au rang 43 de chaque pattern.<br>
L'expression donnée entre crochets est la formule qui permet de calculer le nombre d'éléments au rang n de chaque pattern.<br>`}destroy(){this.destroyers.forEach(n=>n()),this.destroyers.length=0}nouvelleVersion(){this.destroyers.forEach(s=>s()),this.sup3=Math.max(2,this.sup3);let n=[];switch(this.sup){case 1:n=J;break;case 2:n=H;break;case 3:n=_;break;case 4:n=G;break;case 5:n=B;break;case 6:n=T;break}Array.from(new Set(n.map(s=>s.shapes).flat()));let o="";if(!(n==null||n.length===0)){for(let s=0;s<n.length;s++){const t=n[s];if(t==null){o+=`
${I(`Pattern ${s+1}`,"red")}: ${I("Pattern inexistant","red")}`;continue}if("nbMotifMin"in t){const f=[];for(const i of t.shapes)i in y&&f.push(y[i].shapeDef);for(let i=0;i<=t.nbMotifMin;i++){const m=new Q([]);m.shapes=t.shapes,m.iterate=t.iterate,f.push(m.render(i,i+1,0))}o+=`
${I(`Pattern ${s+1}`,"blue")}:  <br>`,o+=L(Object.assign(v(f,{rxmin:0,rymin:-1,rxmax:0,rymax:1}),{pixelsParCm:20,scale:.4,optionsTikz:"transform shape"}),f)}else{const f="nbMotifMin"in t?null:new E(t.fonctionNb(43)).toString(),i="nbMotifMin"in t?null:t.fonctionRatio?t.fonctionRatio(43).values.map(e=>new E(e).toString()).join("~:~"):null,m="nbMotifMin"in t?null:t.fonctionFraction&&t.fonctionRatio?`\\dfrac{${(t.fonctionRatio(43).values[0]??0).toString()}}{${new E(t.fonctionNb(43)).toString()}}`:null;o+=`
${I(`Pattern ${s+1}`,"blue")}: Motif 43 : $\\left(${f}\\right)$ ${m?`; fraction : $${m}$ `:""} ${i?`; ratio : $${i}$`:""} ; formule : ${K(6)}$\\left[${U(t.formule??"")}\\right]$ <br>`;const x=t;o+=x.visualImg!=null?`<a href="${x.visualImg}" target="_blank">Image</a><br><br>`:"";const a="iterate3d"in t?new R({initialCells:[],type:"iso",shapes:t.shapes,prefixId:`Ex${this.numeroExercice}Q${s}`}):new Q([]);"iterate3d"in a?(a.shapes=["cube"],a.iterate3d=x.iterate3d):(a.shapes=x.shapes||C[W(0,C.length-1)],a.iterate=x.iterate);const g=Math.PI/2.5;let k=0,j=0;const l=[];for(let e=0;e<this.sup3;e++){l[e]=[];let h=[],M=1/0,d=-1/0,b=1/0,$=-1/0;for(let c=0;c<a.shapes.length;c++){let p=a.shapes[c];if(p in y){if(p==="carré"){const r=String(X(Object.keys(y)));p=r,a.shapes[c]=r}l[e].push(y[p].shapeDef)}else if(p==="cube"){a.shape==null&&(a.shape=F());const r=q(`cubeIsoQ${s}F${e}`,1);r.svg=function(D){return`
          <defs>
            <g id="cubeIsoQ${s}F${e}">
              ${N(g)}
              ${V(g)}
              ${z(g)}
            </g>
          </defs>`},l[e].push(r)}else console.warn(`Shape ${p} n'est pas dans listeShapesDef ou emojis et n'est pas un cube`)}if("iterate3d"in a){a.shape==null&&(a.shape=F(`cubeIsoQ${s}F${e}`,0,0,{scale:1}));{const c=A({pattern:a,i:s,j:e,angle:g,inCorrectionMode:!1});c&&this.destroyers.push(c),a.shape.codeSvg=`<use href="#cubeIsoQ${s}F${e}"></use>`,a.update3DCells(e+1).forEach(r=>{const[D,S]=O(r[0],r[1],r[2],g),u=F(`cubeIsoQ${s}F${e}`,D,S,{scale:1});u.x=D/20,u.y=-S/20,h.push(u),M=Math.min(M,u.y),d=Math.max(d,u.y+1),b=Math.min(b,u.x),$=Math.max($,u.x+1)})}}else h=a.render(e+1,0,0),{xmin:b,ymin:M,xmax:$,ymax:d}=v(h);l[e].push(...h),l[e].push(Y(`Motif ${e+1}`,($+b)/2,-1.5,0,"black",.8,"milieu"));const w=Z(P(b-2,-2),P($+2,-2),P($+2,d+2),P(b-2,d+2));w.pointilles=4,l[e].push(w),k=Math.max(k,d),j=Math.min(j,M)}o+=l.map((e,h)=>L(Object.assign(v(e,{rxmin:0,rymin:-1,rxmax:0,rymax:1}),{id:`Motif${s}F${h}`,pixelsParCm:20,yMax:k,yMin:j,scale:.5,style:"display: inline-block",optionsTikz:"transform shape"}),e)).join(`
`)+"<br>"}}this.listeQuestions=[o]}}}export{Ie as default,ye as refs,ge as titre,Me as uuid};
