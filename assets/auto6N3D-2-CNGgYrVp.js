import{af as m,br as N,a as c,r as l,o as f,m as v,l as M}from"./embellissements-BYV7mIDn.js";import{l as T}from"./Labyrinthe-BCFJckxv.js";import{E as $,K as x}from"./Exercice-DtXhjCyI.js";import{a as C}from"./questionMathLive-DdRvWqlN.js";import{h as y}from"./gestionInteractif-DujZpSu8.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./findPath-D-bvJShA.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";const Z=!0,_="AMCOpen",ee=!0,se="mathLive",te="Parcourir un labyrinthe de multiples",ie="06/12/2020",ne="29/10/2024",re="fd4d8",oe={"fr-fr":["auto6N3D-2"],"fr-2016":["6C10-5"],"fr-ch":["9NO4-18"]};class ae extends ${niveau;constructor(){super(),this.niveau="6e",this.nbQuestions=3,this.besoinFormulaireNumerique=["Tables",4,`1 : Tables de 2,5 et 10
2 : Tables de 3 et 9
3 : Tables de 4,6,7 et 8
4 : Mélange`],this.besoinFormulaire2Numerique=["Niveau de rapidité",6,`1 : Escargot
2 : Tortue
3 : Lièvre
4 : Antilope
5 : Guépard
6 : Au hasard`],this.besoinFormulaire3Numerique=["Nombre de lignes du labyrinthe (entre 2 et 8 ou bien 1 si vous laissez le hasard décider)",8],this.besoinFormulaire4Numerique=["Nombre de colonnes du labyrinthe (entre 2 et 8 ou bien 1 si vous laissez le hasard décider)",8],this.sup=4,this.sup2=this.niveau==="CM"?3:4,this.sup3=1,this.sup4=1}nouvelleVersion(){const b=this.niveau==="CM"?10:13;let t;this.sup===1?t=m([2,5,10],this.nbQuestions):this.sup===2?t=m([3,9],this.nbQuestions):this.sup===3?t=m([4,6,8],this.nbQuestions):t=N([c([2,5,10]),c([3,9]),c([4,6,7,8]),2,3,4,5,6,7,8,9],this.nbQuestions);const g=1.5;for(let s=0,a,h,i,e,r;s<this.nbQuestions;){const n=this.sup3===1?l(2,8):Math.max(2,this.sup3),u=this.sup4===1?l(3,11-n):Math.max(3,this.sup4);e=T({nbLignes:n,nbColonnes:u,scaleFigure:.7}),e.niveau=parseInt(this.sup2),i=e.choisitChemin(e.niveau),e.murs2d=e.construitMurs(i),e.chemin2d=e.traceChemin(i),a=`Trouver la sortie en ne passant que par les cases contenant un multiple de $${t[s]}$.<br>`,r=[];const p=[];for(let o=2;o<=b;o++)r.push(t[s]*o);for(let o=1;o<=u*n;o++)p.push(l(2,b)*t[s]+l(1,t[s]-1));r=m(r,u*n),e.nombres2d=e.placeNombres(i,r,p,g);const d={xmin:-4,ymin:0,xmax:5+3*u,ymax:2+3*n,pixelsParCm:20,scale:.4};a+=f(d,e.murs2d,e.nombres2d),(1+s)%3,a+=C(this,2*s,x.clavierNumbers,{texteAvant:"Indiquer le numéro de la bonne sortie :"}),y(this,2*s,{reponse:{value:`${n-i[i.length-1][1]}`}}),a+=C(this,2*s+1,x.clavierNumbers,{texteAvant:"<br>Combien de nombres rencontrés avant la sortie ?"}),y(this,2*s+1,{reponse:{value:`${e.chemin2d.length-1}`}}),h=`Voici le chemin en couleur ($${v(String(e.chemin2d.length-1))}$ nombres rencontrés avant la sortie) et la sortie est le numéro $${v(String(n-i[i.length-1][1]))}$.<br>`,h+=f(d,e.murs2d,e.nombres2d,e.chemin2d),this.questionJamaisPosee(s,r[0],p[0])&&(this.listeQuestions[s]=a,this.listeCorrections[s]=h,s++),M(this)}}}export{Z as amcReady,_ as amcType,ne as dateDeModifImportante,ie as dateDePublication,ae as default,ee as interactifReady,se as interactifType,oe as refs,te as titre,re as uuid};
