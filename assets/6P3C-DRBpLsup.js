import{c as k}from"./style-CcGLZIPY.js";import{s as S}from"./gestionInteractif-DujZpSu8.js";import{a as E}from"./questionMathLive-DdRvWqlN.js";import{g as D,r as b,l as T,U as I,b as r,aq as h,s as e,cG as x,_ as o,t as A,m as j}from"./embellissements-BYV7mIDn.js";import{a as L,p as R}from"./Personne-DRrbQFAY.js";import{E as z}from"./Exercice-DtXhjCyI.js";import"decimal.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./index-BUDQz6-w.js";import"mathjs";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"seedrandom";import"katex";import"earcut";import"roughjs";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"./AjouteTableauMathlive-Bz24QHd3.js";const fe="Résoudre des problèmes de proportionnalité en utilisant la linéarité simple",he=!0,ge="mathLive",qe=!0,xe="AMCHybride";let Q=!1,F=0;const P=[[3,4],[3,5],[3,7],[6,7],[3,8],[7,8],[7,9],[3,10],[7,10],[9,10],[3,11],[6,11],[7,11],[9,11],[7,12],[9,12],[11,12],[3,13],[6,13],[7,13],[9,13],[11,13],[12,13]];function N(f,l){const p=["dans un magasin de bricolage","dans une animalerie","au supermarché local","à l'épicerie","dans la boutique du musée"],d=[[]],t=[[]];d[0]=["articles","outils","accessoires","pièces d'outillage","pinceaux","ampoules","tournevis","spatules","raccords de tuyaux"],d[1]=["poissons rouges","cannetons","perruches","phasmes","colliers anti-puces","souris","lapereaux","paquets de graines"],d[2]=["sets de tables","verres","assiettes","os à macher","dosettes de café","packs de lait","paquets de pâtes"],d[3]=["mangues","ananas","fruits de la passion","melons","paquets de madeleines de Commercy","bergamottes","bredeles","pots de cancoillotte"],d[4]=["cartes","livres","gravures","puzzles","maquettes","roches","jeux de société"],t[0]=[5,4,1.25,3,.5,1.5,2,6,4.5],t[1]=[1.5,7,20,2.5,25,2,15,8],t[2]=[1.25,1.5,2,.5,5,4.5,3],t[3]=[2,2.5,1.25,1.5,4,7,12,3],t[4]=[.5,5,7,13.5,10,15,20];const i=b(0,4),s=[L(),R()],$=b(0,d[i].length-1),n=d[i][$],u=t[i][$]*(1+b(1,2)*.2*b(-1,1));let c,a,m;Q?(c=P[F][0],a=P[F][1],m=c*b(2,5)):(c=b(3,6),a=c*u,m=c*b(2,5));let g=!1,v=null,q;do v=c*b(2,5),v!==m&&(g=!0);while(g===!1);Q?q=a*b(2,5):q=v*u;let C=`${h(0)} ${s[0]} a repéré, ${p[i]}, des ${n} qui l'intéressent. Elle lit que ${c} ${n} coûtent $${k(a)}$${e()}€. `,_=C;C+=`Elle veut en acheter ${m}.<br> Combien d'euros va-t-elle dépenser${e()}? `,_+=`Elle veut en acheter ${m}.<br> Combien va-t-elle dépenser${e()}? `,_+=E(f,l,"",{texteApres:`${e()}€`});let M=`${h(0)} ${m} ${n}, c'est ${o(r(m/c))} fois ${o(String(c),"blue")} ${n}.<br> Si ${o(String(c),"blue")} ${n} coûtent $${k(a)}$${e()}€, alors ${o(r(m/c))} fois ${o(String(c),"blue")} ${n} coûtent ${o(r(m/c))} fois $${k(a)}$${e()}€.<br>${o(r(m/c))} $\\times$ ${o(`$${k(a)}$`,"blue")}${e()}€ = ${r(m*a/c)}${e()}€<br>Conclusion : ${s[0]} dépensera $${j(k(m*a/c))}$${e()}€.<br>`;const y=`${h(1)} ${s[1]} veut lui aussi acheter ces ${n}. Il dispose de $${k(q)}$${e()}€.<br> Combien peut-il en acheter${e()}?<br>`;return _+="<br>"+y+E(f,l+1,"",{texteApres:" "+n}),M+=`${h(1)} $${k(q)}$${e()}€, c'est ${o(r(q/a))} fois $${k(a)}$${e()}€.<br> Si avec $${k(a)}$${e()}€ on peut acheter ${o(String(c),"blue")} ${n}, alors avec ${o(r(q/a))} fois $${k(a)}$${e()}€, on peut acheter ${o(r(q/a))} fois ${o(String(c),"blue")} ${n}.<br>`,M+=`${o(r(q/a))} $\\times$ ${o(String(c),"blue")} = ${r(q*c/a)}<br>`,M+=`Conclusion : ${s[1]} pourra acheter ${A(r(q*c/a))} ${n}.<br>`,S(f,l,(m*a/c).toFixed(2)),S(f,l+1,(q*c/a).toFixed(2)),{qtexte:_,qtexteCorr:M}}function w(f,l){let p,d;const t=[{ingredient:"farine",recettes:["gâteau au citron","gaufres","crêpes","cake"],quantites_par_pers:[20,25,30,35,40,50]},{ingredient:"sucre",recettes:["gâteau","mousse au chocolat","pain perdu","riz au lait"],quantites_par_pers:[15,20,25,30,35]},{ingredient:"chocolat",recettes:["gâteau","mousse au chocolat","flan","riz au lait"],quantites_par_pers:[10,15,20,25,30,35]},{ingredient:"beurre",recettes:["gâteau","mousse au chocolat"],quantites_par_pers:[10,12,15,18]}],i=b(2,6),s=b(2,5),$=i*s,n=b(0,3),u=b(0,t[n].recettes.length-1),c=b(0,t[n].quantites_par_pers.length-1),a=t[n].quantites_par_pers[c]*i,m=a*b(2,5,[s]),g=t[n].quantites_par_pers[c]*$,v=[L(),R()];let q=`${h(0)} ${v[0]} lit sur sa recette de ${t[n].recettes[u]} pour ${i} personnes qu'il faut ${a}${e()}g de ${t[n].ingredient}. Elle veut adapter sa recette pour ${$} personnes.`;p=q,q+=`<br> Quelle masse, en${e()}g, de ${t[n].ingredient} doit-elle prévoir${e()}? `,p+=`<br> Quelle masse de ${t[n].ingredient} doit-elle prévoir${e()}? `,p+=E(f,l,"",{texteApres:" g"}),d=`${h(0)} ${$} personnes, c'est ${o(String($/i))} fois ${i} personnes. Il faut donc ${o(String($/i))} fois plus de ${t[n].ingredient}.<br>${a}${e()}g $\\times $ ${o(String($/i))} = ${g}${e()}g. <br>Conclusion : ${v[0]} doit utiliser ${A(g)}${e()}g de ${t[n].ingredient} pour ${$} personnes.<br>`;const C=`${h(1)} ${v[1]} utilise la même recette de ${t[n].recettes[u]}. Il dispose de ${m}${e()}g de ${t[n].ingredient}.
  Pour combien de personnes au maximum peut-il cuisiner${e()}?`;return p+="<br> "+C+E(f,l+1,"",{texteApres:" personnes"}),d+=`${h(1)} ${m}${e()}g, c'est ${o(String(m/a))} fois ${a}${e()}g. ${v[1]} peut donc cuisiner pour ${o(String(m/a))} fois plus de personnes.<br>${i}${e()}g $\\times $ ${o(String(m/a))} = ${i*m/a}. <br>Conclusion : ${v[1]} peut donc préparer sa recette pour ${A(i*m/a)} personnes.`,S(f,l,g),S(f,l+1,(i*m/a).toFixed(3)),{qtexte:p,qtexteCorr:d}}function U(f,l){let p,d;const t=[{locomotion:"piéton",vitesse:[3,3.5,4,4.5]},{locomotion:"cycliste",vitesse:[12,15,16,17,18,20,22]},{locomotion:"camion",vitesse:[75,77.5,80,82.5,85]},{locomotion:"train",vitesse:[125,150,175,185,195]}],i=b(0,3),s=[{temps:"15 minutes",rapport:.25},{temps:"30 minutes",rapport:.5},{temps:"45 minutes",rapport:.75},{temps:"1 heure et demie",rapport:1.5},{temps:"2 heures",rapport:2},{temps:"2 heures et demie",rapport:2.5},{temps:"3 heures",rapport:3}],$=b(0,t[i].vitesse.length-1),n=Q?I(2,5):[.25,.5,.75,1.25,1.5,2];let u=b(0,n.length-1);for(;s[$].rapport===n[u];)u=b(0,n.length-1);const c=s[$].rapport*t[i].vitesse[$],a=r(n[u]*t[i].vitesse[$]);let m=`${h(0)} Un ${t[i].locomotion} parcourt en moyenne ${r(t[i].vitesse[$])}${e()}km en une heure.<br>`;return p=m,m+=`Quelle distance, en${e()}km, va-t-il parcourir, à la même vitesse, en ${s[$].temps}${e()}? `,p+=`Quelle distance va-t-il parcourir, à la même vitesse, en ${s[$].temps}${e()}? `,p+=E(f,l,"",{texteApres:" km"}),d=`${h(0)} ${s[$].temps}, c'est ${o(r(s[$].rapport))} fois une heure.<br> En une heure, le ${t[i].locomotion} parcourt ${o(r(t[i].vitesse[$]),"blue")}${e()}km donc en ${s[$].temps}, il va parcourir ${o(r(s[$].rapport))} fois ${o(r(t[i].vitesse[$]),"blue")}${e()}km. <br>${o(r(s[$].rapport))} $\\times$ ${o(r(t[i].vitesse[$]),"blue")}${e()}km = ${r(c)}${e()}km <br> Conclusion : Le ${t[i].locomotion} va donc parcourir ${A(r(c))}${e()}km.<br>`,`${h(1)}${a}${e()}${e()}`,p+=`<br> ${h(1)} Combien de temps va-t-il mettre pour parcourir ${a}${e()}km à cette même vitesse${e()}? `+E(f,l+1,"",{texteApres:" minutes"}),d+=`${h(1)} ${a}${e()}km, c'est ${o(r(n[u]))} fois ${r(t[i].vitesse[$])}${e()}km.
      Le ${t[i].locomotion} parcourt ${r(t[i].vitesse[$])}${e()}km en une heure. <br>Il va mettre donc ${o(r(n[u]))} fois une heure à parcourir ${a}${e()}km. <br>Conclusion : Le ${t[i].locomotion} va donc mettre  ${r(n[u])} heure${n[u]>=2?"s":""} à parcourir ${a}${e()}km,  ce qui fait ${A(n[u]*60)} minutes (${r(n[u])} $\\times$ 60 minutes).`,S(f,l,c),S(f,l+1,(n[u]*60).toFixed(2)),{qtexte:p,qtexteCorr:d}}function B(f,l){let p,d;const t=P[F][0],i=P[F][1],s=[.25,.5,.75,1.25,1.5,2,3,4,5],$=b(0,s.length-1),n=b(0,s.length-1,[$]);Q&&(s[$]=b(2,5),s[n]=b(2,5,[s[$]]));const u=r(s[$]*t,2),c=r(s[n]*i,2),a=[L(),R()];p=`${h(0)} Sur une carte sur laquelle ${t} cm représente ${i}${e()}km dans la réalité,
${a[0]} mesure son trajet et elle trouve une distance de ${u} cm. <br>`,p+`À quelle distance, en${e()}km, cela correspond dans la réalité${e()}?`,p+=`À quelle distance cela correspond dans la réalité${e()}? `+E(f,l,"",{texteApres:" km"}),d=`${h(0)} ${u} cm, c'est ${o(r(s[$]))} fois ${t} cm. <br>
Dans la réalité, ${t} cm correspond à ${o(String(i),"blue")}${e()}km donc  ${u} cm va correspondre à ${o(r(s[$]))} fois ${o(String(i),"blue")}${e()}km.  <br>${o(r(s[$]))} $\\times$ ${o(String(i),"blue")}${e()}km = ${r(s[$]*i,2)}${e()}km <br>Conclusion : Le trajet de ${a[0]} est de ${A(r(s[$]*i,2))}${e()}km.<br>`;let m=`${h(1)} Deux villes sont distantes de ${c}${e()}km. `;return p+="<br> "+m,m+=`Quelle distance, en cm, va-t-on mesurer sur la carte entre ces deux villes${e()}?`,p+=`Quelle distance va-t-on mesurer sur la carte entre ces deux villes${e()}?`+E(f,l+1,"",{texteApres:" cm"}),d+=`${h(1)} ${c}${e()}km, c'est ${o(r(s[n]))} fois ${i}${e()}km.
Or ${i}${e()}km est représenté par ${o(String(t),"blue")} cm sur la carte. <br>Donc ${c}${e()}km est représenté par ${o(r(s[n]))} fois ${o(String(t),"blue")} cm sur la carte. <br>${o(r(s[n]))} $\\times$ ${o(String(t),"blue")} cm = ${r(s[n]*t,2)} cm <br>Conclusion : Les deux villes sont séparées de ${A(r(s[n]*t,2))} cm sur la carte.`,S(f,l,(s[$]*i).toFixed(2)),S(f,l+1,(s[n]*t).toFixed(2)),{qtexte:p,qtexteCorr:d}}function G(f,l){let p,d;const t=[{matiere:"de la peinture",unite:"L",qtt_matiere_unitaire:[.5,1,1.5,2],qtt_surface:[10,25,15]},{matiere:"du gazon",unite:"kg",qtt_matiere_unitaire:[2.5,3,5,10],qtt_surface:[200,175,150]},{matiere:"du carrelage",unite:"carreaux",qtt_matiere_unitaire:[24,40,60,100],qtt_surface:[10,20,5]}],i=[L(),R()],s=b(0,t.length-1),$=b(0,t[s].qtt_matiere_unitaire.length-1),n=b(0,t[s].qtt_surface.length-1),u=Q?I(2,5):[.25,.5,.75,1.25,1.5,2,3,4,5],c=t[s].qtt_matiere_unitaire[$],a=b(0,u.length-1),m=u[a]*t[s].qtt_surface[n],g=b(0,u.length-1,[a]),v=u[g]*t[s].qtt_matiere_unitaire[$],q=b(-2,2,[0]),C=u[g]*t[s].qtt_surface[n]+q,_=r(c);p=`${h(0)} ${i[0]} doit acheter ${t[s].matiere}. Sur la notice, il est indiqué de prévoir ${_}${e()}${t[s].unite} pour ${t[s].qtt_surface[n]}${e()}m${x(2)}. <br> Combien de${e()}${t[s].unite} doit-elle en acheter pour une surface de ${r(m)}${e()}m${x(2)}${e()}?`+E(f,l,"",{texteApres:" "+t[s].unite}),d=`${h(0)} ${r(m)}${e()}m${x(2)}, c'est ${o(r(u[a]))} fois ${t[s].qtt_surface[n]}${e()}m${x(2)}. <br>Il va donc falloir ${o(r(u[a]))} fois ${o(_,"blue")}${e()}${t[s].unite} pour ${r(m)}${e()}m${x(2)}. <br>${o(r(u[a]))} $\\times$ ${o(_,"blue")}${e()}${t[s].unite} = ${r(u[a]*c,3)}${e()}${t[s].unite}<br>Conclusion : ${i[0]} doit acheter ${A(r(u[a]*c,3))}${e()}${t[s].unite}.<br>  `;const y=`${h(1)} ${i[1]} a acheté ${t[s].matiere}. Il lui en reste ${r(v)}${e()}${t[s].unite}. Sur la notice, il est aussi indiqué de prévoir ${_}${e()}${t[s].unite} pour ${r(t[s].qtt_surface[n])}${e()}m${x(2)}. <br>En a-t-il suffisamment pour la surface de ${r(C)}${e()}m${x(2)} qu'il lui reste à faire${e()}?<br>`;return p+="<br>"+y+E(f,l+1,"",{texteApres:" (oui ou non)"}),d+=`${h(1)} ${r(v)}${e()}${t[s].unite}, c'est ${o(r(u[g]))} fois ${_}${e()}${t[s].unite}. <br>Avec ${r(v)}${e()}${t[s].unite} on peut donc traiter une surface de ${o(r(u[g]))}
fois ${o(r(t[s].qtt_surface[n]),"blue")}${e()}m${x(2)}. <br>${o(r(u[g]))} $\\times$ ${o(r(t[s].qtt_surface[n]),"blue")}${e()}m${x(2)} = ${r(u[g]*t[s].qtt_surface[n],3)}${e()}m${x(2)}<br>`,d+=u[g]*t[s].qtt_surface[n]<C?`Conclusion : ${r(u[g]*t[s].qtt_surface[n],3)}${e()}m${x(2)} < ${r(C)}${e()}m${x(2)} donc ${A("non")}, ${i[1]} n'en a pas assez pour ${r(C)}${e()}m${x(2)}. <br>`:`Conclusion : ${r(u[g]*t[s].qtt_surface[n],3)}${e()}m${x(2)} > ${r(C)}${e()}m${x(2)} donc ${A("oui")}, ${i[1]} en a suffisamment pour ${r(C)}${e()}m${x(2)}. <br>`,S(f,l,(u[a]*c).toFixed(3)),S(f,l+1,u[g]*t[s].qtt_surface[n]>C?"oui":"non"),{qtexte:p,qtexteCorr:d}}const ve="f7a14",Ce={"fr-fr":["BP2AutoL5","6P3C"],"fr-2016":["6P11","BP2AutoL5"],"fr-ch":["9FA3-9"]};class _e extends z{constructor(){super(),this.spacing=2,this.spacingCorr=2,this.nbQuestions=6,this.besoinFormulaireCaseACocher=["Version simplifiée ne comportant que des nombres entiers"],this.sup=!1,this.besoinFormulaire2Texte=["Type de questions",`Nombres séparés par des tirets :
1 : Achat
2 : Recette
3 : Distance
4 : Échelle
5 : Surface
6 : Mélange`],this.sup2=7}nouvelleVersion(){let l;this.spacing=2,this.spacingCorr=2,this.interactif?this.consigne="":this.consigne=this.nbQuestions===1?"Répondre à la question posée en justifiant.":"Répondre aux questions posées en justifiant.";let p=0,d=0;const t=D({max:5,defaut:6,melange:6,nbQuestions:this.nbQuestions,saisie:this.sup2}).map(Number);for(let i=0,s=0;i<this.nbQuestions&&s<50;){switch(F=b(0,P.length-1),this.sup?Q=!0:Q=!1,t[i]){case 1:l=N(this,d),p=2;break;case 2:l=w(this,d),p=2;break;case 3:l=U(this,d),Q?p=1:p=2;break;case 4:l=B(this,d),p=2;break;case 5:default:l=G(this,d),Q?p=1:p=2;break}this.questionJamaisPosee(i,F,l.qtexteCorr)&&(this.listeQuestions[i]=l.qtexte,this.listeCorrections[i]=l.qtexteCorr,i++,d+=p),s++}T(this)}}export{qe as amcReady,xe as amcType,_e as default,he as interactifReady,ge as interactifType,Ce as refs,fe as titre,ve as uuid};
