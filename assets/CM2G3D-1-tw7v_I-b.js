import{g as ce,aP as ie,p as D,r as A,aJ as y,cg as z,ag as L,A as T,be as G,G as m,cB as N,n as F,ce as J,aG as Q,ad as w,k as n,T as ue,aH as ge,aK as P,aS as q,b as C,e as M,o as me,_ as H,l as $e}from"./embellissements-BYV7mIDn.js";import{A as de}from"./Alea2iep-C433sqvs.js";import{E as pe}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./index-BUDQz6-w.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"seedrandom";const Se="Tracer des carrés et des rectangles de longueurs données",De="10/09/2022",je="2203a",Be={"fr-fr":["CM2G3D-1"],"fr-2016":["6G13"],"fr-ch":["9ES4-1"]};class Oe extends pe{constructor(){super(),this.nbQuestions=4,this.besoinFormulaireTexte=["Figure à tracer (séparé par un trait d'union)",`0 : Mélange
1 : Carré
2 : Rectangle
3 : Carré (une diagonale)
4 : Rectangle (une diagonale)
5 : Losange (un côté et une diagonale)
6 : Losange (2 diagonales)
7 : Parallélogramme`],this.sup="1-2-3-4"}nouvelleVersion(K){const V=ce({saisie:this.sup,min:1,max:7,defaut:1,melange:0,nbQuestions:this.nbQuestions}).map(Number),_={1:"Carré",2:"Rectangle",3:"Carré1diag",4:"Rectangle1diag",5:"Losange",6:"Losange2diag",7:"Parallélogramme"};for(let B=0,R,j,I=0;B<this.nbQuestions&&I<50;){const i=_[V[B]],v=[],c=ie(4,["P","Q"]),t=D(0,0,c.charAt(0),"below left");let o,e,a,S,b;switch(i){case"Carré":{S="carré";let s=!1,l=[0,0,1e3];const g=[];let u;for(let f=0;f<20&&!s;f++){const d=A(20,50,g)*2;g.push(d/2);const $=d/Math.sqrt(2),h=$*.1-Math.floor($)*.1;if(u=[$,d,h],u[2]<.005){l=u,s=!0;break}else u[2]<l[2]&&(l=u)}o=D(l[1]/10,0,c.charAt(1),"below right"),b=J(t,o,4),e=D(b.listePoints[2].x,b.listePoints[2].y,c.charAt(2),"above right"),a=D(b.listePoints[3].x,b.listePoints[3].y,c.charAt(3),"above left");break}case"Carré1diag":{S="carré";let s=!1,l=[0,0,1e3];const g=[];let u;for(let f=0;f<20&&!s;f++){const d=A(25,50,g)*2;g.push(d/2);const $=d/Math.sqrt(2),h=$*.1-Math.floor($)*.1;if(u=[d,$,h],u[2]<.005){l=u,s=!0;break}else u[2]<l[2]&&(l=u)}o=D(l[1]/10,0,c.charAt(1),"below right"),b=J(t,o,4),e=D(b.listePoints[2].x,b.listePoints[2].y,c.charAt(2),"above right"),a=D(b.listePoints[3].x,b.listePoints[3].y,c.charAt(3),"above left");break}case"Rectangle":{S="rectangle";let s=!1,l=[0,0,0,1e3];const g=[];let u;for(let f=0;f<20&&!s;f++){const d=A(22,45,g)*2;g.push(d/2);for(let $=0;$<20&&!s;$++){const h=A(35,60,d),x=Math.sqrt(h*h+d*d);if(u=[d,h,x,x*.1-Math.floor(x)*.1],u[3]<.005){l=u,s=!0;break}else u[3]<l[3]&&(l=u)}}o=D(l[0]/10,0,c.charAt(1),"below right"),e=y(o,l[1]/10,90,c.charAt(2)),a=y(e,l[0]/10,180,c.charAt(3)),b=T(t,o,e,a);break}case"Rectangle1diag":{S="rectangle";let s=!1,l=[0,0,0,1e3];const g=[];let u;for(let d=0;d<20&&!s;d++){const $=A(22,45,g)*2;g.push($/2);for(let h=0;h<20&&!s;h++){const x=A($+5,100),p=Math.sqrt(x*x-$*$);if(u=[$,x,p,p*.1-Math.floor(p)*.1],u[3]<.005){l=u,s=!0;break}else u[3]<l[3]&&(l=u)}}const f=l[1]/10;o=D(l[0]/10,0,c.charAt(1),"below right"),e=G(N(o,F(t,o)),L(t,f),c[2],1),e.positionLabel="above right",a=G(N(t,F(t,o)),L(o,f),c[3],1),a.positionLabel="above left",b=T(t,o,e,a);break}case"Losange":{S="losange";let s=!1,l=[0,0,0,1e3];const g=[];let u;for(let x=0;x<20&&!s;x++){const p=A(20,50,g)*2;g.push(p/2);for(let O=0;O<20&&!s;O++){const k=A(p/2+20,80,p),E=2*Math.sqrt(k*k*.01/2+k*k*.01/2-p*p*.01/4);if(u=[p,k,k,E-Math.floor(E*10)*.1],u[3]<.005){l=u,s=!0;break}else u[3]<l[3]&&(l=u)}}const f=l[0]/10,d=l[1]/10;e=y(t,f,A(-10,10),c[2]),e.positionLabel="right";const $=L(t,d),h=L(e,d);o=z($,h,c[1],2),o.positionLabel="below",a=z($,h,c[3],1),a.positionLabel="above",b=T(t,o,e,a);break}case"Losange2diag":{S="losange";let s=!1,l=[0,0,0,1e3];const g=[];let u;for(let $=0;$<10&&!s;$++){const h=A(15,30,g)*2;g.push(h);for(let x=0;x<20&&!s;x++){const p=A(15,30,h)*2,O=Math.sqrt(p*p+h*h);if(u=[h,O,p,p*.1-Math.floor(p)*.1],u[3]<.005){l=u,s=!0;break}else u[3]<l[3]&&(l=u)}}const f=2*l[0]/10,d=2*l[2]/10;e=y(t,f,A(-10,10),c[2]),e.positionLabel="right",o=G(N(m(t,e),F(t,e)),L(m(t,e),d/2),c[1],2),o.positionLabel="below",a=G(N(m(t,e),F(t,e)),L(m(t,e),d/2),c[3],1),a.positionLabel="above",b=T(t,o,e,a);break}case"Parallélogramme":default:{S="parallélogramme";const s=A(25,45)*2;let l=!1,g=[0,0,0,1e3];const u=[];let f;u.push(s);for(let x=0;x<10&&!l;x++){const p=A(30,80,u);u.push(p);for(let O=0;O<30&&!l;O++){const k=A(Math.max(Math.abs(s-p)+20,30),Math.min(s+p-20,150)),E=Math.sqrt(k*k*.01/2+p*p*.01/2-s*s*.01/4);if(f=[s,p,k,E-Math.floor(E*10)*.1],f[3]<.005){g=f,l=!0;break}else f[3]<g[3]&&(g=f)}}const d=g[0]/10,$=g[1]/10,h=g[2]/10;e=y(t,d,A(-10,10),c[2]),e.positionLabel="right",a=z(L(t,$),L(e,h),c[3],1),a.positionLabel="above",o=z(L(t,h),L(e,$),c[1],2),o.positionLabel="below",b=T(t,o,e,a);break}}const U=i==="Carré"||i==="Rectangle"?Q(o,t,a,"red",.7,1,.6,"red",.2):w(),W=i==="Carré"||i==="Rectangle"?Q(t,o,e,"red",.7,1,.6,"red",.2):w(),X=i==="Carré"||i==="Rectangle"?Q(o,e,a,"red",.7,1,.6,"red",.2):w(),Y=i==="Carré"||i==="Rectangle"?Q(e,a,t,"red",.7,1,.6,"red",.2):w(),Z=i==="Losange2diag"||i==="Carré1diag"?Q(e,m(t,e),a,"red",.7,1,.6,"red",.2):w(),ee=n(t,e,"blue"),re=n(o,a,"blue"),te=ue(t,o,e,a),oe=ge(t,o,e,a);if(b.epaisseur=2,v.push(te,oe,b,U,W,X,Y,Z,ee,re),i==="Rectangle"||i==="Carré"){v.push(P(o,t),P(e,o),P(a,e),P(t,a));const s=q(`${t.nom}${e.nom}≃${C(n(t,e).longueur,1)} cm`,m(t,e),e,"blue");s.mathOn=!1,s.scale=1.2,v.push(s)}else if(i==="Carré1diag"){const s=q(`${t.nom}${e.nom}=${C(n(t,e).longueur,1)} cm`,m(t,e),e);s.mathOn=!1;const l=q(`${o.nom}${a.nom}=${C(n(o,a).longueur,1)} cm`,m(o,a),a);l.mathOn=!1;const g=q(`${a.nom}${e.nom}≃${C(n(a,e).longueur,1)} cm`,a,e,"blue");g.mathOn=!1,g.scale=1.2,v.push(s,l,g)}else if(i==="Rectangle1diag"){v.push(P(o,t));const s=q(`${t.nom}${e.nom}=${C(n(t,e).longueur,1)} cm`,m(t,e),e);s.mathOn=!1;const l=q(`${o.nom}${e.nom}≃${C(n(o,e).longueur,1)} cm`,e,o,"blue");l.mathOn=!1,l.scale=1.2,v.push(s,l)}else if(i==="Losange"){v.push(P(o,t),P(e,o),P(a,e),P(t,a));const s=q(`${t.nom}${e.nom}=${C(n(t,e).longueur,1)} cm`,m(t,e),e);s.mathOn=!1;const l=q(`${o.nom}${a.nom}≃${C(n(o,a).longueur,1)} cm`,m(o,a),a,"blue");l.mathOn=!1,l.scale=1.2,v.push(s,l)}else if(i==="Losange2diag"){const s=q(`${t.nom}${e.nom}=${C(n(t,e).longueur,1)} cm`,m(t,e),e);s.mathOn=!1;const l=q(`${o.nom}${a.nom}=${C(n(o,a).longueur,1)} cm`,m(o,a),a);l.mathOn=!1;const g=q(`${a.nom}${e.nom}≃${C(n(a,e).longueur,1)} cm`,a,e,"blue");g.mathOn=!1,g.scale=1.2,v.push(s,l,g)}else if(i==="Parallélogramme"){const s=q(`${t.nom}${e.nom}=${C(n(t,e).longueur,1)} cm`,m(t,e),e);s.mathOn=!1;const l=q(`${o.nom}${a.nom}≃${C(n(o,a).longueur,1)} cm`,m(t,e),o,"blue");l.mathOn=!1,l.scale=1.2,v.push(s,P(t,a),P(a,e),l)}const r=new de;i==="Rectangle"||i==="Carré"?(r.recadre(-n(t,o).longueur,n(o,e).longueur),r.pointCreer(t,{dx:-.5,dy:-.5,label:c.charAt(0)}),r.regleMontrer(t),r.regleSegment(t,o),r.pointCreer(o,{dx:.2,dy:-.5,label:c.charAt(1)}),r.regleMasquer(),r.equerreMontrer(o),r.equerreRotation(90),r.crayonMontrer(o),r.tracer(y(o,n(o,e).longueur+2,90)),r.equerreMasquer(),r.codageAngleDroit(t,o,e),r.regleMontrer(),r.regleDeplacer(o),r.regleRotation(90),r.crayonMontrer(),r.crayonDeplacer(e),r.pointCreer(e,{dx:.2,dy:.8,label:c.charAt(2),tempo:10}),r.crayonMasquer(),r.regleMasquer(),r.equerreRotation(90),r.equerreMontrer(e),r.crayonMontrer(),r.tracer(y(e,n(e,a).longueur+2,-180)),r.codageAngleDroit(o,e,a),r.equerreMasquer(),r.regleDeplacer(e),r.regleMontrer(),r.regleRotation(180),r.crayonDeplacer(a),r.pointCreer(a,{dx:-.5,dy:.8,label:c.charAt(3)}),r.regleSegment(a,t),r.regleMasquer(),r.crayonMasquer()):i==="Rectangle1diag"?(r.recadre(-n(t,o).longueur,n(o,e).longueur),r.pointCreer(t,{dx:-.5,dy:-.5,label:c.charAt(0)}),r.regleMontrer(t),r.regleSegment(t,o),r.pointCreer(o,{dx:.2,dy:-.5,label:c.charAt(1)}),r.regleMasquer(),r.equerreMontrer(o),r.equerreRotation(90),r.crayonMontrer(o),r.tracer(y(o,n(o,e).longueur+2,90)),r.equerreMasquer(),r.codageAngleDroit(t,o,e),r.compasMontrer(t),r.compasEcarterAvecRegle(n(t,e).longueur),r.regleMasquer(),r.compasTracerArcCentrePoint(t,e,{tempo:40}),r.compasMasquer(),r.crayonMontrer(e),r.pointCreer(e,{dx:.2,dy:.5,label:c.charAt(2)}),r.equerreMontrer(e),r.equerreRotation(90),r.crayonMontrer(e),r.tracer(y(e,n(t,e).longueur+2,180)),r.equerreMasquer(),r.compasMontrer(e),r.compasEcarterAvecRegle(n(t,o).longueur),r.regleMasquer(),r.compasTracerArcCentrePoint(e,a,{tempo:40}),r.compasMasquer(),r.codageAngleDroit(o,e,a),r.crayonMontrer(a),r.pointCreer(a,{dx:-.2,dy:.5,label:c.charAt(3)}),r.regleSegment(t,a),r.regleMasquer(),r.crayonMasquer(),r.textePoint(`${c.charAt(1)}${c.charAt(2)} ≃ ${C(n(o,e).longueur,3,!0)} cm`,m(o,e))):i==="Losange"||i==="Parallélogramme"?(r.recadre(-n(t,o).longueur,n(o,a).longueur/2),r.pointCreer(t,{dx:-.5,dy:-.5,label:c.charAt(0)}),r.regleMontrer(t),r.regleSegment(t,e),r.pointCreer(e,{dx:.2,dy:-.5,label:c.charAt(2)}),r.compasMontrer(t),r.compasEcarterAvecRegle(n(t,o).longueur),r.regleMasquer(),r.compasTracerArcCentrePoint(t,o,{tempo:40}),r.compasEcarterAvecRegle(n(e,o).longueur),r.regleMasquer(),r.compasTracerArcCentrePoint(e,o,{tempo:40}),r.compasMasquer(),r.crayonMontrer(o),r.pointCreer(o,{dx:.2,dy:-.5,label:c.charAt(1)}),r.regleSegment(t,o),r.regleSegment(e,o),r.crayonMasquer(),r.regleMasquer(),r.compasMontrer(t),r.compasEcarterAvecRegle(n(t,a).longueur),r.regleMasquer(),r.compasTracerArcCentrePoint(t,a,{tempo:40}),r.compasMontrer(e),r.compasEcarterAvecRegle(n(e,a).longueur),r.regleMasquer(),r.compasTracerArcCentrePoint(e,a,{tempo:40}),r.compasMasquer(),r.crayonMontrer(),r.pointCreer(a,{dx:.2,dy:.5,label:c.charAt(3)}),r.regleSegment(t,a),r.regleSegment(e,a),r.crayonMasquer(),r.regleMasquer(),r.regleSegment(o,a),r.regleMasquer(),r.textePoint(`${c.charAt(1)}${c.charAt(3)} ≃ ${C(n(o,a).longueur,3,!0)} cm`,m(o,a))):(i==="Losange2diag"||i==="Carré1diag")&&(r.recadre(-n(t,o).longueur,n(o,a).longueur),r.pointCreer(t,{dx:-.5,dy:-.5,label:c.charAt(0)}),r.regleMontrer(t),r.regleSegment(t,e),r.pointCreer(e,{dx:.2,dy:-.5,label:c.charAt(2)}),r.regleMontrer(t),r.regleRotation(n(t,e).angleAvecHorizontale),r.crayonMontrer(m(t,e)),r.pointCreer(m(t,e)),r.regleMasquer(),r.equerreMontrer(m(t,e)),r.equerreRotation(n(t,e).angleAvecHorizontale),r.crayonMontrer(m(t,e)),r.tracer(y(m(t,e),n(o,a).longueur/2+2,n(t,e).angleAvecHorizontale+90)),r.equerreMasquer(),r.regleMontrer(),r.regleSegment(y(m(t,e),n(o,a).longueur/2+2,n(t,e).angleAvecHorizontale+270),y(m(t,e),n(o,a).longueur/2+2,n(t,e).angleAvecHorizontale+90)),r.regleMasquer(),r.crayonMontrer(m(t,e)),r.codageAngleDroit(e,m(t,e),a),r.regleMontrer(m(t,e)),r.regleRotation(n(t,e).angleAvecHorizontale+90),r.crayonMontrer(a),r.pointCreer(a,{dx:.2,dy:.5,label:c.charAt(3)}),r.regleDeplacer(m(t,e)),r.regleRotation(n(t,e).angleAvecHorizontale+90+180),r.crayonMontrer(o),r.pointCreer(o,{dx:.2,dy:-.5,label:c.charAt(1)}),r.regleDeplacer(t),r.regleSegment(t,o),r.regleDeplacer(o),r.regleSegment(o,e),r.regleDeplacer(a),r.regleSegment(a,e),r.regleDeplacer(t),r.regleSegment(t,a),r.regleMasquer(),r.crayonMasquer(),r.textePoint(`${c.charAt(3)}${c.charAt(2)} ≃ ${C(n(t,o).longueur,3,!0)} cm`,m(a,e))),R=`Construire le ${S} $${c}$`,(i==="Rectangle"||i==="Carré")&&(R+=` avec $${t.nom+o.nom} = ${M(n(t,o).longueur,1)}~\\text{cm}$`),i==="Rectangle"&&(R+=` et $${o.nom+e.nom} = ${M(n(o,e).longueur,1)}~\\text{cm}$`),i==="Losange"&&(R+=` avec $${t.nom+o.nom} = ${M(n(t,o).longueur,1)}~\\text{cm}$ et $${t.nom+e.nom} = ${M(n(t,e).longueur,1)}~\\text{cm}$`),i==="Losange2diag"&&(R+=` avec $${t.nom+e.nom} = ${M(n(t,e).longueur,1)}~\\text{cm}$ et $${o.nom+a.nom} = ${M(n(o,a).longueur,1)}~\\text{cm}$`),i==="Carré1diag"&&(R+=` avec $${t.nom+e.nom} = ${M(n(t,e).longueur,1)}~\\text{cm}$`),i==="Rectangle1diag"&&(R+=` avec $${t.nom+o.nom} = ${M(n(t,o).longueur,1)}~\\text{cm}$ et $${t.nom+e.nom} = ${M(n(t,e).longueur,1)}~\\text{cm}$`),i==="Parallélogramme"&&(R+=` avec $${t.nom+e.nom} = ${M(n(t,e).longueur,1)}~\\text{cm}$, $${t.nom+a.nom} = ${M(n(t,a).longueur,1)}~\\text{cm}$ et $${a.nom+e.nom} = ${M(n(a,e).longueur,1)}~\\text{cm}$`),R+=".";const ae=Math.min(t.x,o.x,e.x,a.x)-2,ne=Math.max(t.x,o.x,e.x,a.x)+2,le=Math.min(t.y,o.y,e.y,a.y)-2,se=Math.max(t.y,o.y,e.y,a.y)+2;j=me({xmin:ae,ymin:le,xmax:ne,ymax:se,pixelsParCm:20,scale:1},v),(i==="Rectangle"||i==="Carré")&&(j+=`<br><br>${H(`Pour l'auto-correction, on peut vérifier que $[${t.nom+e.nom}]$ et $[${o.nom+a.nom}]$ mesurent bien tous les deux $${M(n(t,e).longueur,1)}~\\text{cm}$`)}.<br>`),i==="Losange"&&(j+=`<br><br>${H(`Pour l'auto-correction, on peut vérifier que $[${o.nom+a.nom}]$ mesure environ $${M(n(o,a).longueur,1)}~\\text{cm}$`)}.<br>`),(i==="Losange2diag"||i==="Carré1diag")&&(j+=`<br><br>${H(`Pour l'auto-correction, on peut vérifier que tous les côtés du ${S} mesure environ $${M(n(t,o).longueur,1)}~\\text{cm}$`)}.<br>`),i==="Rectangle1diag"&&(j+=`<br><br>${H(`Pour l'auto-correction, on peut vérifier que $[${o.nom+e.nom}]$ mesure environ $${M(n(o,e).longueur,1)}~\\text{cm}$`)}.<br>`),i==="Parallélogramme"&&(j+=`<br><br>${H(`Pour l'auto-correction, on peut vérifier que $[${o.nom+a.nom}]$ mesure environ $${M(n(o,a).longueur,1)}~\\text{cm}$`)}.<br>`),j+=r.htmlBouton(K??0,B),this.questionJamaisPosee(B,n(t,o).longueur,n(o,e).longueur)&&(this.listeQuestions[B]=R,this.listeCorrections[B]=j,B++),I++}$e(this)}}export{De as dateDePublication,Oe as default,Be as refs,Se as titre,je as uuid};
