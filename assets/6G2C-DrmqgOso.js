import{g as Je,r as Z,p as u,n as N,A as x,ag as U,be as y,ci as ye,aa as fe,I as e,M as $,aR as T,cu as d,k as H,ah as pe,cS as se,cg as Xe,b8 as Ke,aE as Ve,ct as Ee,b6 as Fe,C as ze,dd as Ue,T as Re,aH as Be,o as ve,D as Ie,aq as qe}from"./embellissements-BYV7mIDn.js";import{E as We}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const us="Résoudre des problèmes mettant en jeu des distances à un point",ls=!1,is="03/08/2025",hs="29c3c",ps={"fr-fr":["6G2C"],"fr-2016":["6G54"],"fr-ch":["9ES4-15"]};class ks extends We{constructor(){super(),this.comment="Cet exercice n'est pas interactif, il s'agit d'un problème de géométrie plane classique à faire sur papier.",this.nbQuestions=1,this.besoinFormulaireTexte=["Types de question",`Nombres séparés par des tirets :
1 : Cabane au coin de l'enclos
2 : Cabane sur un côté de l'enclos
3 : Cabane sans contact avec l'enclos
4 : Mélange`],this.sup="1"}nouvelleVersion(){const Ge=Je({saisie:this.sup,nbQuestions:this.nbQuestions,min:1,max:3,defaut:1,melange:4}).map(Number);for(let ke=0,de=0;ke<this.nbQuestions&&de<50;){const f=Z(12,16),k=Z(10,f-1),q=Z(4,Math.ceil(f/3)),z=Z(3,Math.min(Math.ceil(k/3),q-1)),S=Z(1,q-1),h=Z(Math.max(S,q-S+1),k-z),le=[],r=[];let ce="",He="";const Y=u(0,0),K=u(f,0),V=u(f,k),_=u(0,k),te=N(Y,K),ie=N(K,V),ae=N(V,_),be=N(_,Y);let s,g,n,o,t;const $e=x(Y,K,V,_);switch(Ge[ke]){case 2:{s=u(f,Z(3,k-z-1)),g=u(f,s.y+z),o=u(s.x-q,s.y),n=u(o.x,g.y),t=u(s.x-S,s.y,"P","above");const he=d(H(s,K),`${s.y}\\,\\text{m}`,.2,"black",1,1,"gray",!0);le.push(he);let P;const B=fe(t,s,(S+h)/S),M=U(t,h);if(s.y>=h)if(h<S){P=y(N(s,o),M,"",2);const b=$(P,t,-Math.abs(T(P,t,B)),!0,"pink","black",.4);b.couleurDesHachures=e("black"),b.hachures="north east lines",b.opacite=.2,r.push(b)}else{P=y(N(s,K),M,"",2);const b=$(P,t,-Math.abs(T(P,t,B)),!0,"pink","black",.4);b.couleurDesHachures=e("black"),b.hachures="north east lines",b.opacite=.2;const l=x(P,s,t);l.couleurDeRemplissage=e("pink"),l.opaciteDeRemplissage=.4,l.couleurDesHachures=e("black"),l.hachures="north east lines",l.opacite=.2,r.push(b,l)}else if(h<S){P=y(N(s,o),M,"",2);const b=y(te,M,"",2),l=y(te,M,"",1),m=$(P,t,-Math.abs(T(P,t,b)),!0,"pink","black",.4);m.couleurDesHachures=e("black"),m.hachures="north east lines",m.opacite=.2;const p=x(t,b,l);p.couleurDeRemplissage=e("pink"),p.opaciteDeRemplissage=.4,p.couleurDesHachures=e("black"),p.hachures="north east lines",p.opacite=.2;const i=$(l,t,-Math.abs(T(l,t,B)),!0,"pink","black",.4);i.couleurDesHachures=e("black"),i.hachures="north east lines",i.opacite=.2,r.push(m,p,i)}else if(h**2>=S**2+s.y**2){const b=y(te,M,"",1);P=b;const l=x(t,s,K,b);l.couleurDeRemplissage=e("pink"),l.opaciteDeRemplissage=.4,l.couleurDesHachures=e("black"),l.hachures="north east lines",l.opacite=.2;const m=$(b,t,-Math.abs(T(b,t,B)),!0,"pink","black",.4);m.couleurDesHachures=e("black"),m.hachures="north east lines",m.opacite=.2,r.push(l,m)}else{P=y(N(s,K),M,"",2);const b=y(te,M,"",2),l=y(te,M,"",1);if(P.y!==s.y){const R=x(t,s,P);R.couleurDeRemplissage=e("pink"),R.opaciteDeRemplissage=.4,R.couleurDesHachures=e("black"),R.hachures="north east lines",R.opacite=.2,r.push(R)}const m=$(P,t,-Math.abs(T(P,t,b)),!0,"pink","black",.4);m.couleurDesHachures=e("black"),m.hachures="north east lines",m.opacite=.2;const p=x(t,b,l);p.couleurDeRemplissage=e("pink"),p.opaciteDeRemplissage=.4,p.couleurDesHachures=e("black"),p.hachures="north east lines",p.opacite=.2;const i=$(l,t,-Math.abs(T(l,t,B)),!0,"pink","black",.4);i.couleurDesHachures=e("black"),i.hachures="north east lines",i.opacite=.2,r.push(m,p,i)}const G=d(H(t,P),`${h}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);r.push(G);const v=h-(q-S),re=d(H(t,o),`${q-S}\\,\\text{m}`,.5,"black",1,.5,"black");if(v+s.y>k){const b=U(o,v),l=y(ae,b,"",1),m=d(H(o,l),`${v}\\,\\text{m}`,0,"black",.5,.5,"gray",!0),p=$(B,o,T(B,o,l),!0,"pink","black",.3);p.couleurDesHachures=e("black"),p.hachures="north east lines",p.opacite=.2;const i=Ke(N(n,o),ae),R=x(l,o,i);R.couleurDeRemplissage=e("pink"),R.opaciteDeRemplissage=.3,R.couleurDesHachures=e("black"),R.hachures="north east lines",R.opacite=.2;const O=v-z;if(O**2>=q**2+(k-g.y)**2){const A=x(i,V,g,n);A.couleurDeRemplissage=e("pink"),A.opaciteDeRemplissage=.2,A.couleurDesHachures=e("black"),A.hachures="north east lines",A.opacite=.2,r.push(A)}else{const A=U(n,O),W=y(ae,A,"",2),Q=x(i,W,n),J=fe(pe(i,n,-45),n,O/Ve(n,i)),ne=d(H(n,J),`${O}\\,\\text{m}`,0,"black",1,.5,"gray",!0);if(Q.couleurDeRemplissage=e("pink"),Q.opaciteDeRemplissage=.2,Q.couleurDesHachures=e("black"),Q.hachures="north east lines",Q.opacite=.2,r.push(Q,ne),O>q){const X=y(ie,A,"",1),w=$(W,n,T(W,n,X),!0,"pink","black",.2);w.couleurDesHachures=e("black"),w.hachures="north east lines",w.opacite=.2;const L=x(X,n,g);L.couleurDeRemplissage=e("pink"),L.opaciteDeRemplissage=.2,L.couleurDesHachures=e("black"),L.hachures="north east lines",L.opacite=.2,r.push(w,L)}else{const X=$(W,n,T(W,n,g),!0,"pink","black",.2);X.couleurDesHachures=e("black"),X.hachures="north east lines",X.opacite=.2,r.push(X)}}r.push(p,R,m)}else{const b=$(B,o,-90,!0,"pink","black",.3);b.hachures="north east lines",b.couleurDesHachures=e("black"),b.opacite=.2;const l=pe(B,o,-45),m=d(H(o,l),`${v}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);if(r.push(b,m,re),v>z){const p=v-z,i=pe(B,o,-90),R=$(i,n,-90,!0,"pink","black",.2);R.hachures="north east lines",R.couleurDesHachures=e("black"),R.opacite=.2;const O=pe(i,n,-45),A=d(H(n,O),`${p}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);r.push(R,A)}}}break;case 3:{s=u(Z(Math.ceil(f/3)+q,f-2),Z(Math.max(2,Math.floor(k/2-z/2)),Math.min(k-z-2,Math.floor(k/2+z/2)))),g=u(s.x,s.y+z),o=u(s.x-q,s.y),n=u(o.x,g.y),t=u(s.x-S,s.y,"P","above");const he=d(H(s,se(s.x,0)),`${s.y}\\,\\text{m}`,.2,"darkgray",1,1,"gray",!0),P=d(H(se(0,n.y),n),`${n.x}\\,\\text{m}`,.2,"darkgray",1,1,"gray",!0);le.push(he,P);const B=h-S,M=h-(q-S),G=B-z,v=M-z,re=h>s.y,b=o.y+M>k,l=s.y+B>k;let m,p,i,R;const O=U(t,h);if(re){m=y(te,O,"",1),m.x<0&&(m=Y),p=y(te,O,"",2),p.x>f&&(p=K);const c=x(t,m,p);c.couleurDeRemplissage=e("pink"),c.opaciteDeRemplissage=.4,c.couleurDesHachures=e("black"),c.hachures="north east lines";const D=d(H(t,m),`${h}\\,\\text{m}`,0,"black",.5,.5,"gray",!0),a=d(H(t,p),`${h}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);r.push(c,D,a);const E=u(0,s.y);t.x-h<0&&m.x>0?R=y(be,O,"",2):R=E;const I=Math.abs(m.x)<.01?x(m,t,R):$(m,t,T(m,t,R),!0);if(I.opaciteDeRemplissage=.4,I.couleurDeRemplissage=e("pink"),I.couleurDesHachures=e("black"),I.hachures="north east lines",I.opacite=.2,R.y<s.y){const ue=x(t,R,E);ue.couleurDeRemplissage=e("pink"),ue.opaciteDeRemplissage=.4,ue.couleurDesHachures=e("black"),ue.hachures="north east lines",ue.opacite=.2;const we=d(H(o,E),`${o.x}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);r.push(ue,we)}t.x+h>f&&p.x<f?i=y(ie,O,"",2):i=u(Math.min(f,t.x+h),s.y);const C=p.x===f?x(p,t,i):$(p,t,T(p,t,i),!0);C.opaciteDeRemplissage=.4,C.couleurDeRemplissage=e("pink"),C.couleurDesHachures=e("black"),C.hachures="north east lines",C.opacite=.2,r.push(I,C)}else{const c=u(t.x,t.y-h);t.x+h>=f?i=y(ie,O,"",2):i=u(t.x+h,s.y),t.x-h<0?R=y(be,O,"",2):R=u(t.x-h,s.y);const D=d(H(t,c),`${h}\\,\\text{m}`,0,"black",.5,.5,"gray",!0),a=d(H(s,i),`${B}\\,\\text{m}`,0,"black",.5,-.5,"gray",!0),E=d(H(o,R),`${M}\\,\\text{m}`,0,"black",.5,.5,"gray",!0),I=$(i,t,-Math.abs(T(i,t,R)),!0,"pink","black",.4);I.couleurDesHachures=e("black"),I.hachures="north east lines",I.opacite=.2,r.push(I,D,a,E)}if(i.y<s.y){const c=x(i,t,u(f,s.y));c.couleurDeRemplissage=e("pink"),c.opaciteDeRemplissage=.4,c.couleurDesHachures=e("black"),c.hachures="north east lines",c.opacite=.2,r.push(c)}const A=U(s,B),W=y(N(s,g),A,"",1);let Q,J;if(l){const c=y(ae,A,"",2);Q=u(s.x,k);const D=d(H(s,se(f,s.y)),`${f-s.x}\\,\\text{m}`,0,"black",.5,-.5,"gray",!0);if(c.x-f>=0){const a=x(s,u(f,s.y),V,Q);a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.2,r.push(a)}else if(t.x+h>f){let a=y(ie,A,"",1);a.y>k&&(a=V);const E=x(s,u(f,s.y),a),I=x(s,c,Q);J=$(a,s,T(a,s,c),!0,"pink","black",.3),[E,J,I].forEach(C=>{C.couleurDeRemplissage=e("pink"),C.opaciteDeRemplissage=.3,C.couleurDesHachures=e("black"),C.hachures="north east lines",C.opacite=.2}),r.push(E,J,I)}r.push(D)}else{if(Q=g,t.x+h<=f){const c=u(t.x+h,s.y);J=$(c,s,T(c,s,W),!0,"pink","black",.3)}else{let c=y(ie,A,"",1);c.y>k&&(c=V);const D=x(u(f,s.y),s,c);D.couleurDeRemplissage=e("pink"),D.opaciteDeRemplissage=.3,D.couleurDesHachures=e("black"),D.hachures="north east lines",D.opacite=.2,r.push(D);const a=d(H(s,se(f,s.y)),`${f-s.x}\\,\\text{m}`,0,"black",.5,-.5,"gray",!0),E=d(H(s,c),`${B}\\,\\text{m}`,0,"black",.5,-.5,"gray",!0);if(J=$(c,s,T(c,s,W),!0,"pink","black",.3),G>0){const I=d(H(g,se(g.x,n.y+G)),`${G}\\,\\text{m}`,0,"black",.5,-.7,"gray",!0);r.push(I)}r.push(a,E)}J.couleurDesHachures=e("black"),J.hachures="north east lines",J.opacite=.2,r.push(J)}const ne=U(o,M),X=y(N(n,o),ne,"",1);let w,L;if(b){const c=y(ae,ne,"",1);w=u(o.x,k);const D=d(H(w,n),`${k-n.y}\\,\\text{m}`,-.2,"black",.5,-.7,"gray",!0);if(r.push(D),c.x<=0){const a=x(o,u(0,s.y),_,u(o.x,k));a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.2,r.push(a)}else{let a;if(t.x-h<=0){if(a=y(be,ne,"",1),a.y>k&&(a=_),a.y>o.y){const C=x(o,u(0,s.y),a);C.couleurDeRemplissage=e("pink"),C.opaciteDeRemplissage=.3,C.couleurDesHachures=e("black"),C.hachures="north east lines",C.opacite=.2,r.push(C)}}else a=u(o.x-M,o.y);const E=x(o,c,w),I=d(H(o,c),`${M}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);L=$(a,o,T(a,o,c),!0,"pink","black",.3),[L,E].forEach(C=>{C.couleurDeRemplissage=e("pink"),C.opaciteDeRemplissage=.3,C.couleurDesHachures=e("black"),C.hachures="north east lines",C.opacite=.2}),r.push(L,E,I)}}else{if(w=o,t.x-h>=0){const c=u(t.x-h,s.y);L=$(c,o,T(c,o,X),!0,"pink","black",.3);const D=d(H(o,c),`${M}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);r.push(D)}else{let c=y(be,ne,"",1);const D=d(H(o,c),`${M}\\,\\text{m}`,0,"black",.5,-.5,"gray",!0),a=d(H(n,se(n.x,o.y+M)),`${v}\\,\\text{m}`,0,"black",.5,.5,"gray",!0);c.y>k&&(c=_);const E=x(u(0,s.y),o,c);E.couleurDeRemplissage=e("pink"),E.opaciteDeRemplissage=.3,E.couleurDesHachures=e("black"),E.hachures="north east lines",E.opacite=.2,r.push(E,D,a),L=$(c,o,T(c,o,X),!0,"pink","black",.3)}L.couleurDesHachures=e("black"),L.hachures="north east lines",L.opacite=.2,r.push(L)}if(G<=0&&v<=0)break;const De=U(g,Math.max(G,0)),xe=U(n,Math.max(v,0)),F=Xe(De,xe,"",1);let j,ee;if(l?ee=y(ae,De,"",1):ee=W,b?j=y(ae,xe,"",2):j=X,F&&F.y<k){if(F.y>=g.y){if(Q.y===k&&Q.x!==ee.x){const a=x(g,Q,ee);a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.3,r.push(a)}if(w.y===k&&w.x!==j.x){const a=x(n,w,j);a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.3,r.push(a)}if(F.y>g.y){const a=x(g,n,F);a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.2,r.push(a)}const c=$(F,g,T(F,g,ee),!0,"pink","black",.3);c.couleurDesHachures=e("black"),c.hachures="north east lines",c.opacite=.3;const D=$(F,n,T(F,n,j),!0,"pink","black",.3);D.couleurDesHachures=e("black"),D.hachures="north east lines",D.opacite=.3,r.push(D,c)}}else if(F){const c=x(g,se(g.x,k),se(n.x,k),n);c.couleurDeRemplissage=e("pink"),c.opaciteDeRemplissage=.2,c.couleurDesHachures=e("black"),c.hachures="north east lines",c.opacite=.2,r.push(c)}else{if(G<=0&&v<=0)break;if(G>0){const c=y(N(g,n),De,"",1),D=$(ee,g,T(ee,g,c),!0,"pink","black",.3);D.couleurDesHachures=e("black"),D.hachures="north east lines",D.opacite=.2;const a=x(g,ee,u(g.x,k));a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.3,r.push(D,a)}if(v>0){const c=y(N(g,n),xe,"",2),D=$(j,n,T(j,n,c),!0,"pink","black",.3);D.couleurDesHachures=e("black"),D.hachures="north east lines",D.opacite=.2;const a=x(n,j,u(n.x,k));a.couleurDeRemplissage=e("pink"),a.opaciteDeRemplissage=.3,a.couleurDesHachures=e("black"),a.hachures="north east lines",a.opacite=.3,r.push(D,a)}}}break;case 1:default:{s=u(f,k-z),g=V,n=u(f-q,k),o=u(f-q,k-z),t=u(f-S,k-z,"P","above");const he=U(t,h),P=y(N(K,V),he,"",2),B=ye(`${h}\\text{ m}`,t,P,{distance:-.7,horizontal:!0,letterSize:"normalsize"}),M=fe(t,s,(S+h)/S),G=x(P,s,t);G.couleurDeRemplissage=e("pink"),G.opaciteDeRemplissage=.4,G.couleurDesHachures=e("black"),G.hachures="north east lines";const v=$(P,t,-Math.abs(T(P,t,M)),!0,"pink","black",.4);v.couleurDesHachures=e("black"),v.hachures="north east lines";const re=d(H(t,o),`${q-S}\\,\\text{m}`,.5,"black",1,.5,"black"),b=h-(q-S);if(b<z){const l=$(M,o,-90,!0,"pink","black",.2);l.hachures="north east lines",l.couleurDesHachures=e("black"),l.opacite=.2;const m=ye(`${b}\\,\\text{m}`,o,pe(M,o,-90),{distance:.7,horizontal:!0,letterSize:"normalsize"});r.push(l,m,re)}else{const l=U(o,b),m=y(N(V,_),l,"",1),p=$(M,o,-Math.abs(T(M,o,m)),!0,"pink","black",.2);p.couleurDesHachures=e("black"),p.hachures="north east lines";const i=x(o,n,m);i.couleurDeRemplissage=e("pink"),i.opaciteDeRemplissage=.2,i.couleurDesHachures=e("black"),i.hachures="north east lines";const R=ye(`${b}\\,\\text{m}`,o,m,{distance:.7,horizontal:!0,letterSize:"normalsize"});i.opacite=.2,p.opacite=.2,r.push(p,i,R,re)}v.opacite=.2,G.opacite=.2,r.push(v,B,G)}break}const me=new Ee({xMin:1,xMax:4,yMin:k,yMax:k+1.2});me.addColor({colorBackground:"darkgray",color:"black",opacity:1,backgroudOpacity:.2}),me.addTextIn({textIn:"Enclos",color:"black",opacity:.8,size:1});const Me=x(s,g,n,o),ge=new Ee({xMin:(s.x+o.x)/2-1.5,xMax:(s.x+o.x)/2+1.5,yMin:(s.y+g.y)/2-.6,yMax:(s.y+g.y)/2+.6});ge.addTextIn({textIn:"Cabane",color:"black",opacity:.8,size:1}),ge.addColor({colorBackground:"darkgray",color:"none",opacity:0,backgroudOpacity:.2});const Ce=d(H(n,g),`${q}\\text{ m}`,.2,"black",.5,.7,"gray",!0),Te=d(H(g,s),`${z}\\text{ m}`,.2,"black",.5,.7,"gray",!0),Pe=d(H(s,t),`${S}\\text{ m}`,.2,"black",.5,.7,"gray",!0),Ae=d(H(K,Y),`${f}\\text{ m}`,.2,"black",1,.7,"gray",!0),Le=d(H(Y,_),`${k}\\text{ m}`,.2,"black",1,1,"gray",!0),oe=Fe(t,Y,h*.85,"$\\text{chèvre}$","below left"),Ne=ze("chèvre",oe.x-.6,oe.y-.5,0,"gray",1,"milieu",!1,1),Oe=Ue(t,oe),Qe=ze("Corde",(t.x+oe.x)/2+.5,(t.y+oe.y)/2-.5,0,"gray",1,"milieu"),Se=Re(t,oe);Se.style="o",le.push(Re(Y),$e,Me,ge.render(),me.render(),Ce,Te,Pe,Ae,Le,Se,Be(t),Ne,Oe,Qe),r.push($e,Me,ge.render(),me.render(),Re(t),Be(t),Pe,Ce,Te),ce+="Dans l'enclos rectangulaire représenté ci-dessous, on a attaché une chèvre à un piquet $(P)$ situé sur le mur d'une cabane rectangulaire, elle aussi.<br>",ce+=`La corde qui limite les déplacements de la chèvre mesure $${h}\\,\\text{m}$.<br>`,ce+=`${qe(0)} Représenter le schéma de l'enclos en utilisant comme échelle : $1\\,\\text{cm}$ pour $1\\,\\text{m}$.<br>`,ce+=`${qe(1)} Délimiter et hachurer la zone de l'enclos dans laquelle peut brouter la chèvre.<br><br>`,ce+=ve(Object.assign({scale:.5},Ie(le)),le),He+=ve(Object.assign({},Ie(r)),r),this.questionJamaisPosee(ke,f,k,q,z,h,S)&&(this.listeQuestions.push(ce),this.listeCorrections.push(He),ke++),de++}}}export{is as dateDePublication,ks as default,ls as interactifReady,ps as refs,us as titre,hs as uuid};
