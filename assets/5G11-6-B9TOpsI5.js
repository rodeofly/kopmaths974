import{p as u,T as S,c as v,ah as j,aE as H,a as M,r as N,y as k,o as O,aH as Q,l as w}from"./embellissements-BYV7mIDn.js";import{b as $}from"./reperes-WwrVcExd.js";import{p as A}from"./2dinteractif-BeuCmCsK.js";import{E as D}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const Z="Compl√©ter un nuage de points sym√©triques",_="18/12/2021",tt=!1,et="custom",st=!0,it="AMCHybride",ot="2a611",nt={"fr-fr":["5G11-6"],"fr-ch":["9ES6-16"]};class lt extends D{pointsNonSolution;pointsSolution;constructor(){super(),this.besoinFormulaire2Numerique=["Type de papier point√©",4,`1 : Carr√©s
2 : Hexagones
3 : Triangles √©quilat√©raux
4 : M√©lange`],this.nbQuestions=1,this.sup2=1,this.pointsNonSolution=[],this.pointsSolution=[]}nouvelleVersion(){this.interactif&&(this.consigne="Placer les points en cliquant, puis v√©rifier la r√©ponse.");const n=[],l=[[]];let s;const o=[],r=[],e=[],f=["quad","quad","hexa","equi"];for(let i=0,P=0,c,E,d,h,a,p,C,x,m,g,b;i<this.nbQuestions&&P<50;){if(f[0]=f[1+i%3],m=[],b=[],o.length=0,r.length=0,e.length=0,this.pointsNonSolution[i]=[],this.pointsSolution[i]=[],l[i]=[],n.length=0,c=$({xmin:0,ymin:0,xmax:10,ymax:10,type:f[this.sup2===4?0:this.sup2]}),m.push(c),f[this.sup2===4?0:this.sup2]==="quad"?h=u(5,5,"O"):h=u(4.33,4.5,"O"),d=S(h,"blue"),d.epaisseur=2,d.style="+",m.push(d),s=c.listeCoords.slice(),this.interactif&&v.isHtml)for(let t=0;t<c.listeCoords.length;t++)l[i].push(A(c.listeCoords[t][0],c.listeCoords[t][1],{radius:.2,color:"red",width:2,opacite:.7}));for(;s.length>1;){for(E=j(u(s[0][0],s[0][1]),h,180),a=1,p=!1;a<s.length&&!p;)H(E,u(s[a][0],s[a][1]))<.5?p=!0:a++;p&&(n.push(M([!0,!1])?[s[0],s[a]]:[s[a],s[0]]),s.splice(a,1)),s.splice(0,1)}const T=N(8,12),y=k(n).splice(0,T);for(let t=0;t<y.length;t++)o.push(y[t][0],y[t][1]);g=N(2,5);for(let t=0;t<o.length;t+=2)t<g?(r.push(u(o[t][0],o[t][1])),r.push(u(o[t+1][0],o[t+1][1]))):(r.push(u(o[t][0],o[t][1])),e.push(u(o[t+1][0],o[t+1][1])));for(let t=0;t<r.length;t++)m.push(S(r[t]));for(let t=0;t<e.length;t++)b.push(S(e[t],"red"));for(let t=0;t<l[i].length;t++){p=!1;let q=0;for(;q<e.length&&!p;)H(e[q],l[i][t].point)<.1?(p=!0,this.pointsSolution[i].push(l[i][t])):q++;p||this.pointsNonSolution[i].push(l[i][t])}C="Voici une grille contenant des points et un centre de sym√©trie.<br>Ajouter un minimum de points afin que chacun des points ait son sym√©trique par rapport √† O.<br>",x="",C+=O({xmin:-1,ymin:-1,xmax:11,ymax:11,scale:.5},...m,...l[i],Q(h)),this.interactif&&v.isHtml&&(C+=`<div id="resultatCheckEx${this.numeroExercice}Q${i}"></div>`),x+=O({xmin:-1,ymin:-1,xmax:11,ymax:11,scale:.5},...m,...b,Q(h)),this.questionJamaisPosee(i,T,g,o[0][0],o[0][1])&&(this.listeQuestions[i]=C,this.listeCorrections[i]=x,i++),P++}w(this)}correctionInteractive=n=>{let l,s=!0;for(const e of this.pointsNonSolution[n])e.etat&&(s=!1),e.stopCliquable();for(const e of this.pointsSolution[n])e.etat||(s=!1),e.stopCliquable();const o=document.querySelector(`#resultatCheckEx${this.numeroExercice}Q${n}`);for(let e=0;e<this.pointsSolution[n].length;e++)this.pointsSolution[n][e].stopCliquable();let r=!0;for(let e=0;e<this.pointsSolution[n].length;e++)r=r&&this.pointsSolution[n][e].etat;return s&&r?(o.innerHTML="üòé",l="OK"):(o.innerHTML="‚òπÔ∏è",l="KO"),l}}export{st as amcReady,it as amcType,_ as dateDePublication,lt as default,tt as interactifReady,et as interactifType,nt as refs,Z as titre,ot as uuid};
