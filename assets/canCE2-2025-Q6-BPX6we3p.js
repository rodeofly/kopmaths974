import{a as p,r as a,bG as l,m as c}from"./embellissements-BYV7mIDn.js";import m from"./ExerciceCan-BGFYQSAT.js";import{p as M,a as d}from"./Personne-DRrbQFAY.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./ExerciceSimple-CWWOU0FG.js";import"./Exercice-DtXhjCyI.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const G="Multiple simple",O=!0,Q="mathLive",R="f34d0",V={"fr-fr":[],"fr-ch":[]},s=[{sing:"un paquet de gâteaux",plur:"paquets de gâteaux",pMin:3,pMax:5,nbMax:8},{sing:"une brioche au chocolat",plur:"brioches au chocolat",pMin:2,pMax:3,nbMax:9},{sing:"une barbe à papa",plur:"barbes à papa",pMin:2,pMax:5,nbMax:4},{sing:"une bouteille de jus de fruit",plur:"bouteilles de jus de fruit",pMin:2,pMax:4,nbMax:8},{sing:"une place de cinéma",plur:"places de cinéma",pMin:7,pMax:10,nbMax:5}];class k extends m{enonce(e,n,r){let i="Tom",o="M";const t=r!=null?s[r]:p(s);if(e==null||n==null||r==null){p([0,1])===0?(i=M(),o="M"):(i=d(),o="F");const u=a(2,t.nbMax);e=a(t.pMin,t.pMax),n=u*e}this.reponse=Math.round(n/e),this.question=`${l(t.sing)} coûte $${e}$ €. <br>
    ${i} a $${n}$ €.<br>
    Combien de ${t.plur} peut-${o==="M"?"il":"elle"} acheter ?`,this.correction=` $${n}\\div ${e}=${Math.round(n/e)}$.<br>
    ${i} peut acheter $${c(Math.round(n/e))}$ ${t.plur}.`,this.canEnonce=this.question}nouvelleVersion(){this.canOfficielle?this.enonce(4,32,0):this.enonce()}}export{k as default,O as interactifReady,Q as interactifType,V as refs,G as titre,R as uuid};
