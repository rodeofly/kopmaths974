import{g as ue,p as $e,ah as T,r as f,a as Q,aJ as pe,d as me,ai as K,aX as L,k as g,n as D,A as de,T as E,aH as N,W as Y,cg as be,ag as he,cI as fe,b9 as d,cR as M,o as _,D as ee,l as ge,an as xe}from"./embellissements-BYV7mIDn.js";import{d as k,c as I}from"./cibles-CJM3ESl_.js";import{c as ye}from"./aleatoires-BLhzzHLc.js";import{A as Ce}from"./Alea2iep-C433sqvs.js";import{E as qe}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./reperes-WwrVcExd.js";import"./dateEtHoraires-yqKtvK1K.js";import"./index-BUDQz6-w.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"seedrandom";const we="Construire des parallélogrammes",Ge="18/04/2024",He="30/11/2020",Je=!0,Re="AMCHybride",Ue="b611a",Ze={"fr-fr":["5G40"],"fr-ch":["9ES4-4"]};class Ve extends qe{sup;sup2;sup3;constructor(){super(),this.besoinFormulaireTexte=["Type de questions",`Nombres séparés par des tirets :
1 : Deux côtés consécutifs
2 : Trois sommets consécutifs
3 : Deux sommets consécutifs et le centre
4 : Un angle et le centre
5 : Mélange`],this.besoinFormulaire2Numerique=["Taille des cases de la grille",3,`1 : taille 0,4cm
2 : taille 0,6 cm
3 : taille 0,8cm`],this.besoinFormulaire3CaseACocher=["Cibles pour la correction"],this.nbQuestions=1,this.sup=5,this.sup2=2,this.sup3=!0,this.spacingCorr=2,this.correctionDetaillee=!1,this.correctionDetailleeDisponible=!0}nouvelleVersion(se){const b=.2+this.sup2*.2,C=ue({saisie:this.sup,min:1,max:4,melange:5,defaut:5,nbQuestions:this.nbQuestions}).map(Number);for(let u=0,n,r,O=0;u<this.nbQuestions&&O<50;){const P=function(z){const ne=xe(f(1,z)),ce=Number(f(1,z)).toString();return ne+ce},e=ye(5,"QO",!0),x=`${e[0]+e[1]+e[2]+e[3]}`,c=[],$=[],o=$e(0,0,e[4]),s=T(pe(o,me(f(50,70)/10)),o,f(0,179)*Q([-1,1]),e[0]),i=T(s,o,180,e[2]),t=K(s,o,f(50,80)*Q([-1,1]),f(6,7)*Q([-1,1])/5,e[1]),a=T(t,o,180,e[3]),p=L(s,t,i,a),S=g(o,s),te=g(o,t),j=g(o,i),re=g(o,a),F=g(s,t),B=g(a,s),w=D(s,t),G=D(s,a),ae=D(i,a),oe=D(i,t),y=P(5),A=P(5),H=P(5),J=de(s,t,i,a);J.opacite=0,c.push(J);const R=k(i.x,i.y,5,b,y),U=k(a.x,a.y,5,b,A),Z=k(t.x,t.y,5,b,H),m=I({x:R[0],y:R[1],rang:5,num:C[u]>2?1:0,taille:b,color:"gray",opacite:.7}),q=I({x:U[0],y:U[1],rang:5,num:2,taille:b,color:"gray",opacite:.7}),V=I({x:Z[0],y:Z[1],rang:5,num:3,taille:b,color:"gray",opacite:.7}),W=Math.min(s.x,t.x,i.x,a.x)-3,ie=Math.min(s.y,t.y,i.y,a.y)-4,le=Math.max(s.x,t.x,i.x,a.x)+4,X=Math.max(s.y,t.y,i.y,a.y)+3;let h;const l=new Ce;switch(l.recadre(W,X),l.taille((le-W)*30,(X-ie)*30),C[u]){case 1:n=`Construire le parallélogramme $${x}$`,n+=" et le coder afin de faire comprendre par quelle méthode ce parallélogramme a été construit.",r="Plusieurs constructions sont possibles",this.correctionDetaillee?(r+=" :<br>",r+=`- En utilisant l'égalité des longueurs : $${e[0]+e[1]}=${e[3]+e[2]}$ et $${e[2]+e[1]}=${e[3]+e[0]}$.<br>`,r+=`- En traçant la parallèle à $(${e[0]+e[1]})$ passant par $${e[3]}$ et la parallèle à $(${e[3]+e[0]})$ passant par $${e[1]}$.<br>`,r+="- En utilisant la propriété des diagonales qui se coupent en leur milieu.<br>",r+="Nous avons choisi la première méthode qui nous semble la plus efficace ici.<br>"):(r+=".<br>",r+=`En voici une utilisant l'égalité des longueurs : $${e[0]+e[1]}=${e[3]+e[2]}$ et $${e[2]+e[1]}=${e[3]+e[0]}$.<br>`),F.styleExtremites="-|",B.styleExtremites="|-",h=L(a,s,t),c.push(F,B,h[1]),$.push(p[0],p[1],M(a,i,30),M(t,i,30),d("||","red",s,t,a,i),d("///","blue",s,a,t,i)),l.parallelogramme3sommetsConsecutifs(a,s,t,i.nom),this.sup3&&(r+=`Le point $${e[2]}$ se trouve dans la case ${y} de la cible.<br>`,c.push(m),$.push(m));break;case 2:n=`Construire le parallélogramme $${x}$`,n+=" et le coder afin de faire comprendre par quelle méthode ce parallélogramme a été construit.",r="Plusieurs constructions sont possibles :<br>",this.correctionDetaillee?(r+=`- En utilisant l'égalité des longueurs : $${e[0]+e[1]}=${e[3]+e[2]}$ et $${e[2]+e[1]}=${e[3]+e[0]}$.<br>`,r+=`- En traçant la parallèle à $(${e[0]+e[1]})$ passant par $${e[3]}$ et la parallèle à $(${e[3]+e[0]})$ passant par $${e[1]}$.<br>`,r+="- En utilisant la propriété des diagonales qui se coupent en leur milieu.<br>",r+="Nous avons choisi la première méthode qui nous semble la plus efficace ici.<br>"):r+=`En voici une utilisant l'égalité des longueurs : $${e[0]+e[1]}=${e[3]+e[2]}$ et $${e[2]+e[1]}=${e[3]+e[0]}$.<br>`,h=L(a,s,t),l.pointCreer(a),l.pointCreer(s),l.pointCreer(t),l.regleSegment(a,s),l.regleSegment(s,t),l.regleMasquer(),l.crayonMasquer(),l.parallelogramme3sommetsConsecutifs(a,s,t,i.nom),c.push(E(s,t,a),h[1]),$.push(p[0],p[1],M(a,i,30),M(t,i,30),d("||","red",s,t,a,i),d("///","blue",s,a,t,i)),this.sup3&&(r+=`Le point $${e[2]}$ se trouve dans la case ${y} de la cible.<br>`,c.push(m),$.push(m));break;case 3:n=`Construire le parallélogramme $${x}$ de centre $${e[4]}$`,n+=" et le coder afin de faire comprendre par quelle méthode ce parallélogramme a été construit.",r=`O est le centre de symétrie du parallélogramme $${x}$.<br>`,this.correctionDetaillee&&(r+=`Le point $${e[3]}$ est le symétrique du point $${e[1]}$ par rapport à $${e[4]}$.<br>`,r+=`Le point $${e[2]}$ est le symétrique du point $${e[0]}$ par rapport à $${e[4]}$.<br>`),h=L(o,s,t),l.parallelogramme2sommetsConsecutifsCentre(s,t,o),c.push(E(s,t,o),h[1]),$.push(p[0],p[1],N(o),S,te,j,re,d("||","red",s,o,o,i),d("|||","blue",t,o,o,a)),this.sup3&&(r+=`Le point $${e[2]}$ se trouve dans la case ${y} de la cible 1.<br>`,r+=`Le point $${e[3]}$ se trouve dans la case ${A} de la cible 2.<br>`,c.push(m,q),$.push(m,q));break;case 4:default:n=`Construire le parallélogramme $${x}$ de centre ${e[4]}`,n+=" et le coder afin de faire comprendre par quelle méthode ce parallélogramme a été construit.",n+=` Le point $${e[3]}$ est sur la demi-droite $[${e[0]}x)$ et le point $${e[1]}$ est sur la demi-droite $[${e[0]}y)$.<br>`,r="",this.correctionDetaillee&&(r+=`Le point $${e[2]}$ est le symétrique du point $${e[0]}$ par rapport à $${e[4]}$.<br>`,r+=`La symétrique de la droite $(${e[0]+e[1]})$ par rapport à $${e[4]}$ est la droite passant par $${e[2]}$ parallèle à $(${e[0]+e[1]})$.<br>`,r+=`La symétrique de la droite $(${e[0]+e[3]})$ par rapport à $${e[4]}$ est la droite passant par $${e[2]}$ parallèle à $(${e[0]+e[3]})$.<br>`),l.regleZoom(200),l.equerreZoom(200),l.parallelogrammeAngleCentre(a,s,t,o),c.push(w,G,E(o),N(o,s),Y("x",be(fe(s,a),he(a,.5),"",1)),Y("y",K(t,s,4,1.3))),$.push(w,G,ae,oe,p[0],p[1],E(o),N(o),S,j,d("||","red",s,o,o,i)),this.sup3&&(r+=`Le point $${e[2]}$ se trouve dans la case ${y} de la cible 1.<br>`,r+=`Le point $${e[3]}$ se trouve dans la case ${A} de la cible 2.<br>`,r+=`Le point $${e[1]}$ se trouve dans la case ${H} de la cible 3.<br>`,c.push(m,q,V),$.push(m,q,V));break}let v=n+"<br><br>";v+=C[u]>2?"Les sommets manquants devraient se trouver respectivement dans les cibles ci-dessous.":"Le sommet manquant devrait se trouver dans la cible ci-dessous.",v+="<br>Une fois la construction terminée et afin de vérifier votre soin, noircir, ci-contre,",v+=C[u]>2?" pour chacune des cibles,":"",v+=" la lettre et le chiffre correspondants à la case dans laquelle se trouve le sommet construit.",n+="<br>"+_(Object.assign({pixelsParCm:20,scale:.5},ee(c)),c),r+=_(Object.assign({pixelsParCm:20,scale:.5},ee($)),$),r+=l.htmlBouton(se,u),this.questionJamaisPosee(u,n)&&(this.listeQuestions[u]=n,this.listeCorrections[u]=r,u++),O++}ge(this)}}export{Je as amcReady,Re as amcType,Ge as dateDeModifImportante,He as dateDePublication,Ve as default,Ze as refs,we as titre,Ue as uuid};
