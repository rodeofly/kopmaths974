import{g as E,r as p,p as d,ae as A,ah as T,aG as v,aP as G,aU as F,k as V,aV as k,o as q,D as M,a as B,t as h,m}from"./embellissements-BYV7mIDn.js";import{p as N}from"./qcm-BQR8Ns0N.js";import{E as R}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const et="Vocabulaire du triangle rectangle",st=!0,ot="qcm",nt="08f6e",at={"fr-fr":["4G40-0"],"fr-ch":["11GM1-10","1mG2-1"]},it="23/08/2024";class $t extends R{constructor(){super(),this.nbQuestions=5,this.spacingCorr=3,this.besoinFormulaireCaseACocher=["Figure à main levée",!0],this.besoinFormulaire2Texte=["Type de questions ",`Nombres séparés par des tirets :
1 : Donner le bon terme
2 : Donner le bon côté
3 : Mélange`],this.sup=!1,this.sup2="3"}nouvelleVersion(){const x=this.sup,s=E({saisie:this.sup2,min:1,max:2,melange:3,defaut:3,nbQuestions:this.nbQuestions});for(let e=0,g=0;e<this.nbQuestions&&g<100;){const c=p(200,500)/100,b=p(300,Math.ceil(c*100))/100,L=d(0,0),f=d(c,0),w=d(0,b),y=new A(L,f,w),n=T(y,L,p(0,360)),u=n.listePoints[0],i=n.listePoints[1],$=n.listePoints[2],C=v(i,u,$),t=G(3);u.nom=t[0],i.nom=t[1],$.nom=t[2];const P=F(n,t),D=V($,i,"blue");D.epaisseur=2;const j=k(u,i,$,1),l=[];l.push(n,P,j,C);let o,a=`Dans le triangle $${t}$ rectangle en $${t[0]}$, en considèrant l'angle aigu $\\widehat{${t}}$ :<br>${q(Object.assign({mainlevee:x,pixelsParCm:30,scale:1},M(l)),l)}`,r;switch(B([1,2,3])){case 1:a+=s[e]===1?`Le côté $[${t[0]}${t[1]}]$ est`:`Le côté adjacent à $\\widehat{${t}}$ est`,o=s[e]===1?`Le côté adjacent à $\\widehat{${t}}$`:`[${t[0]}${t[1]}]`,r=s[e]===1?`Le côté $[${t[0]}${t[1]}]$ est ${h("le côté adjacent")} à $\\widehat{${t}}$.`:`Le côté adjacent à $\\widehat{${t}}$ est $${m(`[${t[0]}${t[1]}]`)}$.`;break;case 2:a+=s[e]===1?`Le côté $[${t[0]}${t[2]}]$ est`:`Le côté opposé à $\\widehat{${t}}$ est`,o=s[e]===1?`Le côté opposé à $\\widehat{${t}}$`:`[${t[0]}${t[2]}]`,r=s[e]===1?`Le côté $[${t[0]}${t[2]}]$ est ${h("le côté opposé")} à $\\widehat{${t}}$.`:`Le côté opposé à $\\widehat{${t}}$ est $${m(`[${t[0]}${t[2]}]`)}$.`;break;default:a+=s[e]===1?`Le côté $[${t[1]}${t[2]}]$ est`:`L'hypoténuse du triangle ${t} est`,o=s[e]===1?"L'hypoténuse du triangle":`[${t[1]}${t[2]}]`,r=s[e]===1?`Le côté $[${t[1]}${t[2]}]$ est ${h("l'hypoténuse")} du triangle $${t}$.`:`L'hypoténuse du triangle $${t}$ est $${m(`[${t[1]}${t[2]}]`)}$.`}this.autoCorrection[e]={},this.autoCorrection[e].options=s[e]===1?{ordered:!0,vertical:!0}:{ordered:!0},this.autoCorrection[e].propositions=s[e]===1?[{texte:`Le côté adjacent à $\\widehat{${t}}$`,statut:o===`Le côté adjacent à $\\widehat{${t}}$`},{texte:`Le côté opposé à $\\widehat{${t}}$`,statut:o===`Le côté opposé à $\\widehat{${t}}$`},{texte:"L'hypoténuse du triangle",statut:o==="L'hypoténuse du triangle"}]:[{texte:`[${t[0]}${t[1]}]`,statut:o===`[${t[0]}${t[1]}]`},{texte:`[${t[0]}${t[2]}]`,statut:o===`[${t[0]}${t[2]}]`},{texte:`[${t[1]}${t[2]}]`,statut:o===`[${t[1]}${t[2]}]`}];const Q=N(this,e);a+=`<br>${Q.texte}`,this.questionJamaisPosee(e,c,b)&&(this.listeQuestions[e]=a,this.listeCorrections[e]=r,e++),g++}}}export{it as dateDePublication,$t as default,st as interactifReady,ot as interactifType,at as refs,et as titre,nt as uuid};
