import{e as n,cS as H,aJ as x,r as i,ah as k,n as v,b8 as R,aX as q,aL as N,t as b,ci as h,aG as O,ai as K,bd as V,ag as w,be as j,cg as W,af as Y,bI as Z,o as _,D as M,l as ee}from"./embellissements-BYV7mIDn.js";import{T as I}from"./Triangle-BVvgWVSy.js";import{E as te}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const Le="25/07/2023",he="Utiliser le vocabulaire des triangles",be="c3781",pe={"fr-fr":["5G20-1"],"fr-ch":["9ES2-7"]};class Se extends te{classe;constructor(){super(),this.besoinFormulaireCaseACocher=["Avec une figure à main levée",!1],this.besoinFormulaire2CaseACocher=["Avec des décimaux",!1],this.consigne="Donner la nature des triangles en justifiant.",this.sup=!1,this.sup2=!1,this.classe=5,this.nbQuestions=5}formatLongueurValeur(T,u="cm"){switch(u){case"mm":return n(T);case"dm":return n(T);default:return n(T)}}makeTexAndCorrForType(T,u,f,E,Q,P){const c=new I(0,0,0,0,0,0),l=new I,o=new I,d=new I,$=new I;let a,p,B,F,J,C,g="",m="";const e=H(0,0);let s,r;const A=[];let t="";const[z,y,X]=P,D=(L,S,G,U)=>{L.l1=S,G!==void 0&&(L.l2=G),U!==void 0&&(L.l3=U)};switch(T){case 1:{for(;!c.isTrueTriangleLongueurs();)a=i(u,f),p=i(u,f,a),B=i(u,f,[a,p]),D(c,a+z,p+y,B+X);s=x(e,c.l1,a<p||a<B?i(-70,-89):i(-20,20));let L;do{const S=w(e,c.l2*i(10,12)/10),G=w(s,c.l3*i(10,12)/10);L=W(S,G,"",1)}while(!L);t=c.getNom(),e.nom=t[1],s.nom=t[2],L.nom=t[3],r=L,A.push(...q(e,s,L),h(`${n(c.l1)}\\text{ cm}`,s,e,{letterSize:"normalsize"}),h(`${n(p)}\\text{ cm}`,e,r,{letterSize:"normalsize"}),h(`${n(c.l3)}\\text{ cm}`,r,s,{letterSize:"normalsize"})),g=`${t} est un triangle tel que ${c.getLongueurs()[0]} $= ${n(c.l1)}$ cm ; `,g+=`${c.getLongueurs()[2]} $= ${n(c.l2)}$ cm et ${c.getLongueurs()[1]} $= ${n(c.l3)}$ cm.`,m=`Les 3 côtés du triangle ${t} sont différents et nous n'avons aucune information sur les angles donc ${c.getNom()} est un triangle ${b("quelconque")}.`}break;case 2:{for(;!c.isTrueTriangleAngles();)F=i(E,Q),J=i(E,Q,F),C=i(E,Q,[F,J]),c.a1=F,c.a2=J,c.a3=C;t=c.getNom(),e.nom=t[1],s=x(e,10,i(0,360),t[2]);const L=k(v(e,s),e,c.a1*i(90,110)/100),S=k(v(s,e),s,-c.a2*i(90,110)/100);r=R(L,S),r.nom=t[3],A.push(...q(e,s,r),N(r,e,s,"black",1,n(c.a1,0)+"^\\circ"),N(e,s,r,"black",1,n(c.a2,0)+"^\\circ"),N(s,r,e,"black",1,n(c.a3,0)+"^\\circ")),g=`${c.getNom()} est un triangle tel que ${c.getAngles()[0]} $= ${c.a1}^\\circ$ ; `,g+=` ${c.getAngles()[1]} $= ${c.a2}^\\circ$ et  ${c.getAngles()[2]} $= ${c.a3}^\\circ$ .`,m=`Les 3 angles du triangle ${c.getNom()} sont différents donc ${c.getNom()} est un triangle ${b("quelconque")}.`}break;case 3:{for(;!l.isTrueTriangleLongueurs();)a=i(u,f),p=i(u,f,a),D(l,a+z,p+y,a+z);t=l.getNom(),e.nom=t[1],r=x(e,p,a>p?i(0,20):i(45,70),t[3]);const L=V(e,r),S=w(e,a);s=j(L,S,"",1),s.nom=t[2],A.push(...q(e,s,r),h(`${n(a)}\\text{ cm}`,e,s,{letterSize:"normalsize"}),h(`${n(p)}\\text{ cm}`,r,e,{letterSize:"normalsize"}),h(`${n(a)}\\text{ cm}`,s,r,{letterSize:"normalsize"})),g=`${l.getNom()} est un triangle tel que ${l.getLongueurs()[0]} $= ${n(l.l1)}$ cm ; `,g+=`${l.getLongueurs()[1]} $= ${n(l.l2)}$ cm et ${l.getLongueurs()[2]} $= ${n(l.l3)}$ cm.`,m=`Les longueurs des côtés ${l.getCotes()[0]} et ${l.getCotes()[1]} du triangle ${l.getNom()} valent toutes les deux $${n(l.l1)}$ cm donc ${l.getNom()} est un triangle ${b("isocèle")} en ${l.getSommets()[1]}.`}break;case 4:{for(;!l.isTrueTriangleLongueurs();)a=i(u,f),p=i(u,f,a),D(l,a+z,a+z,p+y);t=l.getNom(),e.nom=t[1],r=x(e,p,a>p?i(0,20):i(45,70),t[3]);const L=V(e,r),S=w(e,a);s=j(L,S,"",1),s.nom=t[2],A.push(...q(e,s,r),h(`${n(l.l1*10)}\\text{ mm}`,e,s,{letterSize:"normalsize"}),h(`${n(l.l3)}\\text{ cm}`,r,e,{letterSize:"normalsize"}),h(`${n(l.l2)}\\text{ cm}`,s,r,{letterSize:"normalsize"})),g=`${l.getNom()} est un triangle tel que ${l.getLongueurs()[0]} $= ${l.l1*10}$ mm ; `,g+=`${l.getLongueurs()[1]} $= ${n(l.l2)}$ cm et ${l.getLongueurs()[2]} $= ${n(l.l3)}$ cm.`,m=`${l.getLongueurs()[0]} $= ${n(l.l1*10)}$ mm $= ${n(l.l1)}$ cm = ${l.getLongueurs()[1]}, ${l.getNom()} a donc deux côtés égaux, c'est un triangle ${b("isocèle")} en ${l.getSommets()[1]}.`}break;case 5:{for(;!o.isTrueTriangleLongueurs();)a=i(u,f),D(o,a+z,a+z,a+z);t=o.getNom(),e.nom=t[1],s=x(e,o.l1,i(0,360),t[2]);const L=V(e,s),S=w(e,o.l1);r=j(L,S,"",1),r.nom=t[3],A.push(...q(e,s,r),h(`${n(o.l1)}\\text{ cm}`,e,s,{letterSize:"normalsize"}),h(`${n(o.l2)}\\text{ cm}`,r,e,{letterSize:"normalsize"}),h(`${n(o.l3)}\\text{ cm}`,s,r,{letterSize:"normalsize"})),g=`${o.getNom()} est un triangle tel que ${o.getLongueurs()[0]} $= ${n(o.l1)}$ cm ; `,g+=`${o.getLongueurs()[1]} $= ${n(o.l2)}$ cm et ${o.getLongueurs()[2]} $= ${n(o.l3)}$ cm.`,m=`Les longueurs des trois côtés du triangle ${o.getNom()} sont égales donc c'est un triangle ${b("équilatéral")}.`}break;case 6:{for(;!o.isTrueTriangleLongueurs();)a=i(u,f),D(o,a+z,a+z,a+z);t=o.getNom(),e.nom=t[1],s=x(e,o.l1,i(0,360),t[2]);const L=V(e,s),S=w(e,o.l1);r=j(L,S,"",1),r.nom=t[3],A.push(...q(e,s,r),h(`${n(o.l1*10)}\\text{ mm}`,s,r,{letterSize:"normalsize"}),h(`${n(o.l2)}\\text{ cm}`,e,s,{letterSize:"normalsize"}),h(`${n(o.l3/10)}\\text{ dm}`,r,e,{letterSize:"normalsize"})),g=`${t} est un triangle tel que ${o.getLongueurs()[0]} $= ${n(o.l1)}$ cm ; `,g+=`${o.getLongueurs()[1]} $= ${n(o.l2*10)}$ mm et ${o.getLongueurs()[2]} $= ${n(o.l3/10)}$ dm.`,m=`${o.getLongueurs()[1]} $= ${n(o.l2*10)}$ mm $= ${o.l2}$ cm.`,m+=`<br> ${o.getLongueurs()[2]} $= ${n(o.l3/10)}$ dm $= ${n(o.l3)}$ cm.`,m+=`<br> ${o.getLongueurs()[0]} $= ${n(o.l1)}$ cm.`,m+=`<br> Les longueurs des trois côtés du triangle ${t} sont égales donc c'est un triangle ${b("équilatéral")}.`}break;case 7:a=i(u,f),d.l1=a+z,d.l2=i(u,f,a)+y,d.a1=90,t=d.getNom(),e.nom=t[1],s=x(e,d.l1,i(0,10),t[2]),r=K(e,s,90,d.l2/d.l1,t[3]),A.push(...q(e,s,r),h(`${n(d.l1)}\\text{ cm}`,e,s,{letterSize:"normalsize"}),h(`${n(d.l2)}\\text{ cm}`,s,r,{letterSize:"normalsize"}),O(e,s,r,"black",2)),g=`${t} est un triangle tel que ${d.getLongueurs()[0]} $= ${n(d.l1)}$ cm ; `,g+=`${d.getLongueurs()[1]} $= ${n(d.l2)}$ cm `,g+="et ",this.classe===6?(g+=` qui a un angle droit en ${d.getSommets()[1]}.`,m=`Le triangle ${t} a un angle droit en ${d.getSommets()[1]} donc ${t} est ${b("rectangle")} en ${d.getSommets()[1]}.`):(g+=`${d.getAngles()[0]} $= ${d.a1}^\\circ$.`,m=`L'angle ${d.getAngles()[0]} du triangle ${t} est un angle droit donc ${t} est ${b("rectangle")} en ${d.getSommets()[1]}.`);break;case 8:a=i(u,f),$.l1=a+z,$.l2=$.l1,$.a1=90,t=$.getNom(),e.nom=t[1],s=x(e,$.l1,i(0,10),t[2]),r=k(e,s,90,t[3]),A.push(...q(e,s,r),h(`${n($.l1)}\\text{ cm}`,e,s,{letterSize:"normalsize"}),h(`${n($.l2)}\\text{ cm}`,s,r,{letterSize:"normalsize"}),O(e,s,r,"black",2)),g=`${t} est un triangle tel que ${$.getLongueurs()[0]}$= ${n($.l1)}$ cm ; `,g+=`${$.getLongueurs()[1]} $= ${n($.l2)}$ cm `,g+="et ",this.classe===6?(g+=`qui a un angle droit en ${$.getSommets()[1]}.`,m=`Le triangle ${t} a un angle droit en ${$.getSommets()[1]} donc ${t} est rectangle en ${$.getSommets()[1]}.`,m+=`<br> ${$.getLongueurs()[0]} $=$ ${$.getLongueurs()[1]} $= ${n($.l1)}$ cm donc ${t} est isocèle en ${$.getSommets()[1]}.`,m+=`<br> Le triangle ${t} est donc ${b("isocèle")} et ${b("rectangle")} en ${$.getSommets()[1]}.`):(g+=`${$.getAngles()[0]} $= ${$.a1}^\\circ$.`,m=`L'angle ${$.getAngles()[0]} du triangle ${t} est un angle droit donc ${t} est rectangle en ${$.getSommets()[1]}.`,m+=`<br> ${$.getLongueurs()[0]} $=$ ${$.getLongueurs()[1]} $= ${$.l1}$ cm donc ${t} est isocèle en ${$.getSommets()[1]}.`,m+=`<br> Le triangle ${t} est donc ${b("isocèle")} et ${b("rectangle")} en ${$.getSommets()[1]}.`);break;case 9:a=i(u,f)+z,$.l1=a,$.l2=$.l1,$.a1=90,t=$.getNom(),e.nom=t[1],s=x(e,$.l1,i(0,10),t[2]),r=k(e,s,90,t[3]),A.push(...q(e,s,r),h(`${n($.l1*10)}\\text{ mm}`,e,s,{letterSize:"normalsize"}),h(`${n($.l2)}\\text{ cm}`,s,r,{letterSize:"normalsize"}),O(e,s,r,"black",2)),g=`${t} est un triangle tel que ${$.getLongueurs()[0]} $= ${n($.l1*10)}$ mm ; `,g+=`${$.getLongueurs()[1]} $= ${n($.l2)}$ cm`,g+=" et ",this.classe===6?(g+=`qui a un angle droit en ${$.getSommets()[1]}.`,m=`Le triangle ${t} a un angle droit en ${$.getSommets()[1]} donc ${t} est rectangle en ${$.getSommets()[1]}.`,m+=`<br> ${$.getLongueurs()[0]} $= ${$.l1*10}$ mm $= ${n($.l1)}$ cm =${$.getLongueurs()[1]} donc ${t} est isocèle en ${$.getSommets()[1]}.`,m+=`<br> Le triangle ${t} est donc ${b("isocèle")} et ${b("rectangle")} en ${$.getSommets()[1]}.`):(g+=`${$.getAngles()[0]} $= ${$.a1}^\\circ$.`,m=`L'angle ${$.getAngles()[0]} du triangle ${t} est un angle droit donc ${t} est rectangle en ${$.getSommets()[1]}.`,m+=`<br> ${$.getLongueurs()[0]} $= ${n($.l1*10)}$ mm $= ${n($.l1)}$ cm =${$.getLongueurs()[1]} donc ${t} est isocèle en ${$.getSommets()[1]}.`,m+=`<br> Le triangle ${t} est donc ${b("isocèle")} et ${b("rectangle")} en ${$.getSommets()[1]}.`);break;case 10:{for(C=-1;C<0;)l.a1=i(E,65,60),l.a2=l.a1,C=180-2*l.a1,l.a3=C;t=l.getNom(),e.nom=t[1],s=x(e,10,i(-30,30),t[2]);const L=k(v(e,s),e,l.a3),S=k(v(e,s),s,-l.a1);r=R(L,S),r.nom=t[3],A.push(...q(e,s,r),N(r,e,s,"black",1,n(l.a3,0)+"^\\circ"),N(e,s,r,"black",1,n(l.a2,0)+"^\\circ"),N(s,r,e,"black",1,n(l.a1,0)+"^\\circ")),g=`${l.getNom()} est un triangle tel que ${l.getAngles()[0]} $= ${l.a1}^\\circ$ ; `,g+=` ${l.getAngles()[1]} $= ${l.a2}^\\circ$ et  ${l.getAngles()[2]} $= ${l.a3}^\\circ$ .`,m=`Le triangle ${l.getNom()} a deux angles égaux, ${l.getAngles()[0]} = ${l.getAngles()[1]} $= ${l.a1}^\\circ$ donc ${l.getNom()} est un triangle ${b("isocèle")} en ${l.getSommets()[0]}.`}break;case 11:default:{o.a1=60,o.a2=60,o.a3=60,t=o.getNom(),e.nom=t[1],s=x(e,10,i(0,360),t[2]);const L=k(v(e,s),e,60+i(-3,3,0)),S=k(v(e,s),s,-60+i(-3,3,0));r=R(L,S),r.nom=t[3],A.push(...q(e,s,r),N(r,e,s,"black",1,n(o.a3,0)+"^\\circ"),N(e,s,r,"black",1,n(o.a2,0)+"^\\circ"),N(s,r,e,"black",1,n(o.a1,0)+"^\\circ")),g=`${t} est un triangle tel que ${o.getAngles()[0]} $= ${o.a1}^\\circ$ ; `,g+=` ${o.getAngles()[1]} $= ${o.a2}^\\circ$ et  ${o.getAngles()[2]} $= ${o.a3}^\\circ$.`,m=`Le triangle ${t} a trois angles égaux, ${o.getAngles()[0]} = ${o.getAngles()[1]} = ${o.getAngles()[2]} $= ${o.a1}^\\circ$ donc ${o.getNom()} est un triangle ${b("équilatéral")}.`}break}return{texte:g,texteCorr:m,figureMainLevee:A}}nouvelleVersion(){this.classe===6&&(this.besoinFormulaireNumerique=["Niveau de difficulté",2,`1 : Sans conversion de longueurs
2 : Avec conversions de longueurs`]),this.classe===6||this.classe;const T=Y(Z(10).map(u=>u+1),this.nbQuestions);for(let u=0,f=0;u<this.nbQuestions&&f<50;){let l=0,o=0,d=0;this.sup2&&(l=i(1,9)/10*i(0,1),o=i(1,9)/10*i(0,1),d=i(1,9)/10*i(0,1));const{texte:$,texteCorr:a,figureMainLevee:p}=this.makeTexAndCorrForType(T[u],6,15,30,100,[l,o,d]);this.questionJamaisPosee(u,a)&&(this.listeQuestions[u]=this.sup?_(Object.assign({mainlevee:!0,amplitude:1},M(p)),p):$,this.listeCorrections[u]=a,u++),f++}ee(this)}}export{Le as dateDeModifImportante,Se as default,pe as refs,he as titre,be as uuid};
