import n from"./QcmJsonGenerator-DRW9NjwV.js";import"./embellissements-BYV7mIDn.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./ExerciceQcm-DOkcCRBu.js";import"./qcm-BQR8Ns0N.js";import"./lists-i1i4IA1M.js";import"./Exercice-DtXhjCyI.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";function i(r){if(!n.validateJsonData(r))throw new Error("Les données JSON ne sont pas valides pour créer un QCM");class o extends n{constructor(){super(r),this.sup=!1,this.sup2=!0,this.sup4=!1,r.questions.length>1&&(this.versionAleatoire=()=>{const e=Math.floor(Math.random()*r.questions.length),t=r.questions[e];this.enonce=t.enonce,this.reponses=[...t.reponses],t.corrections&&(this.corrections=[...t.corrections]),t.bonnesReponses&&(this.bonnesReponses=[...t.bonnesReponses])})}}return o}function C(r){try{const o=JSON.parse(r);if(!n.validateJsonData(o))throw new Error("Format JSON invalide pour un QCM");return o}catch(o){throw o instanceof SyntaxError?new Error("JSON malformé : "+o.message):o}}function x(r,o,s,e="QCM"){return i({titre:e,questions:[{enonce:r,reponses:o,corrections:s}]})}function E(r,o,s,e,t="QCM à réponses multiples"){return i({titre:t,questions:[{enonce:r,reponses:o,bonnesReponses:s,corrections:e}]})}export{E as createMultipleChoiceQcm,i as createQcmFromJson,x as createSimpleQcm,C as parseQcmJson};
