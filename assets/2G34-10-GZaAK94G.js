import{r as t,a as o,n as I,I as M,C as se,F as L,bj as S,aw as Be,bk as Ie,o as re,l as Me,e as be,v as Ae,f as qe,z as Ce}from"./embellissements-BYV7mIDn.js";import{r as Le}from"./reperes-WwrVcExd.js";import{E as Se}from"./Exercice-DtXhjCyI.js";import{r as we}from"./questionMathLive-DdRvWqlN.js";import{h as ke}from"./gestionInteractif-DujZpSu8.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";const si="Associer des systèmes d'équations à leur représentation graphique",ri=!0,ni="mathLive",ai="20/04/2024",ti="81fd6",oi={"fr-fr":["2G34-10"],"fr-ch":["11FA6-10","1mSE-1"]};class di extends Se{constructor(){super(),this.nbQuestions=1,this.correctionDetaillee=!0,this.correctionDetailleeDisponible=!0}nouvelleVersion(){const q=[[1,3],[2,3],[3,7],[2,7],[4,3],[3,5],[4,7],[1,5],[4,5],[3,4],[1,4],[2,5],[5,3],[6,5],[1,6],[5,6],[1,7]];for(let C=0,D,u,O,F,v,b,d,X,Y,c,m,p,T,l,x,G,H,E,$,f,N,U,P,y,h,j,R,Q,ne,ae,te,oe,de,le,$e,ue,ce,J,K,W,me,pe,xe,fe,ye,he,w,n,k,Z,_,V,A,r,ge=0;C<this.nbQuestions&&ge<50;){const B=function(e,a,z){let s="",g=!0;for(let i=0;i<3;i++)e.slice(0,3).every(ie=>ie===0)&&i===0?s=s+"0":e[i]!==0&&g?(a[i]===""?s=s+`${be(e[i],0)}${a[i]}`:s=s+`${Ae(e[i])}${a[i]}`,g=!1):e[i]!==0&&!g&&(a[i]===""?s=s+`${qe(e[i])}${a[i]}`:s=s+`${Ce(e[i])}${a[i]}`,g=!1);s=s+" &=",g=!0;for(let i=3;i<6;i++)e.slice(3).every(ie=>ie===0)&&i===3?s=s+"0":e[i]!==0&&g?(a[i]===""?s=s+`${be(e[i],0)}${a[i]}`:s=s+`${Ae(e[i])}${a[i]}`,g=!1):e[i]!==0&&!g&&(a[i]===""?s=s+`${qe(e[i])}${a[i]}`:s=s+`${Ce(e[i])}${a[i]}`,g=!1);return s},ee=function(e,a){let z="";return z=z+`\\begin{cases}\\begin{aligned}${e}\\\\${a}\\end{aligned}\\end{cases}`,z};do D=t(-5,5,[0]),u=t(-5,5),J=o(q),D=J[0]*o([-1,1]),O=J[1],c=I(D/O,-1,u),c.color=M("red"),c.epaisseur=1,F=t(-5,5,[0]),b=t(-5,5),K=o(q),F=K[0]*o([-1,1]),X=K[1],m=I(F/X,-1,b),m.color=M("blue"),m.epaisseur=1,v=t(-5,5,[0]),d=t(-5,5),W=o(q),v=W[0]*o([-1,1]),Y=W[1],p=I(v/Y,-1,d),p.color=M("red"),p.epaisseur=1,T=t(-5,5,[0]),l=t(-5,5),H=o(q),T=H[0]*o([-1,1]),G=H[1],x=I(T/G,-1,l),x.color=M("blue"),x.epaisseur=1,E=t(-5,5,[0]),$=t(-5,5),U=o(q),E=U[0]*o([-1,1]),N=U[1],f=I(E/N,-1,$),f.color=M("red"),f.epaisseur=1,P=t(-5,5,[0]),y=t(-5,5),R=o(q),P=R[0]*o([-1,1]),j=R[1],h=I(P/j,-1,y),h.color=M("blue"),h.epaisseur=1;while(c===p&&m===x||c===x&&m===p||c===f&&m===h||c===h&&m===f||p===f&&x===h||p===h&&x===f||u===l&&l===$&&$===d&&d===y);ne=se("1",-7.5,5.5,void 0,"black",void 0,"milieu",void 0,1),ae=se("2",-7.5,5.5,void 0,"black",void 0,"milieu",void 0,1),te=se("3",-7.5,5.5,void 0,"black",void 0,"milieu",void 0,1),Q=Le({xMin:-7,xMax:7,xUnite:1,yMin:-6,yMax:6,yUnite:1,thickHauteur:.2,thickEpaisseur:1,xLabelMin:-7,xLabelMax:7,yLabelMax:5,yLabelMin:-5,axeXStyle:"->",axeYStyle:"->",yLabelDistance:2,xLabelDistance:2,yLabelEcart:.6,axesEpaisseur:1,grilleSecondaire:!0,grilleSecondaireYDistance:1,grilleSecondaireXDistance:1,grilleSecondaireYMin:-6,grilleSecondaireYMax:6,grilleSecondaireXMin:-7,grilleSecondaireXMax:7}),me=new L(D,O),pe=new L(F,X),xe=new L(v,Y),fe=new L(T,G),ye=new L(E,N),he=new L(P,j),oe=[0,1,0,me,0,Math.round(S(c,0,"").y)],de=[0,1,0,pe,0,Math.round(S(m,0,"").y)],le=[0,1,0,xe,0,Math.round(S(p,0,"").y)],$e=[0,1,0,fe,0,Math.round(S(x,0,"").y)],ue=[0,1,0,ye,0,Math.round(S(f,0,"").y)],ce=[0,1,0,he,0,Math.round(S(h,0,"").y)],k=[[oe,de],[le,$e],[ue,ce]],r=["1","2","3"],Be(k,r),Z=k[0],_=k[1],V=k[2],A=["x","y","","x","y",""],w=`Associer chaque système d'équations avec la représentation graphique qui convient. \\[ A=${ee(B(Z[0],A),B(Z[1],A))} \\quad\\quad B=${ee(B(_[0],A),B(_[1],A))} \\quad\\quad C=${ee(B(V[0],A),B(V[1],A))}\\]`,w+=Ie(re({xmin:-7,ymin:-6,xmax:7,ymax:6,pixelsParCm:16,scale:.32,style:"display: inline",optionsTikz:["baseline=(current bounding box.north)"]},Q,c,m,ne),re({xmin:-7,ymin:-6,xmax:7,ymax:6,pixelsParCm:16,scale:.32,style:"display: inline",optionsTikz:["baseline=(current bounding box.north)"]},Q,p,x,ae),re({xmin:-7,ymin:-6,xmax:7,ymax:6,pixelsParCm:16,scale:.32,style:"display: inline",optionsTikz:["baseline=(current bounding box.north)"]},Q,f,h,te)),this.interactif&&(w+="<br> Indiquer pour chaque graphique le système correspondant ($A, B, C$)"+we(this,C,"1\\rightarrow %{champ1} \\quad 2\\rightarrow %{champ2} \\quad 3\\rightarrow %{champ3}"),ke(this,C,{bareme:e=>[Math.min(e[0],e[1],e[2]),1],champ1:{value:["$A$","$B$","$C$"][r.findIndex(e=>e==="1")]},champ2:{value:["$A$","$B$","$C$"][r.findIndex(e=>e==="2")]},champ3:{value:["$A$","$B$","$C$"][r.findIndex(e=>e==="3")]}},{formatInteractif:"fillInTheBlank"})),n="",this.correctionDetaillee&&(n="On raisonne sur les pentes et les ordonnées à l'origine des droites des différents systèmes. Voici la première partie du raisonnement :<br>",[d,l,$,y].includes(u)?[d,l,$,y].includes(b)?[u,b,$,y].includes(d)?[u,b,$,y].includes(l)?[u,b,d,l].includes($)?[u,b,d,l].includes(y)||(n=n+`L'ordonnée à l'origine de la deuxième droite dans le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="3")]} est ${y} et aucune droite dans un autre système n'a la même ordonnée à l'origine. Ainsi le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="3")]} est associé au troisième graphique.`):n=n+`L'ordonnée à l'origine de la première droite dans le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="3")]} est ${$} et aucune droite dans un autre système n'a la même ordonnée à l'origine. Ainsi le système${["$A$","$B$","$C$"][r.findIndex(e=>e==="3")]} est associé au troisième graphique.`:n=n+`L'ordonnée à l'origine de la deuxième droite dans le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="2")]} est ${l} et aucune droite dans un autre système n'a la même ordonnée à l'origine. Ainsi le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="2")]} est associé au deuxième graphique.`:n=n+`L'ordonnée à l'origine de la première droite dans le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="2")]} est ${d} et aucune droite dans un autre système n'a la même ordonnée à l'origine. Ainsi le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="2")]} est associé au deuxième graphique.`:n=n+`L'ordonnée à l'origine de la deuxième droite dans le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="1")]} est ${b} et aucune droite dans un autre système n'a la même ordonnée à l'origine. Ainsi le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="1")]} est associé au graphique premier graphique.`:n=n+`L'ordonnée à l'origine de la première droite dans le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="1")]} est ${u} et aucune droite dans un autre système n'a la même ordonnée à l'origine. Ainsi le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="1")]} est associé au premier graphique.<br>`,n=n+" On continue à raisonner avec les ordonnées à l'origine des droites restantes ou en analysant leur pente.<br>"),n=n+`Le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="1")]} est associé au premier graphique, le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="2")]} est associé au deuxième graphique, le système ${["$A$","$B$","$C$"][r.findIndex(e=>e==="3")]} au troisième graphique.`,this.listeQuestions.indexOf(w)===-1&&(this.listeQuestions[C]=w,this.listeCorrections[C]=n,C++),ge++}Me(this)}}export{ai as dateDePublication,di as default,ri as interactifReady,ni as interactifType,oi as refs,si as titre,ti as uuid};
