import{w as k}from"./message-BfjIT6jz.js";import{p as y}from"./qcm-BQR8Ns0N.js";import{y as E,br as D,bt as J,r,S as i,t as b,l as P}from"./embellissements-BYV7mIDn.js";import{E as T}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const W="Indiquer si des nombres sont premiers ou pas",X=!0,Y="qcm",Z=!0,_="qcmMono",ee="bba55",te={"fr-fr":["3A10-1"],"fr-ch":["9NO4-9"]},c=J(529);class se extends T{constructor(){super(),this.besoinFormulaireNumerique=["Niveau de difficulté",2,`1 : Sans calculatrice
2 : Avec calculatrice`],this.besoinFormulaire2CaseACocher=["Afficher la liste des premiers nombres premiers"],this.besoinFormulaire3CaseACocher=["Que des nombres premiers inférieurs à 100"],this.spacing=1,this.spacingCorr=2,this.nbCols=2,this.nbQuestions=5,this.sup=1,this.sup2=!1,this.sup3=!1}nouvelleVersion(){this.consigne=this.sup3?this.nbQuestions>1?"Indiquer si les nombres suivants sont premiers ou pas."+(this.interactif?"":" Justifier s'ils ne le sont pas."):"Indiquer si le nombre suivant est premier ou pas."+(this.interactif?"":" Justifier s'il ne l'est pas."):this.nbQuestions>1?"Justifier que les nombres suivants sont premiers ou pas.":"Justifier que le nombre suivant est premier ou pas.";let N,g;this.sup===1?g=[1,2,3,8]:g=[1,2,3,6,7],g=E(g);const Q=D(g,this.nbQuestions);let v="Cette liste des nombres premiers inférieurs à 100 pourra être utile : <br>"+c[0];for(let n=1;n<25;n++)v+=", "+c[n];v+=".";for(let n=0,C=0;n<this.nbQuestions&&C<50;){N=Q[n];let o="",t="",e=0,m,a,A,q,u,l,S,h,d,p;switch(this.introduction=this.sup3?"":k("Penser aux critères de divisibilité.","nombres","Coup de pouce"),this.sup2?this.introduction+=k(v,"nombres","Coup de pouce"):this.introduction+="",N){case 1:e=this.sup3?2*r(12,49):2*r(51,499),o=i(e),t="Comme "+i(e)+"est pair, il admet donc au moins trois diviseurs qui sont 1, 2 et lui-même, ",t+=b(i(e)+" n'est donc pas premier")+".",p="non";break;case 2:for(A=0,e=this.sup3?3*r(11,33):3*r(34,333);e%2===0||e%5===0;)e=this.sup3?3*r(11,33):3*r(34,333);o=i(e),t="Comme "+e.toString().charAt(0),A=Number(e.toString().charAt(0));for(let s=1;s<e.toString().length;s++)t+=" + "+e.toString().charAt(s),A+=Number(e.toString().charAt(s));t+=` = ${A} est un multiple de 3 donc ${i(e)} aussi, il admet donc au moins trois diviseurs qui sont 1, 3 et lui-même, `,t+="<br>"+b(i(e)+" n'est donc pas premier")+".",p="non";break;case 3:e=this.sup3?5*r(3,19):5*r(20,200),o=i(e),t=`Comme le chiffre des unités de ${i(e)} est un ${e.toString().charAt(e.toString().length-1)}, alors ${i(e)} est divisible par 5, `,t+="il admet donc au moins trois diviseurs qui sont 1, 5 et lui-même, ",t+=b(i(e)+" n'est donc pas premier")+".",p="non";break;case 4:for(e=this.sup3?7*r(2,14):7*r(15,143);e%2===0||e%3===0||e%5===0;)e=this.sup3?7*r(2,14):7*r(15,143);for(o=i(e),q=e.toString().length,t=` 7 divise ${i(e)}, en effet : `,t+="<br>",u=e,l=q,S=Number(u.toString().substring(0,l-1))+5*Number(u.toString().charAt(l-1));S>=56;)t+=`${u.toString().substring(0,l-1)} + 5$\\times$${u.toString().charAt(l-1)}`,t+=` = ${Number(u.toString().substring(0,l-1))+5*Number(u.toString().charAt(l-1))}`,t+="<br>",u=S,l=u.toString().length,S=Number(u.toString().substring(0,l-1))+5*Number(u.toString().charAt(l-1));t+=`Comme ${u.toString().substring(0,l-1)} + 5$\\times$${u.toString().charAt(l-1)} = ${S} est un multiple de 7 alors 7 divise ${e} aussi `,t+="qui admet donc au moins trois diviseurs : 1, 7 et lui-même, ",t+=b(i(e)+" n'est donc pas premier")+".",p="non";break;case 5:for(e=11*r(10,91);e%2===0||e%3===0||e%5===0||e%7===0;)e=11*r(10,91);if(o=i(e),t=`D'une part, la somme des chiffres de rang impair de ${i(e)} vaut `,Number(e.toString().length)%2===0){h=Number(e.toString().charAt(1)),t+=e.toString().charAt(1);for(let s=3;s<e.toString().length;s++)s%2===1&&(t+=" + "+e.toString().charAt(s),h+=Number(e.toString().charAt(s)));t+=" = "+h+" <br> "}else{h=Number(e.toString().charAt(0)),t+=e.toString().charAt(0);for(let s=1;s<e.toString().length;s++)s%2===0&&(t+=" + "+e.toString().charAt(s),h+=Number(e.toString().charAt(s)));t+=" = "+h+"<br> "}if(t+=`d'autre part, la somme des chiffres de rang pair de ${i(e)} vaut `,Number(e.toString().length)%2===0){d=Number(e.toString().charAt(0)),t+=e.toString().charAt(0);for(let s=1;s<e.toString().length;s++)s%2===0&&(t+=" + "+e.toString().charAt(s),d+=Number(e.toString().charAt(s)));t+=" = "+d+" <br> "}else{d=Number(e.toString().charAt(1)),t+=e.toString().charAt(1);for(let s=3;s<e.toString().length;s++)s%2===1&&(t+=" + "+e.toString().charAt(s),d+=Number(e.toString().charAt(s)));t+=" = "+d+"<br> "}t+="la différence entre la somme des chiffres de rangs pairs et celle des chiffres de rangs impairs vaut ",d-h===0?t+=`${d-h}, `:t+=`${Math.abs(d-h)} qui est un multiple de 11, `,t+="<br>",t+=` cela signifie que ${i(e)} est divisible par 11, il admet donc au moins trois diviseurs qui sont 1, 11 et lui-même,`,t+=b(i(e)+" n'est donc pas premier")+".",p="non";break;case 6:{const s=r(0,24),w=r(0,24),f=c[s],$=c[w];e=f*$,o=`$${f} \\times ${$}$ `,t=`${o} est le produit de ${f} et de ${$}, il admet donc au moins `,f===$?t+=`trois divisieurs qui sont 1, ${f} et lui-même ${o}=${i(e)}, `:t+=`quatre diviseurs qui sont 1, ${f}, ${$} et lui-même ${o}=${i(e)}, `,t+=b(`${o} = `+i(e)+" n'est donc pas premier")+".",p="non"}break;case 7:for(m=this.sup3?r(6,24):r(25,c.length-1),e=c[m],e>100?this.sup2=!0:this.sup2=!1,o=i(e)+"",m=0,a=[];c[m]**2<e;)a.push(c[m]),m++;if(t=`En effectuant la division euclidienne de ${e} par tous les nombres premiers inférieurs à $\\sqrt{${e}}$, c'est-à-dire par `,e===2||e===3)t+="aucun nombre dans le cas présent, le reste n'est jamais nul,";else{t+="les nombres ",t+=a[0];for(let s=1;s<a.length-1;s++)t+=", "+a[s];t+=" et "+a[a.length-1],t+=", le reste n'est jamais nul,"}t+=" "+b(i(e)+" est donc un nombre premier")+".",p="oui";break;case 8:for(m=r(6,24),e=c[m],o=i(e)+"",m=0,a=[];c[m]**2<e;)a.push(c[m]),m++;if(t=this.sup3?b(i(e)+" est un nombre premier")+" car il fait partie de la liste des nombres premiers à connaitre. Sinon, sans cette connaissance, il y a la méthode suivante.<br>":"",t+=`En effectuant la division euclidienne de ${e} par tous les nombres premiers inférieurs à $\\sqrt{${e}}$, c'est-à-dire par `,e===2||e===3)t+="aucun nombre dans le cas présent, le reste n'est jamais nul,";else{t+="les nombres ",t+=a[0];for(let s=1;s<a.length-1;s++)t+=", "+a[s];t+=" et "+a[a.length-1],t+=", le reste n'est jamais nul,"}t+=" "+b(i(e)+" est donc un nombre premier")+".",p="oui";break}this.autoCorrection[n]={},this.autoCorrection[n].options={ordered:!0},this.autoCorrection[n].enonce=`${o}
`,this.autoCorrection[n].propositions=[{texte:"est premier",statut:p!=="non"},{texte:"n'est pas premier",statut:p!=="oui"}];const x=y(this,n);this.interactif&&(o+=x.texte),this.questionJamaisPosee(n,e)&&(this.listeQuestions[n]=o,this.listeCorrections[n]=t,n++),C++}P(this)}}export{Z as amcReady,_ as amcType,se as default,X as interactifReady,Y as interactifType,te as refs,W as titre,ee as uuid};
