import{c as Q,a as $,b,d as E,e as B}from"./Canvas3DElement-BqpJ_f1x.js";import{af as G,c as m,bO as H,bQ as W,bY as I,bR as k,r as F,bS as N,m as r,o as R,D as J,l as U}from"./embellissements-BYV7mIDn.js";import{b as Y,a as y,e as L}from"./solides-Bdh-0xDW.js";import{h as Z}from"./gestionInteractif-DujZpSu8.js";import{a as z}from"./questionMathLive-DdRvWqlN.js";import{E as K}from"./Exercice-DtXhjCyI.js";import"./three.module-6qJVdblD.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./aleatoires-BLhzzHLc.js";import"./dateEtHoraires-yqKtvK1K.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./index-BUDQz6-w.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"seedrandom";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"./AjouteTableauMathlive-Bz24QHd3.js";const Ge="Trouver le nombre de faces ou d'arêtes d'un solide",ke="7/11/2021",Le=!0,Me="mathLive",Pe=!0,Ae="AMCNum",Te="da6a4",De={"fr-fr":["BP2G2","5G53"],"fr-2016":["6G44","BP2G2"],"fr-ch":["9ES7-7"]};class He extends K{version;constructor(){super(),this.besoinFormulaireNumerique=["Type de questions",3,`1 : Sur le nombre d'arêtes
 2 : Sur le nombre de faces
 3 : Mélange`],this.besoinFormulaire2CaseACocher=["3d dynamique",!1],this.sup2=!1,this.nbQuestions=4,this.sup=3,this.version=6}nouvelleVersion(){this.version===3&&(this.sup=3);let x=[];this.nbQuestions=Math.min(this.nbQuestions,50);const M=G([1,3,5,7,9,11,13],this.nbQuestions),P=G([2,4,6,8,10,12,14],this.nbQuestions),S=G([3,4,5,6,8],this.nbQuestions);if(this.sup===3)for(let a=0;a<this.nbQuestions;a++)x.push(M[a],P[a]);else this.sup===1?x=P.slice(0,this.nbQuestions):x=M.slice(0,this.nbQuestions);for(let a=0,t;a<this.nbQuestions;){let i="",o=0,h="Voici un solide :<br>";const c=[];t=x[a],m.anglePerspective=20;const d=[],A=[],e=S[a],T=4,C=H(0,0,0),q=W(0,0,2),V=I(q,C,2),O=I(q,C,-1),g=k(C,V),j=k(C,O),D=Math.PI*2/e,v=F(5,7)/10;for(let f=0;f<e;f++)A.push(H(T*Math.cos(D*f+(e>5?.5:0)),T*Math.sin(D*f+(e>5?.5:0)),0));const u=N(...A),p=Y(u,W(0,0,-2)),w=k(u,q),n=t<7?y(w,g):t<9?y(u,g):t<13?L(u,g,v):y(u,g),l=t<9?y(u,j):t<11?L(u,j,v):t<13?y(u,j):L(u,j,v);switch(Math.ceil(t/2)){case 1:if(this.sup2&&m.isHtml){const s=[E(e,3,-.5,.5,!1,!1),$(e,3,.5,2,!1),$(e,3,-.5,-2,!1)];c.push({type:"bufferGeometry",geometry:b(s)})}else{for(let s=0;s<e;s++)p.base1.c2d[s].isVisible=!1,p.base2.c2d[s].isVisible=!1;d.push(...p.c2d,...n.c2d,...l.c2d)}t%2===1?(o=3*e,i=`Comme chacune des pyramides possède une base à $${e}$ sommets, alors le prisme et les deux pyramides possèdent aussi $${e}$ faces.<br>Ce solide est donc constitué de $3\\times ${e}$ faces, soit $${r(3*e)}$ faces.`):(o=5*e,i=`Comme chacune des pyramides possède une base à $${e}$ sommets, alors le prisme et les deux pyramides possèdent aussi $${e}$ arêtes latérales.<br>On doit ajouter les $${e}$ arêtes de la base de chaque pyramide. Ce solide est donc constitué de $5\\times ${e}$ arêtes, soit $${r(5*e)}$ arêtes.`);break;case 2:if(this.sup2&&m.isHtml){const s=[E(e,3,-.5,.5,!0,!1),$(e,3,.5,2)];c.push({type:"bufferGeometry",geometry:b(s)})}else{for(let s=0;s<e;s++)p.base1.c2d[s].isVisible=!1;d.push(...p.c2d,...n.c2d)}t%2===1?(o=2*e+1,i=`Comme le prisme a $${e}$ faces latérales, alors la pyramide en a $${e}$ aussi.<br>Si on ajoute la face du dessous, ce solide est donc constitué de $2\\times ${e}+1$ faces, soit $${r(2*e+1)}$ faces.`):(o=4*e,i=`Comme le prisme a $${e}$ arêtes latérales, alors la pyramide en a $${e}$ aussi.<br>En ajoutant les arêtes des deux bases du prisme, soit $2\\times ${e}$ arêtes, on obtient donc $4\\times ${e}$ arêtes, soit $${r(4*e)}$ arêtes.`);break;case 3:if(this.sup2&&m.isHtml){const s=[E(e,3,-.5,.5,!1,!0),$(e,3,-.5,-2)];c.push({type:"bufferGeometry",geometry:b(s)})}else{for(let s=0;s<e;s++)p.base1.c2d[s].isVisible=!1;d.push(...p.c2d,...l.c2d)}t%2===1?(o=2*e+1,i=`Comme le prisme a $${e}$ faces latérales, alors la pyramide en a $${e}$ aussi.<br>Si on ajoute la face du dessus, ce solide est donc constitué de $2\\times ${e}+1$ faces, soit $${r(2*e+1)}$ faces.`):(o=4*e,i=`Comme le prisme a $${e}$ arêtes latérales, alors la pyramide en a $${e}$ aussi.<br>En ajoutant les arêtes des deux bases du prisme, soit $2\\times ${e}$ arêtes, on obtient donc $4\\times ${e}$ arêtes, soit $${r(4*e)}$ arêtes.`);break;case 4:if(this.sup2&&m.isHtml){const s=[$(e,3,0,3),$(e,3,0,-2)];c.push({type:"bufferGeometry",geometry:b(s)})}else d.push(...n.c2d,...l.c2d);t%2===1?(o=2*e,i=`Comme chacune des pyramides possède une base à $${e}$ sommets, elles ont aussi $${e}$ faces latérales.<br>Ce solide est donc constitué de $2\\times ${e}$ faces, soit $${r(2*e)}$ faces.`):(o=3*e,i=`Comme chacune des pyramides possède une base à $${e}$ sommets, alors elles ont aussi $${e}$ arêtes latérales auxquelles on ajoute les $${e}$ arêtes de la base commune aux deux pyramide.<br>On obtient donc $3\\times ${e}$ arêtes, soit $${r(3*e)}$ arêtes.`);break;case 5:if(this.sup2&&m.isHtml){const s=[Q(e,3,1,0,1.5,!1,!0),Q(e,1,3,-1.5,0,!0,!1)];c.push({type:"bufferGeometry",geometry:b(s)})}else{for(let s=0;s<e/2;s++)l.c2d[s+2*e].pointilles=2,n.c2d[s].pointilles=2,s!==0&&(n.c2d[s+e].pointilles=2);d.push(...n.c2d,...l.c2d)}t%2===1?(o=2*e+2,i=`Les deux pyramides tronquées ont une base commune à $${e}$ sommets, elles ont donc $${e}$ faces latérales chacune auxquelles il faut ajouter les deux faces parallèles du dessus et du dessous.<br>Ce solide est donc constitué de $2\\times ${e}+2$ faces, soit $${r(2*e+2)}$ faces.`):(o=5*e,i=`Les deux pyramides tronquées ont une base commune à $${e}$ sommets.<br>Donc elles ont aussi $${e}$ arêtes latérales chacune.<br>Il faut ajouter les $${e}$ arêtes de la base commune aux deux pyramides.<br>Enfin on ajoute les ${e} arêtes de la face du dessus et les ${e} arêtes de la face du dessous.<br>Au total, il y a $5\\times ${e}$ arêtes, soit $${r(5*e)}$ arêtes.`);break;case 6:if(this.sup2&&m.isHtml){const s=[$(e,3,0,-1.5,!1),Q(e,3,1,0,2,!1,!0)];c.push({type:"bufferGeometry",geometry:b(s)})}else{for(let s=0;s<e/2;s++)n.c2d[s].pointilles=2,s!==0&&(n.c2d[s+e].pointilles=2);d.push(...n.c2d,...l.c2d)}t%2===1?(o=2*e+1,i=`Le solide est composé d'une pyramide à $${e}$ faces latérales et d'un tronc de pyramide<br>qui possède autant de faces latérales plus une face au dessus<br>Ce solide est donc constitué de $2\\times ${e}+1$ faces, soit $${r(2*e+1)}$ faces.`):(o=4*e,i=`Le solide est composé d'une pyramide à $${e}$ arêtes latérales et d'un tronc de pyramide<br>qui possède aussi $${e}$ arêtes latérales.<br>Il faut ajouter les $${e}$ arêtes de chacune des bases du tronc de pyramide.<br>Au total, il y a $4\\times ${e}$ arêtes, soit $${r(4*e)}$ arêtes.`);break;case 7:default:if(this.sup2&&m.isHtml){const s=[Q(e,3,1,0,-2,!1,!0),$(e,3,0,2)];c.push({type:"bufferGeometry",geometry:b(s)})}else{for(let s=0;s<e/2;s++)l.c2d[s].pointilles=2,s!==0&&(l.c2d[s+e].pointilles=2),l.c2d[s+2*e].pointilles=2;d.push(...n.c2d,...l.c2d)}t%2===1?(o=2*e+1,i=`Le solide est composé d'une pyramide à $${e}$ faces latérales et d'un tronc de pyramide<br>qui possède autant de faces latérales plus une face du dessous<br>Ce solide est donc constitué de $2\\times ${e}+1$ faces, soit $${r(2*e+1)}$ faces.`):(o=4*e,i=`Le solide est composé d'une pyramide à $${e}$ arêtes latérales et d'un tronc de pyramide<br>qui possède aussi $${e}$ arêtes latérales.<br>Il faut ajouter les $${e}$ arêtes de chacune des bases du tronc de pyramide.<br>Au total, il y a $4\\times ${e}$ arêtes, soit $${r(4*e)}$ arêtes.`);break}if(c.length>0){const f={objects:c,autoCenterZoomMargin:1};h+=B({id:`canvas3d-Ex${this.numeroExercice}Q${a}`,content:f,width:250,height:250})}else h+=R(Object.assign({},J(d)),d);t%2===1?h+="Quel est le nombre de faces de ce solide ?":h+="Quel est le nombre d'arêtes de ce solide ?",this.questionJamaisPosee(a,t,e)&&(Z(this,a,{reponse:{value:o}}),h+=z(this,a,""),this.listeQuestions[a]=h??"",this.listeCorrections[a]=i,a++)}U(this)}}export{Pe as amcReady,Ae as amcType,ke as dateDePublication,He as default,Le as interactifReady,Me as interactifType,De as refs,Ge as titre,Te as uuid};
