import{af as E,p as g,aJ as Q,r as i,aQ as P,ah as j,aM as A,T as v,aH as B,aj as y,D as d,o as u,l as T}from"./embellissements-BYV7mIDn.js";import{E as k}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const I="Nom de l'exercice",K="4/5/2024",R="1eb36",S={"fr-fr":[],"fr-ch":[]};class U extends k{constructor(){super(),this.consigne="consigne",this.nbQuestions=1}nouvelleVersion(){const C=E([1],this.nbQuestions);for(let e=0,n,r,m=0;e<this.nbQuestions&&m<50;){const s=[],a=[],c=[];switch(n="Construire le carré $ABCD$.<br>",r="Pour cette construction on peut utiliser la règle et l'équerre.<br>",C[e]){case 1:{const t=g(0,0,"A","below"),p=Q(t,i(30,60)/10,i(0,40),"B"),b=P(t,p,i(40,60)/10,i(30,50)/10),o=b.listePoints[2];o.nom="C";const f=j(p,t,-90,"D","above");s.push(b,A(o,f)),s.push(v(t,p)),s.push(B(t,o));const x=y(o,f);x.epaisseur=2,a.push(x),s.forEach(l=>{c.push(l)}),a.forEach(l=>{c.push(l)})}break}const h=Object.assign(d(s),{pixelsParCm:20,scale:1}),D=Object.assign(d(s),{pixelsParCm:20,scale:1,mainlevee:!0,amplitude:1});n+=u(h,s)+u(D,a),r+=u(h,c),this.questionJamaisPosee(e,s)&&(this.listeQuestions[e]=n,this.listeCorrections[e]=r,e++),m++}T(this)}}export{K as dateDePublication,U as default,S as refs,I as titre,R as uuid};
