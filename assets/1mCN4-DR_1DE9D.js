import{F as r,m as o,e as d,r as l,d as f,l as b}from"./embellissements-BYV7mIDn.js";import S from"decimal.js";import{v as $,b as m}from"./colors-bl7PrqSM.js";import{g as D}from"./languagesStore-wAwK5LyE.js";import{E as F}from"./Exercice-DtXhjCyI.js";import"mathjs";import"katex";import"earcut";import"roughjs";import"./canStore-DaSrd7sp.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";class g{partieEntiere;partieDecimale;periode;fractionEntiere;fractionDecimale;fractionPeriode;numberOfNines;fractionJustePeriode;constructor(e,i,a){this.partieEntiere=e,this.partieDecimale=i,this.periode=a,this.fractionEntiere=new r(this.partieEntiere,1),this.fractionDecimale=new r(this.partieDecimale,10**this.partieDecimale.toString().length),this.partieDecimale===-1&&(this.fractionDecimale=new r(0,1)),this.numberOfNines=this.periode.toString().length,i===-1?this.fractionPeriode=new r(this.periode,10**this.numberOfNines-1):this.fractionPeriode=new r(this.periode,10**this.numberOfNines-1).entierDivise(10**this.partieDecimale.toString().length),this.fractionJustePeriode=new r(this.periode,10**this.numberOfNines-1)}toString(){return`${this.partieEntiere}, ${this.partieDecimale===-1?"":this.partieDecimale}${this.periode===0?"":`\\overline{${this.periode}}`}`}toFraction(){return this.partieDecimale===-1?this.fractionEntiere.sommeFraction(this.fractionPeriode).simplifie():this.fractionEntiere.sommeFraction(this.fractionDecimale).sommeFraction(this.fractionJustePeriode.diviseFraction(new r(10**this.partieDecimale.toString().length,1))).simplifie()}toFractionProcedure(){let e="";const i=`${this.partieEntiere} ${this.partieDecimale===-1?"":`,${this.partieDecimale}`}`,s=`0,${"0".repeat(this.partieDecimale===-1?0:this.partieDecimale.toString().length)}\\overline{${this.periode}}`,n=`0,\\overline{${this.periode}}`;return(this.partieDecimale!==-1||this.partieEntiere!==0)&&(e+=`On commence par écrire le nombre sous forme $${this.toString()}={\\color{green}${i}}+{\\color{blue}${s}}$. `,this.partieDecimale!==-1&&(e+=`On convertit ensuite chaque terme en fraction. On a : <br> \\[{\\color{green}${i}=${this.fractionEntiere.sommeFraction(this.fractionDecimale).texFraction}${this.fractionEntiere.sommeFraction(this.fractionDecimale).estIrreductible?"":`=${this.fractionEntiere.sommeFraction(this.fractionDecimale).texFractionSimplifiee}`}}\\]`)),e+=`<br> On transforme $${s}$ en écriture fractionnaire. `,this.partieDecimale!==-1&&(e+=` On commence par écrire $${n}$ en fraction. `),e+=`On a : \\[${n}=\\dfrac{${this.periode}}{${"9".repeat(this.numberOfNines)}}${this.partieDecimale===-1&&new r(this.periode,10**this.periode.toString().length-1).estIrreductible===!1?`=${new r(this.periode,10**this.periode.toString().length-1).texFractionSimplifiee}`:""}\\]`,this.partieDecimale!==-1&&(e+=`Par ailleurs $${s}=${n}${this.partieDecimale===-1?"":`: 10{${this.partieDecimale.toString().length>=2?`^${this.partieDecimale.toString().length}`:""}}`}.$ Ainsi : \\[{\\color{blue}${s}=${n}${this.partieDecimale===-1?"":`: 10{${this.partieDecimale.toString().length>=2?`^${this.partieDecimale.toString().length}`:""}}`} =${this.fractionJustePeriode.diviseFraction(new r(10**this.partieDecimale.toString().length,1)).texFraction}=${this.fractionJustePeriode.diviseFraction(new r(10**this.partieDecimale.toString().length,1)).texFractionSimplifiee}}\\]`),(this.partieDecimale!==-1||this.partieEntiere!==0)&&(e+=`On additionne les fractions obtenues et on réduit le résultat pour obtenir la fraction irréductible de $${this.toString()}$.\\[${this.toString()}={\\color{green}${this.fractionEntiere.sommeFraction(this.fractionDecimale).texFractionSimplifiee}} +{\\color{blue}${this.fractionPeriode.texFractionSimplifiee}}=${o(this.toFraction().texFraction)}\\]`),this.partieDecimale===-1&&this.partieEntiere===0&&(e+=`Ainsi : \\[${n}=${o(new r(this.periode,10**this.periode.toString().length-1).texFractionSimplifiee)}\\]`),e}toFractionNouvelProcedure(){const e=D();let i="";this.partieDecimale!==-1?i=this.partieDecimale.toString():i="";const a=this.partieEntiere.toString().length+this.periode.toString().length,s=this.partieEntiere.toString()+i+this.periode.toString(),n=s.slice(0,a);let h=s.slice(a);h===""&&(h="-1");const p=new g(Number(n),Number(h),this.periode),t=p.toFraction().differenceFraction(this.toFraction()).fractionDecimale(),u=new S(t.num/t.den);let c=`On multiplie le nombre par $10^{${this.periode.toString().length}}=${10**this.periode.toString().length}$ afin de décaler la virgule du nombre de crans correspondant à la période. On a deux égalités avec le même membre de gauche<br><br>
    $\\begin{aligned}
    &${o(`${10**this.periode.toString().length}\\times${this.toString()}-${this.toString()}`,$)}=${o(`${10**this.periode.toString().length-1}\\times${this.toString()}`,m)}\\\\
    &${o(`${10**this.periode.toString().length}\\times${this.toString()}-${this.toString()}`,$)}=${p.toString()}-${this.toString()}=${o(d(u,6),m)}
    \\end{aligned}$<br>`;return e==="fr-CH"?c+=`donc
    \\[${o(`${10**this.periode.toString().length-1}\\times${this.toString()}`,m)}=${o(d(u,6),m)}.\\]
    Cela implique que <br><br>
    $\\begin{aligned}
    ${this.toString()}&=${d(u,6)}:${10**this.periode.toString().length-1}\\\\
    &=${t.entierDivise(10**this.periode.toString().length-1).texFraction} \\quad \\text{on est passé à une écriture fractionnaire}
    ${t.entierDivise(10**this.periode.toString().length-1).estIrreductible?".":`\\\\&=${t.entierDivise(10**this.periode.toString().length-1).texFractionSimplifiee} \\quad \\text{on simplifie la fraction.}`}
    \\end{aligned}$<br><br>
    Ainsi, $${this.toString()}=${o(t.entierDivise(10**this.periode.toString().length-1).texFractionSimplifiee)}$.`:(c+="<br>On a donc les deux membres de droite qui sont égaux.",c+=`<br><br>$${o(`${10**this.periode.toString().length-1}\\times${this.toString()}`,m)}=${o(d(u,6),m)}$`,c+=`<br><br>$${this.toString()}=${t.entierDivise(10**this.periode.toString().length-1).texFraction}\\\\`,t.entierDivise(10**this.periode.toString().length-1).estIrreductible?c+="$":c+=`=${t.entierDivise(10**this.periode.toString().length-1).texFractionSimplifiee}$<br><br>`),c}}const L="Convertir un nombre périodique en écriture décimale en fraction irréductible",j="12/09/2024",Z="21/11/2024",y=!1,H="8f8bc",R={"fr-ch":["1mCN-4"],"fr-fr":["PEN16"]};class T extends F{constructor(){super(),this.nbQuestions=3,this.besoinFormulaireNumerique=["Longueur maximale de la période",4,`1
2
3
4`],this.besoinFormulaire2Numerique=["Nombre de chiffres maximum dans la partie entière",3,`1
2
3`],this.besoinFormulaire3Numerique=["Nombre de chiffres maximum dans la partie décimale (hors période)",3,`0
1
2
3`],this.besoinFormulaire4CaseACocher=["Partie entière égale à 0"],this.besoinFormulaire5CaseACocher=["Indiquer que la calculatrice est autorisée"],this.sup=2,this.sup2=1,this.sup3=1,this.sup4=!1,this.sup5=!0}nouvelleVersion(){this.consigne=`Écrire en fraction irréductible ${this.nbQuestions>1?"les nombres périodiques suivants":"le nombre périodique suivant"}.`,this.sup5&&(this.consigne+=" La calculatrice est autorisée.");for(let e=0,i=0;e<this.nbQuestions&&i<50;){const a=Math.ceil(l(10**(this.sup-1),10**this.sup-1)/10**l(0,this.sup));let s=f(l(10**(this.sup2-1),10**this.sup2-1)/10**l(0,this.sup2)),n=0;this.sup3===1?n=-1:n=Math.ceil(l(10**(this.sup3-1),10**this.sup3-1)/10**l(0,this.sup3)),this.sup4===!0&&(s=0);const h=new g(s,n,a);let p="",t="";p=`$${h.toString()}$`,t=`${h.toFractionNouvelProcedure()}`,this.questionJamaisPosee(e,a)&&(this.listeQuestions[e]=p,this.listeCorrections[e]=t,e++),i++}b(this)}}export{Z as dateDeModifImportante,j as dateDePublication,T as default,y as interactifReady,R as refs,L as titre,H as uuid};
