import{y as C,br as y,r as m,af as N,o as c,m as b,l as $}from"./embellissements-BYV7mIDn.js";import{l as g}from"./Labyrinthe-BCFJckxv.js";import{E as q,K as d}from"./Exercice-DtXhjCyI.js";import{a as f}from"./questionMathLive-DdRvWqlN.js";import{h as v}from"./gestionInteractif-DujZpSu8.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./findPath-D-bvJShA.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";const Z="16/11/2021",_="29/10/2024",ee=!0,ie="mathLive",te="Parcourir un labyrinthe de multiples avec critères choisis équilibrés ",se="5618d",re={"fr-fr":["5A11-2"],"fr-ch":["9NO4-12"]};class oe extends q{niveau;constructor(){super(),this.besoinFormulaireNumerique=["Niveau de rapidité",6,`1 : Escargot
2 : Tortue
3 : Lièvre
4 : Antilope
5 : Guépard
6 : Au hasard`],this.besoinFormulaire3Numerique=["Nombre de lignes du labyrinthe (entre 2 et 8 ou bien 1 si vous laissez le hasard décider)",8],this.besoinFormulaire4Numerique=["Nombre de colonnes du labyrinthe (entre 2 et 8 ou bien 1 si vous laissez le hasard décider)",8],this.niveau="6e",this.nbQuestions=4,this.sup=6,this.sup3=1,this.sup4=1}nouvelleVersion(){let n,l,t=[];const x=C([[2,3],[2,9],[5,3],[5,9],[10,3],[10,9]]);let s=[];for(const e of x)s.push(e[0],e[1]);s=y(s,this.nbQuestions);for(let e=0;e<this.nbQuestions;){const r=this.sup3===1?m(2,8):Math.max(2,this.sup3),u=this.sup4===1?m(3,11-r):Math.max(3,this.sup4),i=g({nbLignes:r,nbColonnes:u});i.niveau=this.sup,t=i.choisitChemin(i.niveau),i.murs2d=i.construitMurs(t,.8),i.chemin2d=i.traceChemin(t),n=`Trouver la sortie en ne passant que par les cases contenant un nombre divisible par $${s[e]}$.<br>`;let a=[];const h=[];for(let o=200;o<=12e3;o+=m(1,100))a.push(s[e]*o);for(let o=1;o<=u*r;o++)h.push(m(200,5e3)*s[e]+m(1,s[e]-1));a=N(a,12),i.nombres2d=i.placeNombres(t,a,h,.8);const p={xmin:-4,ymin:0,xmax:5+3*u,ymax:2+3*r,pixelsParCm:20,scale:.7};n+=c(p,i.murs2d,i.nombres2d),n+=f(this,2*e,d.clavierNumbers,{texteAvant:"Indiquer le numéro de la bonne sortie :"}),v(this,2*e,{reponse:{value:`${r-t[t.length-1][1]}`}}),n+=f(this,2*e+1,d.clavierNumbers,{texteAvant:"<br>Combien de nombres rencontrés avant la sortie ?"}),v(this,2*e+1,{reponse:{value:`${i.chemin2d.length-1}`}}),l=`Voici le chemin en couleur ($${b(i.chemin2d.length-1)}$ nombres rencontrés avant la sortie) et la sortie est le numéro $${b(r-t[t.length-1][1])}$.<br>`,l+=c(p,i.murs2d,i.nombres2d,i.chemin2d),this.questionJamaisPosee(e,a[0],h[0])&&(this.listeQuestions[e]=n,this.listeCorrections[e]=l,e++)}$(this)}}export{_ as dateDeModifImportante,Z as dateDePublication,oe as default,ee as interactifReady,ie as interactifType,re as refs,te as titre,se as uuid};
