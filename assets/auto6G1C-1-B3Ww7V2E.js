import{g as O,a as E,r as T,ah as R,p as d,n as V,aF as M,aa as I,a3 as H,j as J,o as Q,D as j,t as K}from"./embellissements-BYV7mIDn.js";import{l as U}from"./listeFigures2d-BecrDqc_.js";import{p as W}from"./qcm-BQR8Ns0N.js";import{E as X}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./Figures2D-C1IYLm7-.js";import"./panneaux-BCuKbHaQ.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const ht="Dire si deux figures sont symétriques par rapport à une droite",bt=!0,ft="mathLive",xt="17/05/2025",yt="528b2",gt={"fr-fr":["auto6G1C-1"],"fr-2016":["6G25-5"],"fr-ch":["9ES6-31","10ES2-18"]};class At extends X{constructor(){super(),this.nbQuestions=3,this.sup="1",this.besoinFormulaireTexte=["Type d'axes",`Nombres séparés par des tirets :
1 : Plutôt vertical
2 : Plutôt horizontal
3 : Plutôt oblique
4 : Mélange`],this.besoinFormulaire4CaseACocher=["Grandes figures",!0],this.sup4=!0}nouvelleVersion(){const x=this.sup4?2:1,y=[],c=O({saisie:this.sup,min:1,max:3,melange:4,defaut:1,nbQuestions:this.nbQuestions,listeOfCase:["vertical","horizontal","oblique"]});for(let t=0;t<this.nbQuestions;){let h="",b="";const i=[],g=[],D="geometrique",v=U.filter(o=>o.type===D).filter(o=>!y.includes(o.numero));if(v.length===0){this.listeQuestions.push("Aucune figure disponible"),this.listeCorrections.push("Aucune figure disponible");break}const F=v.filter(o=>!y.includes(o.numero)),p=E(F);y.push(p.numero),h+=`Les deux figures sont-elles symétriques par rapport à la droite $(d_{${(t+1)%10}})$ ?<br>`;const A=0,$=p.options??{},s=c[t]==="vertical"?p.figure2d($).dilate(x).rotate(A).translate(-4.5,0):c[t]==="horizontal"?p.figure2d($).dilate(x).rotate(A).translate(0,4.5):p.figure2d($).dilate(x).rotate(A).translate(-4.5,4.5);s.name=p.name.replace(/ /g,"_"),s.opacite=.5,i.push(s);const q=T(-4,4,[0,1,-1])*2,S=c[t]==="vertical"?0:c[t]==="horizontal"?90:-45,n=R(V(d(0,-1),d(0,1)),d(0,0),S+q);i.push(n);const m=c[t]==="vertical"?d(-4.5,0):c[t]==="horizontal"?d(0,4.5):d(-4.5,4.5),w=M(m,n),C=I(H(m,w),w,2),a=E(["translation","symetrie","rotation","homothetie"]);let r;switch(a){case"translation":r=s.copy(s.name+"b").translate(C.x,0),i.push(r);break;case"symetrie":r=s.symetrie(n),r.opacite=.5,i.push(r);break;case"homothetie":r=s.copy(s.name+"b").translate(-m.x,-m.y).dilate(E([1.2,1.3,1.1,.9,.8])).translate(m.x,m.y),r=r.symetrie(n),i.push(r);break;case"rotation":default:r=s.copy(s.name+"b").rotate(180-S-4*q).translate(C.x,C.y),i.push(r);break}const L=J(`(d_{${(t+1)%10}})`,n.x2+.6,n.y2,{});if(i.push(L),h+=Q(Object.assign({pixelsParCm:20,scale:.5},j(i,{rxmax:3,rymax:1,rymin:-1})),i),this.interactif){this.autoCorrection[t]={propositions:[{texte:"Oui",statut:a==="symetrie"},{texte:"Non",statut:a!=="symetrie"}],options:{ordered:!0,radio:!0}};const o=W(this,t,{style:"inline-block",format:"case"});h+=`${o.texte}`}const G=(o=1)=>{if(o===1)return;const k=document.getElementById(`${s.name}Corr_${t-1}`);if(k&&!k.ownerSVGElement?.querySelector(`#icone-resultat-${t}`)){const f="http://www.w3.org/2000/svg",u=document.createElementNS(f,"g");u.setAttribute("id",`icone-resultat-${t}`),u.setAttribute("class","icone-resultat");const P=0,z=0;if(a==="symetrie"){const e=document.createElementNS(f,"path");e.setAttribute("d","M4 20 L16 32 L36 8"),e.setAttribute("stroke","green"),e.setAttribute("stroke-width","5"),e.setAttribute("fill","none"),e.setAttribute("stroke-linecap","round"),e.setAttribute("stroke-linejoin","round"),u.appendChild(e)}else{const e=document.createElementNS(f,"line");e.setAttribute("x1","4"),e.setAttribute("y1","4"),e.setAttribute("x2","36"),e.setAttribute("y2","36"),e.setAttribute("stroke","red"),e.setAttribute("stroke-width","5"),e.setAttribute("stroke-linecap","round");const l=document.createElementNS(f,"line");l.setAttribute("x1","36"),l.setAttribute("y1","4"),l.setAttribute("x2","4"),l.setAttribute("y2","36"),l.setAttribute("stroke","red"),l.setAttribute("stroke-width","5"),l.setAttribute("stroke-linecap","round"),u.appendChild(e),u.appendChild(l)}u.setAttribute("transform",`translate(${P},${z}) scale(1.2)`),k.ownerSVGElement?.appendChild(u),setTimeout(()=>{u.remove()},2e3)}},B=s.loopReflectionAnimee(n,`${s.name}Corr_${t}`,G),_=s.copy(s.name+"Bis");_.opacite=.3;const N=r.copy(r.name+"Bis");N.opacite=.3,g.push(_,N,B,n,L),b+=Q(Object.assign({pixelsParCm:20,scale:.5},j(g,{rxmax:4,rymax:2,rymin:-2.5})),g),b+=`Les deux figures ${K((a==="symetrie"?"sont":"ne sont pas")+" symétriques")} par rapport à la droite $(d_{${(t+1)%10}})$.<br>`,b+=a==="homothetie"?"Les figures n'ont pas la même taille.":a==="translation"?`Les figures ne sont pas symétriques par rapport à la droite $(d_{${(t+1)%10}})$, comme le montre l'animation.`:a==="rotation"?`L'animation montre que les figures ne sont pas symétriques par rapport à la droite $(d_{${(t+1)%10}})$.`:`L'animation montre que par pliage selon l'axe  $(d_{${(t+1)%10}})$ les deux figures se superposent parfaitement.`,this.listeQuestions.push(h),this.listeCorrections.push(b),t++}}}export{xt as dateDePublication,At as default,bt as interactifReady,ft as interactifType,gt as refs,ht as titre,yt as uuid};
