import{a as M,V as H,s as k,c as R,u as J,p as K}from"./patternsPreDef-CbRb9iae.js";import{l as v}from"./shapes2d-C4LL3wzV.js";import{V as W}from"./VisualPattern-D11BgzPT.js";import{am as X,g as Y,b5 as z,ay as Z,y as ee,cb as te,D as P,C as se,A as re,p as j,o as T,e as q,m as b,r as A,d2 as oe}from"./embellissements-BYV7mIDn.js";import{c as G}from"./lists-i1i4IA1M.js";import{c as Q}from"./questionMathLive-DdRvWqlN.js";import{E as ie}from"./Exercice-DtXhjCyI.js";import"./Canvas3DElement-BqpJ_f1x.js";import"./three.module-6qJVdblD.js";import"./Figures2D-C1IYLm7-.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./tableauMathlive-xx-nDjq0.js";import"./index-BUDQz6-w.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"seedrandom";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"./gestionInteractif-DujZpSu8.js";import"./AjouteTableauMathlive-Bz24QHd3.js";const Ve="Identifier la structure d'un motif (itératif)",Le=!0,Re="mathLive",ze="23/07/2025",Ae="f8b5e",Ge={"fr-fr":["5I13"],"fr-ch":[]};class Ue extends ie{destroyers=[];constructor(){super(),this.nbQuestions=3,this.comment=` Les patterns sont des motifs figuratifs qui évoluent selon des règles définies.<br>
 Cet exercice contient des patterns issus de l'excellent site : <a href="https://www.visualpatterns.org/" target="_blank" style="color: blue">https://www.visualpatterns.org/</a>.<br>
 Cet exercice propose d'étudier les premiers termes d'une série de motifs afin de répondre à différentes questions possibles.<br>
Grâce au premier paramètre, on peut choisir le nombre de motifs visibles.<br>
Grâce au deuxième paramètre, on peut choisir les questions à poser.<br>
Grâce au troisième paramètre, on peut imposer des patterns choisis dans cette <a href="https://coopmaths.fr/alea/?uuid=71ff5" target="_blank" style="color: blue">liste de patterns</a>.<br>
Si le nombre de questions est supérieur au nombre de patterns choisis, alors l'exercice sera complété par des patterns choisis au hasard.
    `,this.besoinFormulaireNumerique=["Nombre de figures par question",3,`Deux figures
Trois Figures
Quatre Figures`],this.sup=2,this.besoinFormulaire2Texte=["Type de questions",["Nombres séparés par des tirets :","1 : Motif suivant à dessiner","2 : Motif suivant (nombre)","3 : Motif 10 (nombre)","4 : Numéro du motif","5 : Motif 100 (nombre)","6 : Une question au hasard parmi les 5 précédentes","7 : Ensemble des 5 premières propositions"].join(`
`)],this.sup2="7",this.besoinFormulaire3Numerique=["Numéro de pattern si nombre de question = 1 :",M.length],this.sup3=1,this.listePackages=["twemojis"]}destroy(){this.destroyers.forEach(a=>a()),this.destroyers.length=0}nouvelleVersion(){this.destroyers.forEach(i=>i()),this.destroyers.length=0;const a=X(2,4,this.sup+1,4);let m=Y({saisie:this.sup2,min:1,max:6,defaut:1,melange:7,nbQuestions:5,shuffle:!1}).map(Number);m=z(m),m.length===6&&(m=Z(5));let d,I=0;const U=this.nbQuestions===1?[M[this.sup3-1]]:ee(M);for(let i=0;i<Math.min(M.length,this.nbQuestions);){te(m,6)>0?(d=oe(m,6,A(1,5,m)),d=z(d)):d=m;const $=[],s=U[i],n=s.fonctionNb(2)-s.fonctionNb(1),p=s.fonctionNb(1)-n,S=s.type==="linéaire"?`On constate que le nombre de formes augmente de $${n}$ à chaque étape.<br>
        Et que c'est aussi le nombre de formes à l'étape 1. Par conséquent, pour trouver le nombre de formes d'un motif il faut simplement multiplier par ${n} le numéro du motif.`:`On constate que le nombre de formes augmente de $${n}$ à chaque étape.<br>
        Cependant, il n'y a pas ${n} formes sur le motif 1, mais ${s.fonctionNb(1)}. Par conséquent, il faut multiplier le numéro du motif par ${n} et ${p<0?`retirer ${-p}`:`ajouter ${p}`}.`,r="iterate3d"in s?new H({initialCells:[],type:"iso",shapes:s.shapes,prefixId:`Ex${this.numeroExercice}Q${i}`}):new W([]);if("iterate3d"in r)r.shape=k(),r.iterate3d=s.iterate3d,$.push(R(`cubeIsoQ${i}F0`));else{const e=s;r.iterate=s.iterate,r.shapes=e.shapes||["carré","carré"];for(const t of r.shapes)if(t in v)$.push(v[t].shapeDef);else throw new Error(`Shape ${t} not found in listeShapes2DInfos or emojis.`)}const _=r.render(a+1,0,0,Math.PI/6);$.push(..._);let F=0,N=0;const O=Math.PI/6;let C=`Voici les ${a} premiers motifs d'une série de motifs figuratifs. Ils évoluent selon des règles définies.<br>`;const l=[];for(let e=0;e<a;e++){if(l[e]=[],"iterate3d"in r)l[e].push(R(`cubeIsoQ${i}F${e}`));else for(const g of r.shapes)if(g in v)l[e].push(v[g].shapeDef);else throw new Error(`Shape ${g} not found in listeShapes2DInfos or emojis.`);let t=1/0,o=1/0,u=-1/0,h=-1/0;if("iterate3d"in r){r.shape==null&&(r.shape=k(`cubeIsoQ${i}F${e}`,0,0,{scale:1}));{const g=J({pattern:r,i,j:e,angle:O});g&&this.destroyers.push(g),r.shape.codeSvg=`<use href="#cubeIsoQ${i}F${e}"></use>`,r.update3DCells(e+1).forEach(D=>{const[E,w]=K(D[0],D[1],D[2],O),B=k(`cubeIsoQ${i}F${e}`,E,w);l[e].push(B),o=Math.min(o,-w/20),h=Math.max(h,-w/20),t=Math.min(t,E/20),u=Math.max(u,E/20)}),t-=1,u+=1}}else l[e].push(...r.render(e+1,0,0)),{xmin:t,ymin:o,xmax:u,ymax:h}=P(l[e]);l[e].push(se(`Motif ${e+1}`,(u+t+1)/2,o-1.5,0,"black",.8,"milieu"));const L=re(j(t-1,o-2),j(u+2,o-2),j(u+2,h+2),j(t-1,h+2));L.pointilles=4,l[e].push(L),F=Math.max(F,h),N=Math.min(N,o)}C+=l.map((e,t)=>T(Object.assign(P(e,{rxmin:0,rymin:-1,rxmax:0,rymax:1}),{id:`Motif${i}F${t}`,pixelsParCm:20,yMax:F,yMin:N,scale:.4,style:"display: inline-block",optionsTikz:"transform shape"}),e)).join(`
`);let V="";const c=[],f=[],x=r.shapes[0]in v?v[r.shapes[0]]:{articleCourt:"de ",nomPluriel:"cubes"},y=`${x.articleCourt}${x.nomPluriel}`;for(const e of d)switch(e){case 1:c.push(`
Dessiner le motif $${a+1}$.<br>`),f.push(`Voici le motif $${a+1}$ :<br>
              ${T(Object.assign(P($,{rxmin:0,rymin:-1,rxmax:0,rymax:1}),{scale:.4,optionsTikz:"transform shape"}),$)}`);break;case 2:{const t=s.fonctionNb(a+1),o=q(t,0);c.push(`
Quel sera le nombre ${y} dans le motif $${a+1}$ ?<br>${Q({exercice:this,question:I++,objetReponse:{reponse:{value:o}},typeInteractivite:"mathlive"})}`),f.push(`Le motif $${a+1}$ contient $${b(q(t,0))}$ ${x.nomPluriel}.<br>
          ${d.includes(1)?"":T(Object.assign(P($,{rxmin:-1,rymin:0,rxmax:0,rymax:1}),{scale:.4,optionsTikz:"transform shape"}),$)}`)}break;case 3:{const t=s.fonctionNb(10),o=q(t,0);c.push(`
Quel sera le nombre ${y} pour le motif $10$ ?<br>${Q({exercice:this,question:I++,objetReponse:{reponse:{value:o}},typeInteractivite:"mathlive"})}
            `),f.push(`Le motif $10$ contient $${b(o)}$ ${x.nomPluriel}.<br>
            En effet, la formule pour trouver le nombre ${y} est : $${b(s.formule.replaceAll("n","10"))}$.<br>
            ${S}`)}break;case 4:{const t=A(20,80),o=s.fonctionNb(t),u=q(o,0);c.push(`
Un motif de cette série contient $${u}$ ${x.nomPluriel}. À quel numéro de motif cela correspond-il ?<br>${Q({exercice:this,question:I++,objetReponse:{reponse:{value:t.toString()}},typeInteractivite:"mathlive"})}
            `);const h=s.type==="linéaire"?`On constate que le nombre de formes  augmente de $${n}$ à chaque étape.<br>
        Et que c'est aussi le nombre de formes à l'étape 1. Par conséquent, pour trouver le numéro d'un motif dont on connait le nombre de formes, il faut simplement diviser ce nombre par ${n} pour trouver le numéro.`:`On constate que le nombre de formes augmente de $${n}$ à chaque étape.<br>
        Cependant, il n'y a pas ${n} formes sur le motif 1, mais ${s.fonctionNb(1)}. Par conséquent, il faut ${p<0?`ajouter ${-p}`:`retirer ${p}`} au nombre de formes puis diviser le résultat par ${n} : <br>
        $\\dfrac{${u} ${p<0?"+":"-"} ${Math.abs(p)}}{${n}}=${b(t)}$.`;f.push(`C'est le motif numéro $${b(t.toString())}$ qui contient $${b(q(o,0))}$ ${x.nomPluriel}.<br>
            ${h}`)}break;case 5:{const t=s.fonctionNb(100),o=q(t,0);c.push(`
Quel sera le nombre ${y} pour le motif $100$ ?<br>${Q({exercice:this,question:I++,objetReponse:{reponse:{value:o}},typeInteractivite:"mathlive"})}
            `),f.push(`Le motif $100$ contient $${b(o)}$ formes ${y}.<br>
            En effet, la formule pour trouver le nombre ${y} est : $${b(s.formule.replaceAll("n","100"))}$.<br>
            ${S}`)}break}C+=c.length===1?"<br>"+c[0]:G({items:c,style:"alpha"}),V+=f.length===1?"<br>"+f[0]:G({items:f,style:"alpha"}),this.listeQuestions.push(C),this.listeCorrections.push(V),i++}}}export{ze as dateDeModifImportante,Ue as default,Le as interactifReady,Re as interactifType,Ge as refs,Ve as titre,Ae as uuid};
