import{pickRandom as ee}from"mathjs";import{g as se,a as f,r as D,p as w,aa as q,ah as E,I as o,cf as p,aH as S,m as n,D as U,o as Q,a8 as H,t as K,h as W,y as te,l as ne,a4 as Y,a3 as Z,n as ae,cc as _}from"./embellissements-BYV7mIDn.js";import{p as oe}from"./qcm-BQR8Ns0N.js";import{E as re}from"./Exercice-DtXhjCyI.js";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const he="Effectuer des liens entre angles et parallélisme",fe="15/01/2022",De="20/02/2025",ke=!0,Re="AMCHybride",Se=!0,Xe="qcm";function F(T=[],O=T.length,L=[]){const M=Math.floor(Math.random()*T.length);return L.push(T[M]),T.splice(M,1),L.length===O?L:F(T,O,L)}function I(T,O={O:60,A:0}){const L=E(Y(T,Z(1,0)),T,O.A),M=E(Y(T,Z(3,0)),T,O.A),z=E(L,T,180),k=E(M,T,180),P=E(Y(T,Z(1,0)),T,O.O),g=E(Y(T,Z(3,0)),T,O.O),s=E(P,T,180),a=E(g,T,180);return{a:_(L,P,O.O-O.A,!0,"blue"),b:_(P,z,180-(O.O-O.A),!0,"green"),c:_(z,s,O.O-O.A,!0,"red"),d:_(s,L,180-(O.O-O.A),!0,"gray"),s:L,S:M,t:z,T:k,x:P,X:g,Ox:s,OX:a,As:ae(T,L),Ax:ae(T,P),A:T,labela:p((O.O-O.A)%180+"°",L,P,O.O-O.A,"black",.7,!0),labelb:p((180-(O.O-O.A))%180+"°",P,z,180-(O.O-O.A),"black",.7,!0),labelc:p((O.O-O.A)%180+"°",z,s,O.O-O.A,"black",.7,!0),labeld:p((180-(O.O-O.A))%180+"°",s,L,180-(O.O-O.A),"black",.7,!0)}}const je="19812",Te={"fr-fr":["5G30-2"],"fr-ch":["11ES2-2","1mG1-4"]};class Ee extends re{constructor(){super();const O=["1 : Angles marqués alternes-internes ou correspondants ?","2 : Déterminer si des droites sont parallèles (angles marqués).","3 : Déterminer si des droites sont parallèles (angles nommés).","4 : Calculer la mesure d'un angle (angles marqués).","5 : Calculer la mesure d'un angle (angles nommés).","6 : Marquer un angle alterne-interne ou correspondant à un angle marqué.","7 : Nommer un angle alterne-interne ou correspondant à un angle nommé.","8 : Mélange"];this.nbQuestions=1,this.besoinFormulaireTexte=["Type de questions",`Nombres séparés par des tirets :
`+O.join(`
`)],this.nbCols=2,this.nbColsCorr=2,this.spacing=1.75,this.spacingCorr=1.75,this.sup=8,this.nbQuestions=3}nouvelleVersion(){const O=se({saisie:this.sup,max:7,defaut:8,melange:8,nbQuestions:this.nbQuestions,shuffle:!0});for(let L=0,M,z=0;L<this.nbQuestions&&z<100;){const k=[];let P={ordered:!0};switch(O[L]){case 1:{const g=[];let s;do s=((d,x,$)=>({O:d,A:x,B:$,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,0),D(-90,0));while(!(W(s.O-W(s.A))>30&&W(s.O-W(s.B))>30));const a=w(0,0),b=I(q(E(w(1,0),a,s.O),a,s.r1),{O:s.O,A:s.A}),t=I(q(E(w(1,0),a,s.O+180),a,s.r2),{O:s.O,A:s.B});for(const u of["a","b","c","d"])b[u].couleurDeRemplissage=o("blue"),b[u].opaciteDeRemplissage=.7,t[u].couleurDeRemplissage=o("blue"),t[u].opaciteDeRemplissage=.7;const l=f([f(["aa","bb","cc","dd"]),f(["ca","db"]),f(["a","b","c","d"])+f(["a","b","c","d"])]),e=l[0],i=l[1];g.push(b[e],b.As,b.Ax,t[i],t.As,t.Ax,b["label"+e],t["label"+i]);const R=U([...Object.keys(b).map(u=>b[u]),...Object.keys(t).map(u=>t[u])]);g.forEach(u=>{});let X="Les angles marqués sont-ils alternes-internes, correspondants ou ni l'un, ni l'autre ?<br>",r,c;e===i?(r=`sont ${K("correspondants")}`,c="correspondants"):e+i==="ca"||e+i==="db"?(r=`sont ${K("alternes-internes")}`,c="alternes-internes"):(r=`ne sont ${K("ni alternes-internes")}, ${K("ni correspondants")}`,c="ni l'un ni l'autre");const m=`Par définition, les angles marqués ${r}.`;X+=Q(Object.assign({scale:.4},R),g),M={texte:X,texteCorr:m},k.push({texte:"alternes-internes",statut:c==="alternes-internes"}),k.push({texte:"correspondants",statut:c==="correspondants"}),k.push({texte:"ni l'un ni l'autre",statut:c==="ni l'un ni l'autre"});break}case 2:{const g=[],s=[];let a;do a=((A,C)=>({O:A,A:C,B:C,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,90));while(!(a.O-a.A<70&&a.O-a.A>30));let b;do b=((A,C)=>({a:A,b:C}))(D(0,3),D(0,3));while(!(b.a!==b.b&&(b.a!==2||b.b!==0)&&(b.a!==3||b.b!==1)));const t=w(0,0),l=I(q(E(w(1,0),t,a.O),t,a.r1),{O:a.O,A:a.A}),e=I(q(E(w(1,0),t,a.O+180),t,a.r2),{O:a.O,A:a.B});for(const h of["a","b","c","d"])l[h].couleurDeRemplissage=o("blue"),l[h].opaciteDeRemplissage=.7,e[h].couleurDeRemplissage=o("blue"),e[h].opaciteDeRemplissage=.7;l.As.color=o("red"),e.As.color=o("red");const i=["a","b","c","d"][parseInt(b.a)],R=["a","b","c","d"][parseInt(b.b)],X=f([ee([-2,-1,1,2]),0]);l.labela=p((a.O-a.A)%180+X+"°",l.s,l.x,a.O-a.A,"black",.7,!0),l.labelb=p((180-(a.O-a.A)+X)%180+"°",l.x,l.t,180-(a.O-a.A),"black",.7,!0),l.labelc=p((a.O-a.A+X)%180+"°",l.t,l.Ox,a.O-a.A,"black",.7,!0),l.labeld=p((180-(a.O-a.A)+X)%180+"°",l.Ox,l.s,180-(a.O-a.A),"black",.7,!0),e.labela=p((a.O-a.A)%180+"°",e.s,e.x,a.O-a.A,"black",.7,!0),e.labelb=p((180-(a.O-a.A))%180+"°",e.x,e.t,180-(a.O-a.A),"black",.7,!0),e.labelc=p((a.O-a.A)%180+"°",e.t,e.Ox,a.O-a.A,"black",.7,!0),e.labeld=p((180-(a.O-a.A))%180+"°",e.Ox,e.s,180-(a.O-a.A),"black",.7,!0),g.push(l[i],l.As,l.Ax,e[R],e.As,e.Ax,l["label"+i],e["label"+R]),g.forEach(h=>{s.push(h)});let r,c;switch(l[i].couleurDeRemplissage=o("red"),l.labela.color="red",l.labelb.color="red",l.labelc.color="red",l.labeld.color="red",e.labela.color="blue",e.labelb.color="blue",e.labelc.color="blue",e.labeld.color="blue",i+R){case"ab":case"ad":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="correspondants",c=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`;break;case"ac":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="correspondants";break;case"ba":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="correspondants",c=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`;break;case"bc":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="correspondants",c=`$180°-${n(e.labelc.texte,"blue")} = ${n(e.labelb.texte,"green")}$`;break;case"bd":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="correspondants";break;case"cb":case"cd":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="alternes-internes",c=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`;break;case"da":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="alternes-internes",c=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`;break;case"dc":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),c=`$180°-${n(e.labelc.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,r="alternes-internes";break}const m=U([...Object.keys(l).map(h=>l[h]),...Object.keys(e).map(h=>e[h])]);let u="Les droites rouges sont-elles parallèles ?<br>",d,x;X!==0?(x="mais pas",d="ne sont pas"):(x="et",d="sont");const $=Q(Object.assign({scale:.4},m),s)+`
          ${c!==void 0?c:"Les angles bleu et vert sont opposés par le sommet donc ils sont de même mesure.<br>"}
          Les angles rouge et vert sont ${r} ${H(x+" de même mesure")}.<br>
          Donc les droites rouges ${K(d+" parallèles")}.`;u+=Q(Object.assign({scale:.4},m),g),M={texte:u,texteCorr:$},k.push({texte:"Oui",statut:X===0}),k.push({texte:"Non",statut:X!==0});break}case 4:{const g=[],s=[];let a;do a=((V,J)=>({O:V,A:J,B:J,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,90));while(!(a.O-a.A<70&&a.O-a.A>30));let b;do b=((V,J)=>({a:V,b:J}))(D(0,3),D(0,3));while(!(b.a!==b.b&&(b.a!==2||b.b!==0)&&(b.a!==3||b.b!==1)));const t=w(0,0),l=I(q(E(w(1,0),t,a.O),t,a.r1),{O:a.O,A:a.A}),e=I(q(E(w(1,0),t,a.O+180),t,a.r2),{O:a.O,A:a.B});for(const j of["a","b","c","d"])l[j].couleurDeRemplissage=o("blue"),e[j].couleurDeRemplissage=o("blue"),l[j].opaciteDeRemplissage=.7,e[j].opaciteDeRemplissage=.7;const i=["a","b","c","d"][parseInt(b.a)],R=["a","b","c","d"][parseInt(b.b)];l.As.color=o("red"),e.As.color=o("red");const X=0;l.labela=p((a.O-a.A)%180+X+"°",l.s,l.x,a.O-a.A,"black",.7,!0),l.labelb=p((180-(a.O-a.A)+X)%180+"°",l.x,l.t,180-(a.O-a.A),"black",.7,!0),l.labelc=p((a.O-a.A+X)%180+"°",l.t,l.Ox,a.O-a.A,"black",.7,!0),l.labeld=p((180-(a.O-a.A)+X)%180+"°",l.Ox,l.s,180-(a.O-a.A),"black",.7,!0),e.labela=p((a.O-a.A)%180+"°",e.s,e.x,a.O-a.A,"black",.7,!0),e.labelb=p((180-(a.O-a.A))%180+"°",e.x,e.t,180-(a.O-a.A),"black",.7,!0),e.labelc=p((a.O-a.A)%180+"°",e.t,e.Ox,a.O-a.A,"black",.7,!0),e.labeld=p((180-(a.O-a.A))%180+"°",e.Ox,e.s,180-(a.O-a.A),"black",.7,!0),g.push(l[i],l.As,l.Ax,e[R],e.As,e.Ax,l["label"+i]),g.forEach(j=>{s.push(j)}),s.push(e["label"+R]);let r,c,m;switch(l[i].couleurDeRemplissage=o("red"),l.labela.color="red",l.labelb.color="red",l.labelc.color="red",l.labeld.color="red",e.labela.color="blue",e.labelb.color="blue",e.labelc.color="blue",e.labeld.color="blue",i+R){case"ab":e[i].couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="correspondants",c=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,m=e.labelb.texte;break;case"ac":e[i].couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="correspondants",m=e.labela.texte;break;case"ad":e[i].couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="correspondants",c=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,m=e.labeld.texte;break;case"ba":e[i].couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="correspondants",c=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`,m=e.labela.texte;break;case"bc":e[i].couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="correspondants",c=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labelc.texte,"green")}$`,m=e.labelc.texte;break;case"bd":e[i].couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="correspondants",m=e.labelb.texte;break;case"cb":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="alternes-internes",c=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,m=e.labelb.texte;break;case"cd":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),r="alternes-internes",c=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labeld.texte,"green")}$`,m=e.labeld.texte;break;case"da":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),r="alternes-internes",c=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`,m=e.labela.texte;break;case"dc":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),c=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labelc.texte,"green")}$`,r="alternes-internes",m=e.labelc.texte;break}const u=U([...Object.keys(l).map(j=>l[j]),...Object.keys(e).map(j=>e[j])]);let d="Sachant que les droites rouges sont parallèles, en déduire la mesure de l'angle bleu.";d+=this.interactif?"<br>":" Justifier.<br>";const x=Q(Object.assign({scale:.4},u),s)+`Les angles rouge et vert sont ${H(r)} et formés par des droites ${H("parallèles")}.<br>
          Donc ils sont ${H("de même mesure")}.<br>De plus,
          ${c!==void 0?c:" les angles bleu et vert sont opposés par le sommet donc ils sont de même mesure."}<br>
          L'angle bleu mesure donc $${n(m)}$.`;d+=Q(Object.assign({scale:.4},u),g),M={texte:d,texteCorr:x};const $=Number(m.slice(0,m.length-1)),h=180-$,A=Math.floor($/10),C=$%10,y=$%10===5?$+f([-1,1])*D(1,4):A*10+(10-C),B=180-y;k.push({texte:m,statut:!0}),k.push({texte:h.toString()+"°",statut:!1}),k.push({texte:y.toString()+"°",statut:!1}),k.push({texte:B.toString()+"°",statut:!1}),P={ordered:!1};break}case 6:{const g=[],s=[];let a;do a=((C,y,B)=>({O:C,A:y,B,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,90),D(-90,90));while(!(a.O-a.A>40&&a.O-a.A<140&&a.O-a.B>30&&a.O-a.B<140&&W(a.B-a.A)<20));const b=w(0,0),t=I(q(E(w(1,0),b,a.O),b,a.r1),{O:a.O,A:a.A}),l=I(q(E(w(1,0),b,a.O+180),b,a.r2),{O:a.O,A:a.B}),e=F(["A","B","C","D","E","F"],2);t.A.nom=e[0],l.A.nom=e[1];const i=F(["s","t","u","v","x","y"],6);t.S.nom=i[0],t.T.nom=i[1],t.X.nom=i[2],t.OX.nom=l.A.nom,l.S.nom=i[3],l.T.nom=i[4],l.OX.nom=i[5],l.X.nom=t.A.nom,["S A X".split(" "),"X A T".split(" "),"T A OX".split(" "),"OX A S".split(" ")].forEach(function(A,C){t[["a","b","c","d"][C]].nom="",l[["a","b","c","d"][C]].nom="";for(let y=0;y<3;y++)t[["a","b","c","d"][C]].nom+=t[A[y]].nom,l[["a","b","c","d"][C]].nom+=l[A[y]].nom}),Math.abs(a.A)>70&&(t.S.positionLabel="left",t.T.positionLabel="left"),Math.abs(a.B)>70&&(l.S.positionLabel="left",l.T.positionLabel="left"),Math.abs(a.O)>70&&(t.X.positionLabel="left",l.OX.positionLabel="left");for(const A of["a","b","c","d"])t[A].couleurDeRemplissage=o("blue"),t[A].opaciteDeRemplissage=.4,l[A].opaciteDeRemplissage=.7;const X=f([f(["aa","bb","cc","dd"]),f(["ca","db"])]),r=X[0],c=X[1];g.push(t[r],t.As,t.Ax,l.As,l.Ax);const m=U([...Object.keys(t).map(A=>t[A]),...Object.keys(l).map(A=>l[A])],{rzoom:1.5});g.forEach(A=>{s.push(A)});const u=l[c];u.couleurDeRemplissage=o("#f15929"),s.push(u);const d=te(["green","red","blue","gray"]);l.a.couleurDeRemplissage=o(d[0]),l.b.couleurDeRemplissage=o(d[1]),l.c.couleurDeRemplissage=o(d[2]),l.d.couleurDeRemplissage=o(d[3]);let x;r===c?x="correspondant":(r+c==="ca"||r+c==="db")&&(x="alterne-interne");let $;if(this.interactif){$=`Quel est l'angle ${x} à l'angle marqué en bleu ?<br>`;for(const A of["a","b","c","d"])g.push(l[A]);g.push(p("1",l.s,l.x,a.O-a.A,"black",.4,!0)),g.push(p("2",l.x,l.t,180-(a.O-a.A),"black",.4,!0)),g.push(p("3",l.t,l.Ox,a.O-a.A,"black",.4,!0)),g.push(p("4",l.Ox,l.s,180-(a.O-a.A),"black",.4,!0))}else $=`Marquer en rouge l'angle ${x} à l'angle marqué en bleu.<br>`;const h=Q(Object.assign({scale:.4},m),s);$+=Q(Object.assign({scale:.4},m),g),M={texte:$,texteCorr:h},k.push({texte:1,statut:c==="a"}),k.push({texte:2,statut:c==="b"}),k.push({texte:3,statut:c==="c"}),k.push({texte:4,statut:c==="d"});break}case 7:{const g=[],s=[];let a;do a=((h,A,C)=>({O:h,A,B:C,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,90),D(-90,90));while(!(a.O-a.A>40&&a.O-a.A<140&&a.O-a.B>30&&a.O-a.B<140&&W(a.B-a.A)<20));const b=w(0,0),t=I(q(E(w(1,0),b,a.O),b,a.r1),{O:a.O,A:a.A}),l=I(q(E(w(1,0),b,a.O+180),b,a.r2),{O:a.O,A:a.B}),e=F(["A","B","C","D","E","F"],2);t.A.nom=e[0],l.A.nom=e[1];const i=F(["s","t","u","v","x","y"],6);t.S.nom=i[0],t.T.nom=i[1],t.X.nom=i[2],t.OX.nom=l.A.nom,l.S.nom=i[3],l.T.nom=i[4],l.OX.nom=i[5],l.X.nom=t.A.nom,["S A X".split(" "),"X A T".split(" "),"T A OX".split(" "),"OX A S".split(" ")].forEach(function($,h){t[["a","b","c","d"][h]].nom="",l[["a","b","c","d"][h]].nom="";for(let A=0;A<3;A++)t[["a","b","c","d"][h]].nom+=t[$[A]].nom,l[["a","b","c","d"][h]].nom+=l[$[A]].nom}),Math.abs(a.A)>70&&(t.S.positionLabel="left",t.T.positionLabel="left"),Math.abs(a.B)>70&&(l.S.positionLabel="left",l.T.positionLabel="left"),Math.abs(a.O)>70&&(t.X.positionLabel="left",l.OX.positionLabel="left");for(const $ of["a","b","c","d"])t[$].couleurDeRemplissage=o("blue"),t[$].opaciteDeRemplissage=.7,l[$].couleurDeRemplissage=o("blue"),l[$].opaciteDeRemplissage=.7;const X=f([f(["aa","bb","cc","dd"]),f(["ca","db"])]),r=X[0],c=X[1];g.push(t.As,t.Ax,l.As,l.Ax,S(t.S),S(t.T),S(t.X),S(l.S),S(l.T),S(l.OX),S(t.A),S(l.A));const m=U([...Object.keys(t).map($=>t[$]),...Object.keys(l).map($=>l[$])],{rzoom:1.5});g.forEach($=>{s.push($)}),l[c].couleurDeRemplissage=o("#f15929"),s.push(l[c]),s.push(t[r]);let u;r===c?u="correspondant":(r+c==="ca"||r+c==="db")&&(u="alterne-interne");let d=`Quel est l'angle ${u} à l'angle $\\widehat{${t[r].nom}}$ ?<br>`,x=Q(Object.assign({scale:.4},m),s);x+=`L'angle ${u} à l'angle $${n("\\widehat{"+t[r].nom+"}","blue")}$ est $${n("\\widehat{"+l[c].nom+"}")}$.`,d+=Q(Object.assign({scale:.4},m),g),M={texte:d,texteCorr:x},k.push({texte:`$\\widehat{${l.a.nom}}$`,statut:l[c].nom===l.a.nom}),k.push({texte:`$\\widehat{${l.b.nom}}$`,statut:l[c].nom===l.b.nom}),k.push({texte:`$\\widehat{${l.c.nom}}$`,statut:l[c].nom===l.c.nom}),k.push({texte:`$\\widehat{${l.d.nom}}$`,statut:l[c].nom===l.d.nom});break}case 3:{const g=[],s=[];let a;do a=((j,V)=>({O:j,A:V,B:V,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,90));while(!(a.O-a.A<70&&a.O-a.A>30));let b;do b=((j,V)=>({a:j,b:V}))(D(0,3),D(0,3));while(!(b.a!==b.b&&(b.a!==2||b.b!==0)&&(b.a!==3||b.b!==1)));const t=w(0,0),l=I(q(E(w(1,0),t,a.O),t,a.r1),{O:a.O,A:a.A}),e=I(q(E(w(1,0),t,a.O+180),t,a.r2),{O:a.O,A:a.B}),i=F(["A","B","C","D","E","F"],2);l.A.nom=i[0],e.A.nom=i[1];const R=F(["s","t","u","v","x","y"],6);l.S.nom=R[0],l.T.nom=R[1],l.X.nom=R[2],l.OX.nom=e.A.nom,e.S.nom=R[3],e.T.nom=R[4],e.OX.nom=R[5],e.X.nom=l.A.nom,["S A X".split(" "),"X A T".split(" "),"T A OX".split(" "),"OX A S".split(" ")].forEach(function(B,j){l[["a","b","c","d"][j]].nom="",e[["a","b","c","d"][j]].nom="";for(let V=0;V<3;V++)l[["a","b","c","d"][j]].nom+=l[B[V]].nom,e[["a","b","c","d"][j]].nom+=e[B[V]].nom}),Math.abs(a.A)>70&&(l.S.positionLabel="left",l.T.positionLabel="left"),Math.abs(a.B)>70&&(e.S.positionLabel="left",e.T.positionLabel="left"),Math.abs(a.O)>70&&(l.X.positionLabel="left",e.OX.positionLabel="left");for(const B of["a","b","c","d"])l[B].couleurDeRemplissage=o("blue"),l[B].opaciteDeRemplissage=.4,e[B].couleurDeRemplissage=o("blue"),e[B].opaciteDeRemplissage=.4;const r=["a","b","c","d"][parseInt(b.a)],c=["a","b","c","d"][parseInt(b.b)],m=f([ee([-2,-1,1,2]),0]);l.labela=p((a.O-a.A)%180+m+"°",l.s,l.x,a.O-a.A,"black",.7,!0),l.labelb=p((180-(a.O-a.A)+m)%180+"°",l.x,l.t,180-(a.O-a.A),"black",.7,!0),l.labelc=p((a.O-a.A+m)%180+"°",l.t,l.Ox,a.O-a.A,"black",.7,!0),l.labeld=p((180-(a.O-a.A)+m)%180+"°",l.Ox,l.s,180-(a.O-a.A),"black",.7,!0),e.labela=p((a.O-a.A)%180+"°",e.s,e.x,a.O-a.A,"black",.7,!0),e.labelb=p((180-(a.O-a.A))%180+"°",e.x,e.t,180-(a.O-a.A),"black",.7,!0),e.labelc=p((a.O-a.A)%180+"°",e.t,e.Ox,a.O-a.A,"black",.7,!0),e.labeld=p((180-(a.O-a.A))%180+"°",e.Ox,e.s,180-(a.O-a.A),"black",.7,!0),g.push(l[r],l.As,l.Ax,e[c],e.As,e.Ax,l["label"+r],e["label"+c],S(l.S),S(l.T),S(l.X),S(e.S),S(e.T),S(e.OX),S(l.A),S(e.A)),g.forEach(B=>{s.push(B)});let u,d;switch(l[r].couleurDeRemplissage=o("red"),l.labela.color="red",l.labelb.color="red",l.labelc.color="red",l.labeld.color="red",e.labela.color="blue",e.labelb.color="blue",e.labelc.color="blue",e.labeld.color="blue",r+c){case"ab":case"ad":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="correspondants",d=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`;break;case"ac":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="correspondants";break;case"ba":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="correspondants",d=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`;break;case"bc":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="correspondants",d=`$180°-${n(e.labelc.texte,"blue")} = ${n(e.labelb.texte,"green")}$`;break;case"bd":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="correspondants";break;case"cb":case"cd":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="alternes-internes",d=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`;break;case"da":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="alternes-internes",d=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`;break;case"dc":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),d=`$180°-${n(e.labelc.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,u="alternes-internes";break}const x=U([...Object.keys(l).map(B=>l[B]),...Object.keys(e).map(B=>e[B])]);let $=`Les droites $(${l.S.nom}${l.T.nom})$ et $(${e.S.nom}${e.T.nom})$ sont-elles parallèles ?<br>`,h,A;m!==0?(A="mais pas",h="ne sont pas"):(A="et",h="sont");const C=u!=="alternes-internes"?e[r].nom:r==="c"?e.a.nom:e.b.nom,y=Q(Object.assign({scale:.4},x),s)+`${d!==void 0?d:`Les angles $\\widehat{${e[r].nom}}$ et $\\widehat{${e[c].nom}}$ sont opposés par le sommet, donc ils sont de même mesure.`}<br>
          Donc les angles $${n("\\widehat{"+l[r].nom+"}","red")}$ et $${n("\\widehat{"+C+"}","green")}$ sont ${u} ${H(A+" de même mesure")}.<br>
          Donc les droites $(${l.S.nom}${l.T.nom})$ et $(${e.S.nom}${e.T.nom})$ ${K(h+" parallèles")}.`;$+=Q(Object.assign({scale:.4},x),g),M={texte:$,texteCorr:y},k.push({texte:"Oui",statut:m===0}),k.push({texte:"Non",statut:m!==0});break}case 5:{const g=[],s=[];let a;do a=((G,N)=>({O:G,A:N,B:N,r1:f([1.5,2]),r2:f([1.5,2])}))(D(0,90),D(-90,90));while(!(a.O-a.A<70&&a.O-a.A>30));let b;do b=((G,N)=>({a:G,b:N}))(D(0,3),D(0,3));while(!(b.a!==b.b&&(b.a!==2||b.b!==0)&&(b.a!==3||b.b!==1)));const t=w(0,0),l=I(q(E(w(1,0),t,a.O),t,a.r1),{O:a.O,A:a.A}),e=I(q(E(w(1,0),t,a.O+180),t,a.r2),{O:a.O,A:a.B}),i=F(["A","B","C","D","E","F"],2);l.A.nom=i[0],e.A.nom=i[1];const R=F(["s","t","u","v","x","y"],6);l.S.nom=R[0],l.T.nom=R[1],l.X.nom=R[2],l.OX.nom=e.A.nom,e.S.nom=R[3],e.T.nom=R[4],e.OX.nom=R[5],e.X.nom=l.A.nom,["S A X".split(" "),"X A T".split(" "),"T A OX".split(" "),"OX A S".split(" ")].forEach(function(v,G){l[["a","b","c","d"][G]].nom="",e[["a","b","c","d"][G]].nom="";for(let N=0;N<3;N++)l[["a","b","c","d"][G]].nom+=l[v[N]].nom,e[["a","b","c","d"][G]].nom+=e[v[N]].nom}),Math.abs(a.A)>70&&(l.S.positionLabel="left",l.T.positionLabel="left"),Math.abs(a.B)>70&&(e.S.positionLabel="left",e.T.positionLabel="left"),Math.abs(a.O)>70&&(l.X.positionLabel="left",e.OX.positionLabel="left");for(const v of["a","b","c","d"])l[v].couleurDeRemplissage=o("blue"),l[v].opaciteDeRemplissage=.4,e[v].couleurDeRemplissage=o("blue"),e[v].opaciteDeRemplissage=.4;const r=["a","b","c","d"][parseInt(b.a)],c=["a","b","c","d"][parseInt(b.b)],m=0;l.labela=p((a.O-a.A)%180+m+"°",l.s,l.x,a.O-a.A,"black",.7,!0),l.labelb=p((180-(a.O-a.A)+m)%180+"°",l.x,l.t,180-(a.O-a.A),"black",.7,!0),l.labelc=p((a.O-a.A+m)%180+"°",l.t,l.Ox,a.O-a.A,"black",.7,!0),l.labeld=p((180-(a.O-a.A)+m)%180+"°",l.Ox,l.s,180-(a.O-a.A),"black",.7,!0),e.labela=p((a.O-a.A)%180+"°",e.s,e.x,a.O-a.A,"black",.7,!0),e.labelb=p((180-(a.O-a.A))%180+"°",e.x,e.t,180-(a.O-a.A),"black",.7,!0),e.labelc=p((a.O-a.A)%180+"°",e.t,e.Ox,a.O-a.A,"black",.7,!0),e.labeld=p((180-(a.O-a.A))%180+"°",e.Ox,e.s,180-(a.O-a.A),"black",.7,!0),g.push(l[r],l.As,l.Ax,e.As,e.Ax,l["label"+r],S(l.S),S(l.T),S(l.X),S(e.S),S(e.T),S(e.OX),S(l.A),S(e.A)),g.forEach(v=>{s.push(v)}),s.push(e["label"+c]),s.push(e[c]);let u,d,x;switch(l[r].couleurDeRemplissage=o("red"),l.labela.color="red",l.labelb.color="red",l.labelc.color="red",l.labeld.color="red",e.labela.color="blue",e.labelb.color="blue",e.labelc.color="blue",e.labeld.color="blue",r+c){case"ab":e[r].couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="correspondants",d=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,x=e.labelb.texte;break;case"ac":e[r].couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="correspondants",x=e.labela.texte;break;case"ad":e[r].couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="correspondants",d=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,x=e.labeld.texte;break;case"ba":e[r].couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="correspondants",d=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`,x=e.labela.texte;break;case"bc":e[r].couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="correspondants",d=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labelc.texte,"green")}$`,x=e.labelc.texte;break;case"bd":e[r].couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="correspondants",x=e.labelb.texte;break;case"cb":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="alternes-internes",d=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labelb.texte,"green")}$`,x=e.labelb.texte;break;case"cd":e.a.couleurDeRemplissage=o("green"),e.labela.color="green",s.push(e.labela,e.a),u="alternes-internes",d=`$180°-${n(e.labela.texte,"blue")} = ${n(e.labeld.texte,"green")}$`,x=e.labeld.texte;break;case"da":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),u="alternes-internes",d=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labela.texte,"green")}$`,x=e.labela.texte;break;case"dc":e.b.couleurDeRemplissage=o("green"),e.labelb.color="green",s.push(e.labelb,e.b),d=`$180°-${n(e.labelb.texte,"blue")} = ${n(e.labelc.texte,"green")}$`,u="alternes-internes",x=e.labelc.texte;break}const $=U([...Object.keys(l).map(v=>l[v]),...Object.keys(e).map(v=>e[v])]);let h=`Sachant que les droites $(${l.S.nom}${l.T.nom})$ et $(${e.S.nom}${e.T.nom})$ sont parallèles, en déduire la mesure de l'angle $\\widehat{${e[c].nom}}$.<br>`;const A=u!=="alternes-internes"?e[r].nom:r==="c"?e.a.nom:e.b.nom;let C=Q(Object.assign({scale:.4},$),s);C+=`Les angles $${n("\\widehat{"+l[r].nom+"}","red")}$ et $${n("\\widehat{"+A+"}","green")}$ sont ${H(u)} et formés par des droites ${H("parallèles")}.
          Donc ils sont ${H("de même mesure")}.<br>
          De plus,${d!==void 0?d:` les angles $\\widehat{${e[r].nom}}$ et $\\widehat{${e[c].nom}}$ et vert sont opposés par le sommet.<br> Donc ils sont de même mesure.`}<br>
          Donc l'angle $${n("\\widehat{"+e[c].nom+"}","blue")}$ mesure $${n(x)}$.`,h+=Q(Object.assign({scale:.4},$),g),M={texte:h,texteCorr:C};const y=Number(x.slice(0,x.length-1)),B=180-y,j=Math.floor(y/10),V=y%10,J=y%10===5?y+f([-1,1])*D(1,4):j*10+(10-V),le=180-J;k.push({texte:x,statut:!0}),k.push({texte:B.toString()+"°",statut:!1}),k.push({texte:J.toString()+"°",statut:!1}),k.push({texte:le.toString()+"°",statut:!1}),P={ordered:!1};break}}if(this.questionJamaisPosee(L,M.texte)){this.autoCorrection[L]={enonce:M.texte,propositions:k,options:P};const g=oe(this,L);this.interactif&&(M.texte=M.texte+g.texte),this.listeQuestions[L]=M.texte,this.listeCorrections[L]=M.texteCorr,L++}z++}ne(this)}}export{ke as amcReady,Re as amcType,De as dateDeModifImportante,fe as dateDePublication,Ee as default,Se as interactifReady,Xe as interactifType,Te as refs,he as titre,je as uuid};
