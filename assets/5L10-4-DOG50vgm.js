import{r as F,a as N,p as C,A as M,o as U,m as h,e as i,aq as v,l as V}from"./embellissements-BYV7mIDn.js";import{E as w}from"./Exercice-DtXhjCyI.js";import{t as B}from"./tableau-nuZmVTHQ.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";import"./AjouteTableauMathlive-Bz24QHd3.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";/* empty css                   */const xe="Produire une formule à partir d'un tableau",de="7aba6",be={"fr-fr":["5L10-4","BP2AutoJ2"],"fr-ch":["10FA1-9"]};function f(A,x){return x===1?"":A}class he extends w{constructor(){super(),this.besoinFormulaireNumerique=["Niveau de difficulté",2,`1 : Les mêmes unités
2 : Unités différentes`],this.sup=1,this.nbQuestions=1,this.spacing=3,this.spacingCorr=2.5}nouvelleVersion(){for(let x=0,P,E,q=0;x<this.nbQuestions&&q<50;){const c=F(3,7),u=c+1,m=u*2,a=u*3,p=N(["L"]);let b,g;const $=F(3,7);let e,d,o,L,t,n,l,Q;this.sup===1?(e=N([["cm","cm"],["m","m"]]),d=[`${c}`,`${u}`,`${m}`,`${a}`],o=[c,u,m,a],L=[`${$}`,"","",""],t=[`${$}`,"","",""],n=e[0],l=e[1],b=p,g="2"+p,Q="Les unités sont les mêmes, donc il n'est pas nécessaire de convertir."):(e=N([["cm","m"],["m","cm"]]),e[0]==="cm"&&(d=[`${c}`,`${u}`,`${m}`,`${a}`],o=[c,u,m,a],L=[`${$}\\times 100`,"","",""],t=[100*$,void 0,void 0,void 0],n=e[0],l=e[0],b=p,g="2"+p),e[0]==="m"&&(d=[`${c}\\times 100`,`${u}\\times 100`,`${m}\\times 100`,`${a}\\times 100`],o=[c*100,u*100,m*100,a*100],L=[`${$}`,"","",""],t=[$,void 0,void 0,void 0],n=e[1],l=e[1],b=p+"\\times 100",g="200"+p),Q="Les unités sont différentes. Donc, pour plus de confort, nous pouvons les convertir dans la même unité, ici en cm.");const J={xmin:-5,ymin:-3,xmax:5,ymax:3,pixelsParCm:20,scale:.5},O=C(-4,2),S=C(-4,-2),T=C(4,-2),_=C(4,2),j=[M(O,S,T,_)],k=U(J,j),s=[{unites:e,coteConnu:$,coteInconnu:p,tableau:B([`\\text{Longueur $${p}$ du côté (en ${e[0]})}`,`\\phantom{000}${c}\\phantom{000}`,`\\phantom{000}${u}\\phantom{000}`,`\\phantom{000}${m}\\phantom{000}`,`\\phantom{000}${a}\\phantom{000}`],[`\\text{Périmètre du rectangle (en $${e[1]}$)}`],["","","",""]),calculL1:`$\\text{Pour } ${c} \\text{ ${e[0]} : } 2\\times {\\color{blue}{${$} \\text{ ${e[1]}}}} +2\\times {\\color{green}{${c}\\text{ ${e[0]}}}} ${f(`=2\\times {\\color{blue}{${t[0]} \\text{ ${l}}}} +2\\times {\\color{green}{${i(o[0])} \\text{ ${n}}}}`,this.sup)} = ${i(2*t[0]+2*o[0])} \\text{ ${n}}$.`,calculL2:`$\\text{Pour } ${u} \\text{ ${e[0]} : } 2\\times {\\color{blue}{${$} \\text{ ${e[1]}}}} +2\\times {\\color{green}{${u}\\text{ ${e[0]}}}} ${f(`=2\\times {\\color{blue}{${t[0]} \\text{ ${l}}}} +2\\times {\\color{green}{${i(o[1])} \\text{ ${n}}}}`,this.sup)} = ${i(2*t[0]+2*o[1])} \\text{ ${n}}$.`,calculL3:`$\\text{Pour } ${m} \\text{ ${e[0]} : } 2\\times {\\color{blue}{${$} \\text{ ${e[1]}}}} +2\\times {\\color{green}{${m}\\text{ ${e[0]}}}} ${f(`=2\\times {\\color{blue}{${t[0]} \\text{ ${l}}}} +2\\times {\\color{green}{${i(o[2])} \\text{ ${n}}}}`,this.sup)} = ${i(2*t[0]+2*o[2])} \\text{ ${n}}$.`,calculL4:`$\\text{Pour } ${a} \\text{ ${e[0]} : } 2\\times {\\color{blue}{${$} \\text{ ${e[1]}}}} +2\\times {\\color{green}{${a}\\text{ ${e[0]}}}} ${f(`=2\\times {\\color{blue}{${t[0]} \\text{ ${l}}}} +2\\times {\\color{green}{${i(o[3])} \\text{ ${n}}}}`,this.sup)} = ${i(2*t[0]+2*o[3])} \\text{ ${n}}$.`,tableau_corr:B([`\\text{Longueur $${b}$ du côté (en ${n})}`,`\\phantom{0}${d[0]}\\phantom{0}`,`\\phantom{0}${d[1]}\\phantom{0}`,`\\phantom{0}${d[2]}\\phantom{0}`,`\\phantom{0}${d[3]}\\phantom{0}`],[`\\text{Périmètre du rectangle (en ${l})}`],[`${h(i(2*t[0]+2*o[0]))}`,`${h(i(2*t[0]+2*o[1]))}`,`${h(i(2*t[0]+2*o[2]))}`,`${h(i(2*t[0]+2*o[3]))}`]),secondeQ:`2\\times {\\color{blue}{${$} \\text{ ${e[1]}}}} +2\\times {\\color{green}{${p} \\text{ ${e[0]}}}} ${f(`=2\\times {\\color{blue}{${t[0]} \\text{ ${l}}}} +2\\times {\\color{green}{${b} \\text{ ${n}}}}`,this.sup)} = ${h(`${i(2*t[0])} + ${g}`)} \\text{ exprimé en ${n}.}`,intro:Q,fig:k}],I=[];let y=0,D=0;for(let r=0;r<s.length;r++)I.push({enonce:`
On considère un rectangle comme ci-dessous dont l'un des côtés mesure $${s[r].coteConnu}$ $${e[1]}$ et l'autre mesure $${s[r].coteInconnu}$ $${e[0]}$.<br>
${s[r].fig}

${v(y++)} Compléter le tableau suivant :<br>
${s[r].tableau}

${v(y++)} Quelle formule permet de calculer le périmètre de ce rectangle en fonction de $${s[r].coteInconnu}$ ?
`,question:"",correction:`
${v(D++)} ${s[r].intro}<br>
Il y a plusieurs façons de calculer le périmètre d'un rectangle, par exemple : <br> $2\\times largeur + 2\\times Longueur$.<br>
Ici, l'un des côtés mesure toujours $\\color{blue}{${L[0]}} \\text{ ${l}}$.<br>
Calculons les périmètres pour chacune des valeurs données :<br>
${s[r].calculL1}<br>
${s[r].calculL2}<br>
${s[r].calculL3}<br>
${s[r].calculL4}<br>
Nous pouvons alors remplir le tableau.<br>
${s[r].tableau_corr}<br>
${v(D++)} On peut généraliser le raisonnement des calculs du périmètre, et ainsi obtenir une formule.<br>
$${s[r].secondeQ}$

`});P=`${I[0].enonce}`,E=`${I[0].correction}`,this.questionJamaisPosee(x,P)&&(this.listeQuestions[x]=P,this.listeCorrections[x]=E,x++),q++}V(this)}}export{he as default,be as refs,xe as titre,de as uuid};
