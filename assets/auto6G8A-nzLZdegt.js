import{c as X,g as N,r as I,p as Y,bG as E,bO as e,b_ as Q,bZ as D,bQ as s,bS as T,dp as v,k as R,bT as w,a as O,T as B,aa as J,G as V,o as _,D as z,l as H}from"./embellissements-BYV7mIDn.js";import{b as K,c as U}from"./projections3d-CDky-CLD.js";import{b as q,c as G,d as A,a as W}from"./solides-Bdh-0xDW.js";import{s as tt}from"./gestionInteractif-DujZpSu8.js";import{p as et}from"./qcm-BQR8Ns0N.js";import{b as st}from"./questionMathLive-DdRvWqlN.js";import{E as ot}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./aleatoires-BLhzzHLc.js";import"./dateEtHoraires-yqKtvK1K.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./index-BUDQz6-w.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"seedrandom";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"./AjouteTableauMathlive-Bz24QHd3.js";const Et="Reconnaitre des solides",Gt="24/09/2022",Zt="08/05/2023",Xt=!0,Yt=["qcm","mathLive"],wt=!0,At="qcmMono",Ft={"fr-fr":["auto6G8A","3AutoG07-1"],"fr-2016":["6G44-1"],"fr-ch":["9ES7-8","10ES1-1","11ES1-1"]},Lt="051aa";class Nt extends ot{constructor(){super(),this.nbQuestions=5,this.nbCols=4,this.sup="8",this.sup2=!1,this.besoinFormulaireTexte=["Type de solides",["Nombres séparés par des tirets  :","1 : Prisme","2 : Pyramide","3 : Cône","4 : Cylindre","5 : Pavé","6 : Cube","7 : Sphère","8 : Mélange"].join(`
`)],this.besoinFormulaire2CaseACocher=["QCM"]}nouvelleVersion(){const F=["prisme","pyramide","cône","cylindre","pavé droit","cube","sphère"];this.interactifType=this.sup2?"qcm":"mathLive",this.consigne=this.nbQuestions===1||X.vue==="diap"?"Donner le nom de ce solide.":"Donner le nom de chacun des solides.";const L=N({max:7,defaut:8,nbQuestions:this.nbQuestions*50,melange:8,saisie:this.sup}).map(l=>Number(l));for(let l=0,$=0;l<this.nbQuestions&&$<50;$++){const g=L[$];X.anglePerspective=30;const f=[];let y,P=g===1?I(1,2):g>1&&g<=5?I(1,3):0;const m=g<3?I(3,8):g===5||g===6?4:0;let j,S,d,M,C,Z,k="",x="";const h=F[g-1];switch(h){case"prisme":case"pyramide":{const o=[],c=[],a=[],r=Math.PI*2/m;for(let n=0;n<m;n++)o.push(e(2*Math.cos(r*n),2*Math.sin(r*n),0)),c.push(e(2*Math.cos(r*n),5,2*Math.sin(r*n),!0)),a.push(e(-1,2*Math.cos(r*n),2*Math.sin(r*n)));let t,i,u;if(P===2){if(m===4){const n=[];for(let b=0;b<a.length;b++)n.push(Q(a[b],D(e(0,0,0),s(1,0,0)),0+(b===0?30:b===1?-30:0),"red"));a.length=0,a.push(...n)}t=T(...a),i=s(3,0,0),u=e(3,0,0)}else{if(m===4){const n=[];for(let b=0;b<o.length;b++)n.push(Q(o[b],D(e(0,0,0),s(0,0,1)),0+(b===0?30:b===1?-30:0),"red"));o.length=0,o.push(...n)}t=T(...o),i=s(0,0,3),u=e(0,0,3)}if(h==="prisme")j=q(t,i),f.push(...j.c2d),k=`Prisme droit avec une base ayant $${j.base1.listePoints.length}$ sommets.`;else{S=W(t,u);const n=S.c2d;f.push(...n),k=`Pyramide avec une base ayant $${S.base.listePoints.length}$ sommets.`}}x=h==="prisme"?["prisme","prisme droit"]:"pyramide";break;case"cône":{if(P===3)d=A(e(0,0,0),e(0,-7,0),s(Math.cos(30*Math.PI/180),0,Math.sin(30*Math.PI/180)),"black",!0,"black","white"),f.push(...d.c2d);else if(P===2)d=A(e(0,0,0),e(3,0,0),s(0,Math.cos(60*Math.PI/180),Math.sin(60*Math.PI/180)),"black",!0,"black","white"),f.push(...d.c2d);else{d=U({centre:Y(0,0),rx:I(15,30)/10,hauteur:O([3,4,5])});const o=B(d.centre),c=J(R(d.centre,d.sommet),V(d.centre,d.sommet),1.5);c.pointilles=2,f.push(d,c,o)}x=["cône","cone","cône de révolution","cone de révolution"],k="Cône de révolution";break}case"cylindre":if(P===3){M=G(e(0,0,2),e(0,-3,2),s(1,0,0),s(1,0,0));const o=v(e(0,3,1),s(0,-1,0),s(1,0,0),"caché","black",110,280),c=v(e(0,3,1),s(0,-1,0),s(1,0,0),"visible","black",280,470),a=v(e(0,-.5,1),s(0,-1,0),s(1,0,0),"caché","black",110,280),p=v(e(0,-.5,1),s(0,-1,0),s(1,0,0),"visible","black",280,470),r=[];for(let t=0;t<o.listePoints.length;t+=2){const i=R(a.listePoints[t],o.listePoints[t]);i.pointilles=2,i.opacite=.3,r.push(i)}for(let t=0;t<c.listePoints.length;t+=2){const i=R(p.listePoints[t],c.listePoints[t]);i.opacite=.6,r.push(i)}a.pointilles=0,a.opacite=1,M.c2d=[],M.c2d.push(o,c,a,p,...r,w(e(0,4,1),e(0,-4,1),"red",!1).c2d)}else if(P===2){M=G(e(0,0,0),e(3,0,0),s(0,1,0),s(0,1,0));const o=v(e(0,0,1),s(1,0,0),s(0,1,0),"visible","black",90,270),c=v(e(0,0,1),s(1,0,0),s(0,1,0),"caché","black",270,450),a=v(e(3,0,1),s(1,0,0),s(0,1,0),"visible","black",90,270),p=v(e(3,0,1),s(1,0,0),s(0,1,0),"caché","black",270,450),r=[];for(let t=0;t<o.listePoints.length;t+=2){const i=R(a.listePoints[t],o.listePoints[t]);i.opacite=.6,r.push(i)}for(let t=0;t<c.listePoints.length;t+=2){const i=R(p.listePoints[t],c.listePoints[t]);i.pointilles=2,i.opacite=.3,r.push(i)}p.pointilles=0,p.opacite=1,M.c2d=[],M.c2d.push(o,c,a,p,...r,w(e(-1,0,1),e(4,0,1),"red",!1).c2d)}else M=G(e(0,0,0),e(0,0,3),s(2,0,0),s(2,0,0));f.push(...M.c2d),x=["cylindre","cylindre de révolution"],k=E(h)+" de révolution.";break;case"pavé droit":case"cube":{h==="cube"&&(P=2);const o=[],c=[],a=[],p=2,r=Math.PI*2/m;for(let t=0;t<m;t++)o.push(e(p*Math.cos(r*t),p*Math.sin(r*t),0,!(t>0&&t<=m/2-.1))),c.push(e(p*Math.cos(r*t),5,p*Math.sin(r*t),!0)),a.push(e(-1,p*Math.cos(r*t),p*Math.sin(r*t),!(t===0||m>6&&t===m-1||m>6&&t===1||m===6&&t===5)));if(P===3){const t=[];for(let n=0;n<o.length;n++)t.push(Q(c[n],D(e(0,0,0),s(0,1,0)),-45,"red"));c.length=0,c.push(...t);const i=T(...c),u=s(0,-6,0);C=q(i,u)}else if(P===2){const t=[];for(let u=0;u<a.length;u++)t.push(Q(a[u],D(e(0,0,0),s(1,0,0)),-45,"red"));a.length=0,a.push(...t);const i=T(...a);if(h==="cube"){const u=s(3,0,0);C=q(i,u)}else C=q(i,s(5,0,0))}else{const t=[];for(let n=0;n<o.length;n++)t.push(Q(o[n],D(e(0,0,0),s(0,0,1)),0,"red"));o.length=0,o.push(...t);const i=T(...o),u=s(0,0,3);C=q(i,u)}f.push(...C.c2d),x=h,y=h,k=E(h)+".";break}case"sphère":Z=K({centre:Y(0,0),rx:2,color:"black"}),f.push(Z),x=h,k=E(h)+".";break}this.questionJamaisPosee(l,g,m,P)&&(y=h,this.sup2&&(x=h),this.question=_(Object.assign({},z(f),{scale:.5,style:"margin: auto"}),...f.flat()),this.autoCorrection[l]={},this.autoCorrection[l].options={},this.autoCorrection[l].enonce=`${this.question}
`,this.autoCorrection[l].propositions=[{texte:"Prisme",statut:y==="prisme"},{texte:"Pyramide",statut:y==="pyramide"},{texte:"Cône",statut:y==="cône"},{texte:"Cylindre",statut:y==="cylindre"},{texte:"Pavé",statut:y==="pavé droit"},{texte:"Cube",statut:y==="cube"},{texte:"Sphère",statut:y==="sphère"}],this.sup2?this.question+=et(this,l).texte:(tt(this,l,x,{formatInteractif:"ignorerCasse"}),this.question+="<br>"+st(this,l)),this.listeQuestions[l]=this.question,this.listeCorrections[l]=k,l++)}H(this)}}export{wt as amcReady,At as amcType,Zt as dateDeModifImportante,Gt as dateDePublication,Nt as default,Xt as interactifReady,Yt as interactifType,Ft as refs,Et as titre,Lt as uuid};
