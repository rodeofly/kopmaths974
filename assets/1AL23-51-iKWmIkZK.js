import{a as u}from"./etudeFonction-BXXWUyni.js";import{r as a,aq as r,l as m}from"./embellissements-BYV7mIDn.js";import{T as f}from"./Trinome-CS3WnuMQ.js";import{E as x}from"./Exercice-DtXhjCyI.js";import"./Matrice-C65I2nuw.js";import"mathjs";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./index-BUDQz6-w.js";import"decimal.js";import"./Hms-u2AUyU1C.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"seedrandom";const V="Étude complète de paraboles",I=!1,T="27/10/2022",A="5/11/2023",_="e6718",j={"fr-fr":["1AL23-51"],"fr-ch":["1mF3-8"]};class k extends x{constructor(){super(),this.nbQuestions=1,this.nbQuestionsModifiable=!1}nouvelleVersion(){const $=a(-4,4,[-1,0,1]),o=a(-5,5,0),c=o+2*a(1,4,-o),e=new f(0,0,0);e.defFormeFactorisee($,o,c);let n=`Dans le plan rapporté à un repère, on considère la parabole $(P)$ d'équation $y=${e.tex}$.`;n+=`<br><br>${r(0)} Déterminer la forme canonique de $f(x) = ${e.tex}$.`,n+=`<br><br>${r(1)} En déduire les coordonnées du sommet de la parabole et les variations de la fonction $f$ associée au polynôme $(P)$.`;let i=`${r(0)} On cherche la forme canonique de $${e.tex}$ avec $a=${e.a.simplifie().texFraction}$, $b=${e.b.simplifie().texFraction}$ et $c=${e.c.simplifie().texFraction}$.`;i+="<br><br> On sait que $f(x)=a(x-\\alpha)^2+\\beta$ avec $\\alpha = \\dfrac{-b}{2a}$ et $\\beta=f(\\alpha)$.",i+=`<br><br> $\\alpha = \\dfrac{-b}{2a}=\\dfrac{${e.b.simplifie().oppose().texFraction}}{${e.a.multiplieEntier(2).simplifie().texFraction}}=${e.alpha.simplifie().texFraction}$`,i+=`<br><br> $\\beta = f(\\alpha) = f\\left(${e.alpha.simplifie().texFraction} \\right)=${e.texCalculImage(e.alpha.simplifie())}$`,i+=`<br><br> On a donc $f(x) = ${e.texFormeCanonique}$.`,i+=`<br><br>${r(1)} Le sommet de cette parabole a donc pour coordonnées $\\left(${e.alpha.simplifie().texFraction} \\,;\\, ${e.beta.simplifie().texFraction}\\right)$.`,i+=`<br><br>$f(x) = ${e.texFormeCanonique}$ avec $a ${e.a.s===1?">":"<"} 0$ d'où le tableau de variations : `;let s;$>0?s=["Var",30,"+/",10,`-/$${e.beta.simplifie().texFraction}$`,10,"+/"]:s=["Var",30,"-/",10,`+/$${e.beta.simplifie().texFraction}$`,10,"-/"],i+="<br><br>"+u({tabInit:[[["$x$",2,30],[`$${e.tex}$`,4,50]],["$-\\infty$",30,`${e.alpha.texFractionSimplifiee}`,30,"$+\\infty$",30]],tabLines:[s],espcl:3.5,deltacl:.8,lgt:8}),e.defFormeFactorisee2(a(-2,2,[-1,0,1]),a(-5,5,0),a(-5,5,0),a(-5,5,0),a(-5,5,0));const p=`La parabole d'équation $y = ${e.tex}$ coupe-t-elle l'axe des abscisses ? Si oui, déterminer les coordonnées de ce(s) point(s).`;let t=`La parabole coupe l'axe des abscisses en un point $M(x\\;;\\;y)$ si et seulement si $y=${e.tex}=0$.`;if(t+=`<br><br>On résout l'équation $${e.tex}=0$ en calculant le discriminant :`,t+=`<br><br>$\\Delta = ${e.texCalculDiscriminantSansResultat}$`,t+=`<br><br>$\\Delta = ${e.discriminant.simplifie().texFraction}.$`,e.discriminant.valeurDecimale===0){if(t+=`<br><br>L'équation admet donc une unique solution $x_0 = ${e.texCalculRacineDouble}$.`,e.x1===!1)throw new Error("Erreur dans le calcul de la racine double");const l=typeof e.x1=="number"?String(e.x1):e.x1.simplifie().texFraction;t+=`<br><br>Conclusion : <br>La parabole coupe l'axe des abscisses en un unique point $M\\left(${l} \\,;\\, 0 \\right)$.`}else{if(t+="<br><br>$\\Delta$ est strictement positif donc cette équation admet deux solutions.",t+=`<br><br>$${e.texCalculRacine1(!0)}$`,t+=`<br><br>$${e.texCalculRacine2(!0)}$`,e.x1===!1||e.x2===!1)throw new Error("Erreur dans le calcul des racines");const l=typeof e.x1=="number"?String(e.x1):e.x1.simplifie().texFraction,b=typeof e.x2=="number"?String(e.x2):e.x2.simplifie().texFraction;t+=`<br><br>Conclusion :<br>La parabole coupe donc l'axe des abscisses en deux points de coordonnées $\\left(${l} \\,;\\, 0 \\right)$ et  $\\left(${b} \\,;\\, 0 \\right)$.`}this.listeQuestions=[n,p],this.listeCorrections=[i,t],m(this)}}export{A as dateDeModifImportante,T as dateDePublication,k as default,I as interactifReady,j as refs,V as titre,_ as uuid};
