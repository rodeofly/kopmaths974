import{g as be,af as ye,r as oe,p as e,k as C,ci as s,aJ as He,T as Ee,e as n,aH as ie,A as qe,ag as Fe,a as he,bP as le,d as we,s as x,l as Be,ai as ze,a3 as Ie,a4 as Me,aE as Oe,D as Te,o as Qe}from"./embellissements-BYV7mIDn.js";import{E as Ae}from"./Exercice-DtXhjCyI.js";import{a as ce}from"./projections3d-CDky-CLD.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const rt="Calculer des longueurs avec un patron de cylindre",at="27/04/2024",ot="bc788",it={"fr-fr":["5G52"],"fr-ch":["11ES1-2","10ES1-2"]};class lt extends Ae{constructor(){super(),this.consigne="",this.nbQuestions=4,this.besoinFormulaireTexte=["Types de questions",`Nombres séparés par des tirets :
1 : Cylindre vers patron 
2 : Patron vers cylindre 
3 : Mélange`],this.besoinFormulaire2Texte=["Position du cylindre",`Nombres séparés par des tirets :
1 : Debout 
2 : La base en face avant 
3 : La base vue de côté 
4 : Mélange`],this.besoinFormulaire3Texte=["Base du cylindre donnée par son ...",`Nombres séparés par des tirets :
1 : Rayon 
2 : Diamètre 
3 : Mélange`],this.sup="3",this.sup2="4",this.sup3="3"}nouvelleVersion(){const T=be({saisie:this.sup,min:1,max:2,melange:3,defaut:3,listeOfCase:["CylindreVersPatron","PatronVersCylindre"],shuffle:!1,nbQuestions:999}),b=ye(T,this.nbQuestions),g=be({saisie:this.sup2,min:1,max:3,melange:4,defaut:4,listeOfCase:["DeboutVuDessus","baseAvantCoucheVuGauche","baseCoteCoucheVuDroite"],shuffle:!1,nbQuestions:999}),P=ye(g,this.nbQuestions),Q=be({saisie:this.sup3,min:1,max:2,melange:3,defaut:3,listeOfCase:["rayon","diametre"],shuffle:!1,nbQuestions:999}),c=ye(Q,this.nbQuestions);for(let r=0,ge=0;r<this.nbQuestions&&ge<50;){let $="",i="";const U="140px",W=[],X=[],w=[],B=[],a=oe(2,7),k=oe(3,10,[a]),o=Math.max(3,Math.min(a,5)),l=k,t=e(0,0,"A","left");let v=ce({centre:t,rx:o,hauteur:l,color:"black"}),m=e(0,l,"Z","left"),d=e(0,0),p=e(0,0),f=C(t,d,"black");f.pointilles=1;let L=e(0,0),R=e(0,0),$e=s("?",d,p),fe=s("?",L,R),Y=s("?",d,p),_=s("?",L,R);switch(P[r]){case"DeboutVuDessus":v=ce({centre:t,rx:o,hauteur:l,position:"DeboutVuDessus",color:"black"}),m=e(0,l,"B","left"),d=e(o,0),c[r]==="rayon"?p=t:(t.positionLabel="above",p=e(-o,0)),L=e(o,l),R=e(o,0);break;case"baseAvantCoucheVuGauche":{v=ce({centre:t,rx:o,hauteur:l,position:"baseAvantCoucheVuGauche",color:"black",coefficientDeFuite:.8}),m=He(t,l*.8,30,"G","left");const H=-o*Math.cos(30*Math.PI/180),q=o*Math.sin(30*Math.PI/180);c[r]==="rayon"?(d=e(t.x+o,t.y),p=t):(d=e(t.x,t.y+o),p=e(t.x,t.y-o)),L=e(m.x+q,m.y+H),R=e(t.x+q,t.y+H);break}case"baseCoteCoucheVuDroite":{v=ce({centre:t,rx:o,hauteur:l,position:"baseCoteCoucheVuDroite",color:"black"}),m=e(l,0,"B","left"),c[r]==="rayon"?(p=m,d=e(l,o)):(d=e(l,o),p=e(l,-o)),L=e(0,o),R=e(l,o);break}}const ee=Ee(t),te=Ee(m);f=C(d,p,"black"),f.pointilles=1,f.pointilles=1,$e=s("\\text{.......}",d,p),Y=s(`${n(c[r]==="rayon"?a:2*a,1)}\\text{ cm}`,d,p),fe=s("\\text{.......}",L,R),_=s(`${n(k,1)}\\text{ cm}`,L,R),b[r]==="CylindreVersPatron"?(W.push(v,ee,te,f,Y,_,ie(t,m)),X.push(v,ee,te,f,Y,_,ie(t,m))):(W.push(v,ee,te,f,$e,fe,ie(t,m)),X.push(v,ee,te,f,Y,_,ie(t,m)));const[z,se,u]=[4,12,2],I=e(0,0),O=e(0,z),A=e(se,z),G=e(se,0),y=e(oe(z,se-u),z+u),h=e(oe(z,se-u),-u),Ce=qe([I,O,A,G],"black"),De=Fe(y,u),Pe=Fe(h,u);w.push(Ce,De,Pe),B.push(Ce,De,Pe);let j,N,S,me,J,V,E,F,M;he([0,1])===0?(j=A,N=O):(j=I,N=G);const Z=2*a*Math.PI,ne=K(C(j,N),.5,"black"),Se=s("\\text{.......}",j,N,{distance:1}),de=s(`${b[r]==="CylindreVersPatron"?"\\approx":""}\\text{${n(Z,1)} cm}`,j,N,{letterSize:"small",distance:1});he([0,1])===0?(S=K(C(I,O),.5,"black"),me=s("\\text{.......}",I,O,{distance:1}),J=s(`\\text{${k} cm}`,I,O,{letterSize:"small",distance:1})):(S=K(C(A,G),.5,"black"),me=s("\\text{.......}",A,G,{distance:1}),J=s(`\\text{${k} cm}`,A,G,{letterSize:"small",distance:1})),he([0,1])===0?(V=e(y.x,y.y),E=e(y.x+u,y.y),F=e(h.x-u,h.y),M=e(h.x+u,h.y)):(V=e(y.x,y.y),E=e(y.x+u,y.y),F=e(h.x-u,h.y),M=e(h.x+u,h.y));const pe=K(C(V,E),0,"black"),ke=K(C(F,M),0,"black");let ve=s("\\text{.......}",V,E),Le=s(`\\text{${a} cm}`,V,E,{letterSize:"small",distance:1}),Re=s("\\text{.......}",F,M),Ve=s(`\\text{${2*a} cm}`,F,M,{letterSize:"small",distance:1});switch(b[r]==="CylindreVersPatron"?(ve=s("\\text{.......}",V,E),Le=s(`\\text{${a} cm}`,V,E,{letterSize:"small",distance:1}),Re=s("\\text{.......}",F,M),Ve=s(`\\text{${2*a} cm}`,F,M,{letterSize:"small",distance:1}),w.push(ne,S,pe,ke,Se,me,ve,Re),B.push(ne,S,pe,ke,de,J,Le,Ve)):(w.push(ne,S,de,J),B.push(ne,S,pe,de,J)),b[r]){case"CylindreVersPatron":{const[re,ae]=ue(W,w,.5),[H,q]=ue(X,B,.5);$+="On souhaite construire le patron  du cylindre ci-dessous.<br> Complète le schéma du patron en indiquant les longueurs en valeur exacte si possible ou au millimètre près.<br>",$+="<br><br>",$+=le(re,ae,{largeur1:50,eleId:"",widthmincol1:U,widthmincol2:"0px"}),c[r]==="rayon"?(i+=`Le rayon du cercle de base est $${n(a,1)}${x()}\\text{cm}$<br>`,i+=`Le diamètre du cercle de base est $2 \\times ${n(a,1)} = ${n(2*a,1)}${x()}\\text{cm}$.<br>`):(i+=`Le diamètre du cercle de base est $${n(2*a,1)}${x()}\\text{cm}$.<br>`,i+=`Le rayon du cercle de base est $${n(2*a,1)} \\div 2 = ${n(a,1)}${x()}\\text{cm}$.<br>`),i+=`La largeur du rectangle est égale à la hauteur du cylindre soit $${n(k,1)}${x()}\\text{cm}$.<br>`,i+=`La longueur du rectangle est égale à la longueur du cercle de base soit $2 \\times ${n(a,1)}\\times \\pi=${n(2*a,1)}\\pi\\approx${n(Z,1)}${x()}\\text{cm}$.<br>`,i+="<br><br>",i+=le(H,q,{largeur1:50,eleId:"",widthmincol1:U,widthmincol2:"0px"});break}case"PatronVersCylindre":{const[re,ae]=ue(w,W,.5),[H,q]=ue(B,X,.5);$+="On souhaite connaitre les dimensions du cylindre correspondant au patrons ci-dessous.<br> Complète le schéma du cylindre en indiquant les longueurs en valeur exacte si possible ou au millimètre près.<br>",$+="<br><br>",$+=le(re,ae,{largeur1:50,eleId:"",widthmincol1:U,widthmincol2:"0px"});const xe=we(Z/Math.PI,1);i+=`La hauteur du cylindre est égale à la largeur du rectangle soit $${n(k,1)}${x()}\\text{cm}$.<br>`,i+=`La longueur du rectangle est égale à la longueur du cercle de base, on a donc l'égalité $diametre \\times \\pi=${n(Z,1)}${x()}\\text{cm}$.<br>`,i+=`Donc la longueur du diamètre est égale à  $${n(Z,1)} \\div  \\pi \\approx${n(xe)}${x()}\\text{cm}$.<br>`,c[r]==="rayon"&&(i+=`Donc la longueur du rayon est donc approximativement égale à $${n(xe)} \\div 2 = ${n(xe/2,1)}${x()}\\text{cm}$.<br>`),i+="<br><br>",i+=le(H,q,{largeur1:50,eleId:"",widthmincol1:U,widthmincol2:"0px"});break}case"type3":default:$=`Question ${r+1} de type 3`,i=`Correction ${r+1} de type 3`;break}this.questionJamaisPosee(r,a,k)&&(this.listeQuestions[r]=$,this.listeCorrections[r]=i,r++),ge++}Be(this)}}function K(D,T=.5,b="black"){const g=D.extremite1,P=D.extremite2,Q=ze(Ie(g,P),g,90,T/D.longueur),c=C(Me(g,Q),Me(P,Q),b);return Oe(g,P)>1?c.styleExtremites="<->":c.styleExtremites=">-<",c}function ue(D,T,b){const g=Te(D,{rxmin:-.1,rymin:-.1,rxmax:.1,rymax:.1}),P=Te(T,{rxmin:-.1,rymin:-.1,rxmax:.1,rymax:.1}),Q=Qe(Object.assign({scale:b,optionsTikz:["baseline=(current bounding box.north)"],mainlevee:!1},g),D),c=Qe(Object.assign({scale:b,optionsTikz:["baseline=(current bounding box.north)"],mainlevee:!1},P),T);return[Q,c]}export{at as dateDePublication,lt as default,it as refs,rt as titre,ot as uuid};
