import{E as H}from"./Exercice-DtXhjCyI.js";import{g as X,p as P,r as f,ai as T,a as $,a2 as L}from"./embellissements-BYV7mIDn.js";import{c as Y}from"./aleatoires-BLhzzHLc.js";import{M as z}from"./Matrice-C65I2nuw.js";import{S as V}from"./main-Vl0czKSA.js";import{f as C}from"./figureApigeom-Da_B6AP0.js";import{w as B}from"./apigeomZoom-DfTEdDkY.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"decimal.js";import"earcut";import"roughjs";import"./dateEtHoraires-yqKtvK1K.js";import"./generalStore-C3E9FHtR.js";import"./canStore-DaSrd7sp.js";const be=!0,xe="custom",de="df171",ye="Placer un point dans un rep√®re orthogonal, norm√© ou quelconque",ge={"fr-fr":["2G12-7"],"fr-ch":[]};class Pe extends H{figuresApiGeom;labelsPoints;X;Y;constructor(){super(),this.nbQuestions=1,this.figuresApiGeom=[],this.labelsPoints=[],this.X=[],this.Y=[],this.exoCustomResultat=!0,this.besoinFormulaireTexte=["Type de rep√®re",["Nombres s√©par√©s par des tirets  :","1 : Orthogonal","2 : Norm√©","3 : Quelconque","4 : M√©lange"].join(`
`)],this.sup="1",this.besoinFormulaire2CaseACocher=["Pr√©sence de coordonn√©es fractionnaires",!1],this.sup2=!1,this.besoinFormulaire3Numerique=["Nombre de points √† trouver/placer",3],this.sup3=3,this.comment=`Exercice fait suite √† une demande sur la forge de Carole Feug√®re.<br> Il y a trois types de rep√®res, le premier est orthogonal mais pas norm√©, le deuxi√®me est norm√© mais pas orthonormal, le troisi√®me n'est ni norm√© ni orthogonal.<br>
    Les points √† Placer sont choisis al√©atoirement √† coordonn√©es enti√®res. On peut choisir le nombre de points √† Placer de 1 √† 3.`}nouvelleVersion(){const c=X({saisie:this.sup,min:1,max:3,melange:4,nbQuestions:this.nbQuestions,defaut:4}),n=[],t=[],p=[];for(let e=0;e<this.nbQuestions;){const I={};this.figuresApiGeom[e]=new V(Object.assign(I,{xMin:-10,yMin:-10,width:300,height:300,scale:.5})),this.figuresApiGeom[e].options.latexHeight=20,this.figuresApiGeom[e].options.labelDxInPixels=20,this.figuresApiGeom[e].options.labelDyInPixels=20,this.figuresApiGeom[e].setToolbar({tools:["NAME_POINT","POINT_INTERSECTION","UNDO","REDO","REMOVE"],position:"top"});const o=this.figuresApiGeom[e];n[e]=[],t[e]=[],this.X[e]=[],this.Y[e]=[],p[e]=[];let r,a,l,x;const k=Y(3+this.sup3),[S,A,D]=k.slice(0,3);this.labelsPoints[e]=k.slice(3);const O=o.create("Point",{x:0,y:0,label:D,labelDxInPixels:-20,labelDyInPixels:-20,color:"black",shape:"o",sizeInPixels:2,isSelectable:!1});do{switch(c[e]){case 1:r=[$([1.5,2.5]),0],a=[0,$([1,2])];break;case 2:{const i=P(O.x,O.y),s=T(P(f(6,8)*.2,0),i,f(-20,20),1);r=[s.x,s.y];const m=T(P(...r),i,f(60,80),1);a=[m.x,m.y]}break;case 3:default:{const i=P(O.x,O.y);r=[1.5,f(-4,4,[0])*.2];const s=T(P(...r),i,f(60,80),$([.6,.7,1.25,1.3,1.4]));a=[s.x,s.y]}break}l=new z([[r[0],a[0]],[r[1],a[1]]]),x=l.inverse()}while(x==null);const v=o.create("Point",{x:r[0],y:r[1],label:S,labelDxInPixels:0,labelDyInPixels:-20,shape:"o",color:"black",sizeInPixels:2,isSelectable:!1}),E=o.create("Point",{x:a[0],y:a[1],label:A,labelDxInPixels:-20,labelDyInPixels:0,shape:"o",color:"black",sizeInPixels:2,isSelectable:!1}),M=o.create("Point",{x:v.x*4,y:v.y*4,isVisible:!1,isSelectable:!1}),N=o.create("Point",{x:E.x*3,y:E.y*3,isVisible:!1,isSelectable:!1}),K=o.create("Point",{x:-M.x,y:-M.y,isVisible:!1,isSelectable:!1}),j=o.create("Point",{x:-N.x,y:-N.y,isVisible:!1,isSelectable:!1});o.create("Segment",{point1:K,point2:M,shape:"->",color:"black",thickness:2}),o.create("Segment",{point1:j,point2:N,shape:"->",color:"black",thickness:2});let u=1,h=1;this.sup2&&(u=$([1,2,3]),h=$([1,2,3],[u]));for(let i=-4;i<4+1/u;i+=1/u){const s=l.multiply([i,-3]).toArray(),m=l.multiply([i,3]).toArray(),y=o.create("Point",{x:s[0],y:s[1],label:"",isSelectable:!1,isVisible:!1}),R=o.create("Point",{x:m[0],y:m[1],label:"",isSelectable:!1,isVisible:!1});Math.abs(i)>.1&&o.create("Segment",{point1:y,point2:R,color:"gray",thickness:.5,opacity:.5});for(let g=-3;g<3+1/h;g+=1/h)if(i===-4){const F=l.multiply([-4,g]).toArray(),G=l.multiply([4,g]).toArray(),q=o.create("Point",{x:F[0],y:F[1],label:"",isSelectable:!1,isVisible:!1}),Q=o.create("Point",{x:G[0],y:G[1],label:"",isSelectable:!1,isVisible:!1});Math.abs(g)>.1&&o.create("Segment",{point1:q,point2:Q,color:"gray",thickness:.5,opacity:.5})}}const b=new V(Object.assign(I,{xMin:-10,yMin:-10,width:300,height:300,scale:.5}));b.options.latexHeight=20,b.options.labelDxInPixels=20,b.options.labelDyInPixels=20,b.loadJson(JSON.parse(this.figuresApiGeom[e].json));for(let i=0;i<this.sup3;i++){do n[e][i]=L(f(-3*u,3*u,[0]),u),t[e][i]=L(f(-2*h,2*h,[0]),h);while(n[e].slice(0,i).map(y=>y.num).includes(n[e][i].num)&&t[e].slice(0,i).map(y=>y.num).includes(t[e][i].num));const[s,m]=l.multiply([n[e][i].valeurDecimale,t[e][i].valeurDecimale]).toArray();this.X[e][i]=s,this.Y[e][i]=m,b.create("Point",{x:s,y:m,label:k[3+i],labelDxInPixels:n[e][i].valeurDecimale<0?-20:20,labelDyInPixels:t[e][i].valeurDecimale<0?-20:20})}let d="";this.interactif?(d=`Placer les points $${this.labelsPoints[e].map((i,s)=>`${i}(${n[e][s].texFractionSimplifiee};${t[e][s].texFractionSimplifiee})`).join("$, $")}$ dans le rep√®re $(${D},${S},${A})$.<br>`,d+=C({exercice:this,figure:this.figuresApiGeom[e],i:e,isDynamic:!0,defaultAction:"NAME_POINT"})):(d=`Placer les points $${this.labelsPoints[e].map((i,s)=>`${i}(${n[e][s].texFractionSimplifiee};${t[e][s].texFractionSimplifiee})`).join("$, $")}$ dans le rep√®re $(${D},${S},${A})$.<br>`,d+=B(this.figuresApiGeom[e]));let w=`Les points $${this.labelsPoints[e].map((i,s)=>`${i}(${n[e][s].texFractionSimplifiee};${t[e][s].texFractionSimplifiee})`).join("$, $")}$ dans le rep√®re $(${D},${S},${A})$ :<br>`;w+=C({exercice:this,figure:b,i:e,idAddendum:"correction",isDynamic:!1}),this.questionJamaisPosee(e,...n[e],...t[e],...r,...a)&&(this.listeQuestions[e]=d,this.listeCorrections[e]=w,e++)}}correctionInteractive=c=>{if(c===void 0)return["KO"];const n=[],t=this.figuresApiGeom[c];this.answers===void 0&&(this.answers={}),this.answers[t.id]=t.json,t.isDynamic=!1,t.divButtons.style.display="none",t.divUserMessage.style.display="none";const p=document.querySelector(`#feedback${`Ex${this.numeroExercice}Q${c}`}`);for(let e=0;e<this.labelsPoints[c].length;e++){const I=this.labelsPoints[c][e],{isValid:o,message:r,points:a}=t.checkCoords({checkOnlyAbscissa:!1,label:I,x:this.X[c][e],y:this.Y[c][e]}),l=a[0];if(o?(n.push("OK"),l.color="green",l.colorLabel="green",l.thickness=3):(n.push("KO"),l!==void 0&&(l.color="red",l.colorLabel="red",l.color="red",l.thickness=3)),p!=null&&r.length>0){const x=document.createElement("p");x.innerText=r,p.appendChild(x)}}if(p!=null)if(p?.innerHTML==="")p.innerHTML="üòé";else{const e=document.createElement("p");e.innerText="‚òπÔ∏è",p.insertBefore(e,p.firstChild)}return n}}export{Pe as default,be as interactifReady,xe as interactifType,ge as refs,ye as titre,de as uuid};
