import{p as j,aJ as ee,r as u,ai as te,n as q,cB as N,I as C,ag as R,d as W,be as X,bg as w,aM as z,W as p,a4 as A,aa as g,bX as B,a3 as n,T as se,aH as oe,cM as F,D as ie,c7 as K,o as y,l as re,an as ne}from"./embellissements-BYV7mIDn.js";import{d as ae,c as ce}from"./cibles-CJM3ESl_.js";import{c as le}from"./aleatoires-BLhzzHLc.js";import{E as ue}from"./Exercice-DtXhjCyI.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./reperes-WwrVcExd.js";import"./dateEtHoraires-yqKtvK1K.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const Le="30/11/2020",Me="06/09/2024",ve="Construire des médiatrices avec cible auto-corrective",De=!0,Ee="AMCOpen",Te="d7052",Qe={"fr-fr":["6G3B-1"],"fr-2016":["6G25"],"fr-ch":["9ES3-5"]},me=function(P){const s=ne(u(1,P)),h=Number(u(1,P)).toString();return s+h};class je extends ue{constructor(){super(),this.nbQuestions=1}nouvelleVersion(){for(let s=0,h=0;s<this.nbQuestions&&h<50;){let k=[0,0],I="",$="";const e=le(4,"QI",!0);$=`Construire la médiatrice $(d)$ du segment $[${e[0]}${e[1]}]$ et la médiatrice $(d')$ du segment $[${e[2]}${e[3]}]$.<br>`,$+="Prolonger les droites $(d)$ et $(d')$ pour obtenir leur point d'intersection.<br>";const O=["/","//","///","x","o","S","V"],o=j(0,0,"I"),t=ee(o,u(3,6)),b=te(t,o,u(65,150),u(8,15)/10),x=q(o,t),f=q(o,b),U=N(t,x),Y=N(b,f);x.color=C("blue"),f.color=C("green");const Z=R(t,W(u(25,40)/20)),_=R(b,W(u(45,60)/20)),i=X(U,Z,e[0],1),a=w(i,x,e[1]),r=X(Y,_,e[2],1),c=w(r,f,e[3]),L=z(i,a),M=z(r,c);L.color=C("black"),M.color=C("black");const v=[],m=[],D=p(e[0],A(i,g(n(a,i),t,.5/B(n(a,i)))),0,"black",1,"milieu",!0),E=p(e[1],A(a,g(n(i,a),t,.5/B(n(a,i)))),0,"black",1,"milieu",!0),T=p(e[2],A(r,g(n(c,r),t,.5/B(n(c,r)))),0,"black",1,"milieu",!0),Q=p(e[3],A(c,g(n(r,c),t,.5/B(n(c,r)))),0,"black",1,"milieu",!0),S=me(6);k=ae(o.x,o.y,6,.6,S);const l=ce({x:k[0],y:k[1],rang:6,taille:.6,color:"#f15929"});l.opacite=.7,v.push(l,L,M,D,E,T,Q),m.push(l,L,M,se(o),oe(o),D,E,T,Q),m.push(x,f,F(i,a,"blue",O[1]),F(r,c,"green",O[2])),I+=`Le point $I$ d'intersection des deux médiatrices est dans la case ${S} de la grille.<br>`;const d=ie([D,E,T,Q,j(l.x-2.5,l.y-2.5),j(l.x+2.5,l.y+2.5)]),{xmin:G,xmax:H,ymin:J,ymax:V}=d;m.push(p("(d)",K(x,{xmin:G,ymin:J,xmax:H,ymax:V}),0,"black",1,"milieu",!0)),m.push(p("(d')",K(f,{xmin:G,ymin:J,xmax:H,ymax:V}),0,"black",1,"milieu",!0)),Object.assign(d,{pixelsParCm:20,scale:.7}),this.autoCorrection[s]={enonce:$+y(d,v),propositions:[{texte:I+y(d,m),statut:3,feedback:"",enonce:"Texte écrit au dessus ou avant les cases à cocher",sanscadre:!0}]},this.questionJamaisPosee(s,t.x,t.y,b.x,b.y)&&(this.listeQuestions[s]=$+y(d,v),this.listeCorrections[s]=I+y(d,m),s++),h++}re(this)}}export{De as amcReady,Ee as amcType,Me as dateDeModifImportante,Le as dateDePublication,je as default,Qe as refs,ve as titre,Te as uuid};
