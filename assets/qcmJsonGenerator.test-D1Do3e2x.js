import{describe as l,beforeEach as c,it as n,expect as e}from"vitest";import i from"./QcmJsonGenerator-DRW9NjwV.js";import"./embellissements-BYV7mIDn.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./ExerciceQcm-DOkcCRBu.js";import"./qcm-BQR8Ns0N.js";import"./lists-i1i4IA1M.js";import"./Exercice-DtXhjCyI.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const s={titre:"Test QCM",consigne:"Sélectionnez la bonne réponse.",options:{vertical:!0,ordered:!0,lastChoice:3},questions:[{enonce:"Quelle couleur est le ciel ?",reponses:["Bleu","Vert","Rouge"],corrections:["Correct","Faux","Faux"],bonnesReponses:[!0,!1,!1]},{enonce:"Combien font 1+1 ?",reponses:["2","3"],corrections:["Correct","Faux"],bonnesReponses:[!0,!1]}]};l("QcmJsonGenerator",()=>{let t;c(()=>{t=new i(s)}),n("should initialize with provided JSON data",()=>{e(t.jsonData).toEqual(s),e(t.questionsDisponibles.length).toBe(2),e(t.titre).toBe("Test QCM"),e(t.consigne).toBe("Sélectionnez la bonne réponse."),e(t.options.vertical).toBe(!0),e(t.options.ordered).toBe(!0),e(t.options.lastChoice).toBe(3),e(t.nbQuestions).toBe(2),e(t.nbQuestionsModifiable).toBe(!0)}),n("should use default data if no data is provided",()=>{const o=new i(void 0);e(o.jsonData).toBeDefined(),e(o.questionsDisponibles.length).toBeGreaterThan(0)}),n("should set enonce, reponses, corrections and bonnesReponses in versionOriginale",()=>{t.versionOriginale(),e(t.enonce).toBe("Quelle couleur est le ciel ?"),e(t.reponses).toEqual(["Bleu","Vert","Rouge"]),e(t.corrections).toEqual(["Correct","Faux","Faux"]),e(t.bonnesReponses).toEqual([!0,!1,!1])}),n("should set correction to default if no corrections are provided",()=>{const o={titre:"Sans correction",questions:[{enonce:"Test",reponses:["A","B"]}]},a=new i(o);a.versionOriginale(),e(a.correction).toBe("La bonne réponse est la première de la liste.")}),n("should pick a random question in versionAleatoire",()=>{t.versionAleatoire(),e(t.enonce).toMatch(/(Quelle couleur est le ciel|Combien font 1\+1)/),e(t.reponses.length).toBeGreaterThan(1)}),n("should validate correct QcmJsonData",()=>{e(i.validateJsonData(s)).toBe(!0)}),n("should invalidate QcmJsonData with missing titre",()=>{const o={...s,titre:void 0};e(i.validateJsonData(o)).toBe(!1)}),n("should invalidate QcmJsonData with invalid questions",()=>{const o={...s,questions:[]};e(i.validateJsonData(o)).toBe(!1)}),n("should invalidate QcmJsonData with invalid reponses",()=>{const o={...s,questions:[{enonce:"Q",reponses:["A"]}]};e(i.validateJsonData(o)).toBe(!1)}),n("should invalidate QcmJsonData with non-string reponse",()=>{const o={...s,questions:[{enonce:"Q",reponses:["A",2]}]};e(i.validateJsonData(o)).toBe(!1)}),n("should invalidate QcmJsonData with invalid corrections",()=>{const o={...s,questions:[{enonce:"Q",reponses:["A","B"],corrections:[1,2]}]};e(i.validateJsonData(o)).toBe(!1)}),n("should invalidate QcmJsonData with invalid bonnesReponses",()=>{const o={...s,questions:[{enonce:"Q",reponses:["A","B"],bonnesReponses:[!0]}]};e(i.validateJsonData(o)).toBe(!1)}),n("should create instance from static fromJson",()=>{const o=i.fromJson(s);e(o).toBeInstanceOf(i),e(o.jsonData).toEqual(s)}),n("should get a random question not in questionsDejaUtilisees",()=>{const o=s.questions[0],a=s.questions[1],r=t.getQuestionAleatoire([o]);e([a,null]).toContain(r)}),n("nouvelleVersion should call versionOriginale and super.nouvelleVersion",()=>{const o=vi.spyOn(t,"versionOriginale");t.nouvelleVersion(),e(o).toHaveBeenCalled()})});
