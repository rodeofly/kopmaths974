import{as as D,r as y,y as L,F as p,m as N}from"./embellissements-BYV7mIDn.js";import{M as l}from"./MonomePlusieursVariables-DHq3iA-O.js";class a{monomes;coefficients;constructor(e){this.monomes=Array.isArray(e)?e:[e],this.coefficients=this.monomes.map(t=>t.coefficient.simplifie())}get degre(){return this.monomes.length===0?0:Math.max(...this.monomes.map(e=>e.degre))}get ppcm(){return D(this.monomes.map(e=>e.coefficient.simplifie().den))}static PolynomeNonReduit(e){return new a(e)}static PolynomeReduit(e){const t=[];e.forEach(o=>n(o));function n(o){const i=t.findIndex(c=>c.estSemblable(o));i!==-1?(t[i]=t[i].somme(o),t[i].coefficient.num===0&&t.splice(i,1)):t.push(o)}return t.sort((o,i)=>-(o.degre-i.degre)),new a(t)}static createRandomPolynome(e,t,n,o,i,c=[],r=10){const s=[l.createRandomMonome(y(e,t),o,i,r)];for(;s.length<n;)if(c.length>s.length)s.push(l.createMonomeFromPartieLitterale(o,c[s.length].partieLitterale,r));else{let m=!1;do{const d=l.createRandomMonome(y(0,t),o,i,r);m=!1;for(let f=0;f<s.length;f++)if(d.estSemblable(s[f])){m=!0;break}m||s.push(d)}while(m)}return L(s),new a(s)}static createPolynomeFromMonome(e){return new a(e)}static createPolynomeFromRoots(e,t=new p(1,1)){let n=new a(new l(new p(1,1),{variables:["x"],exposants:[0]}));return e.forEach(o=>{const i=new a([new l(new p(1,1),{variables:["x"],exposants:[1]}),new l(new p(-1,1).produitFraction(o),{variables:["x"],exposants:[0]})]);n=n.produit(i)}),n.produit(new l(t,{variables:["x"],exposants:[0]})).reduire()}somme(e){const t=[...this.monomes];return e instanceof a?e.monomes.forEach(n=>t.push(n)):t.push(e),a.PolynomeNonReduit(t)}oppose(){const e=this.monomes.map(t=>t.oppose());return a.PolynomeNonReduit(e)}melangerTermes(e){if(e){let t=L(this.monomes);if(this.monomes.length===1)return this;do t=L(this.monomes);while(t.map(n=>n.toString()).join("")===this.monomes.map(n=>n.toString()).join(""));return a.PolynomeNonReduit(t)}else return this}toStringSansLeDernierTerme(){let e="";if(this.monomes.length===0)e="\\ldots\\ldots";else{const t=a.PolynomeNonReduit(this.monomes.slice(0,this.monomes.length-1));e+=t.toString(),this.monomes[this.monomes.length-1].coefficient.signe===1?e+=" + \\ldots\\ldots":e+="-\\ldots\\ldots"}return e}toStringAvecDernierTermeEnEvidence(){let e="";if(this.monomes.length===0)e="";else{const n=a.PolynomeNonReduit(this.monomes.slice(0,this.monomes.length-1));e+=n.toString(),this.monomes[this.monomes.length-1].coefficient.signe===1?e+=" + ":e+="- "}const t=this.monomes[this.monomes.length-1];return t.coefficient.signe===-1?e+=N(t.oppose().toString()):e+=N(t.toString()),e}contientCarre(){return this.monomes.some(e=>e.estCarre())}miseEnFacteurCommun(){const e=this.monomes;if(e.length===0)return new l(0,{variables:[],exposants:[]});let t=e[0];for(let n=1;n<e.length;n++)t=t.pgcd(e[n]);return t}diviserParMonome(e){const t=this.monomes.map(n=>n.diviserPar(e));return a.PolynomeNonReduit(t)}diviser(e){const t=this.reduire().ordonner(),n=e.reduire().ordonner();if(n.monomes.length===0||n.monomes.every(m=>m.coefficient.num===0))throw new Error("Division par un polynôme nul impossible");let o=t;const i=[],c=Math.max(...n.monomes.map(m=>m.degre)),r=n.monomes.find(m=>m.degre===c);for(;o.monomes.length>0;){const m=o.reduire().ordonner();if(m.monomes.length===0)break;const d=Math.max(...m.monomes.map(v=>v.degre));if(d<c)break;const h=m.monomes.find(v=>v.degre===d).diviserPar(r);i.push(h);const w=n.produit(h).reduire();o=o.difference(w).reduire()}return{quotient:a.PolynomeReduit(i),reste:o}}difference(e){const t=[...this.monomes];if(e instanceof a)e.monomes.forEach(n=>{const o=n.produit(new l(new p(-1,1),{variables:[],exposants:[]}));t.push(o)});else{const n=e.produit(new l(new p(-1,1),{variables:[],exposants:[]}));t.push(n)}return a.PolynomeNonReduit(t)}produit(e){const t=[];return e instanceof a?this.monomes.forEach(n=>{e.monomes.forEach(o=>{t.push(n.produit(o))})}):this.monomes.forEach(n=>{t.push(n.produit(e))}),a.PolynomeNonReduit(t)}reduire(){return a.PolynomeReduit(this.monomes)}ordonner(){const e=this.monomes;return e.sort((t,n)=>-t.degre+n.degre),a.PolynomeNonReduit(e)}evaluer(e){return this.monomes.reduce((t,n)=>t.sommeFraction(n.evaluer(e)),new p(0,1))}tableauEvaluations(e,t="x",n=3){const o=[],i=[];for(const s of e){const m=this.evaluer({[t]:s});i.push({valeur:s,resultat:m}),m.num===0&&o.push(s)}const c=Math.ceil(i.length/n);let r="\\begin{array}{";for(let s=0;s<n;s++)r+="l",s<n-1&&(r+=" ");r+=`}
`;for(let s=0;s<c;s++){for(let m=0;m<n;m++){const d=s*n+m;if(d<i.length){const{valeur:f,resultat:h}=i[d];r+=`P\\left(${f.toLatex()}\\right)=${h.toLatex()}`}m<n-1&&(r+=" & ")}r+=` \\\\
`}return r+="\\end{array}",{tableauLatex:r,racines:o}}termes(){return this.reduire().monomes.map(e=>e.coefficient.simplifie())}toStringEvaluate(e){if(this.monomes.length===0)return"0";let t="";return this.monomes.forEach((n,o)=>{const i=n.toStringEvaluate(e);n.coefficient.num!==0&&(o===0?t+=i:n.coefficient.signe===1?t+=" + "+i:t+=i)}),t}toString(e=!1){if(this.monomes.length===0)return"0";let t="";return this.monomes.forEach((n,o)=>{const i=n.toString();n.coefficient.num!==0&&(o===0?t+=i:n.coefficient.signe===1?t+=" + "+i:t+=i)}),this.monomes.length>1&&e&&(t=`\\left(${t}\\right)`),t}toStringAlgebrique(){let e=this.toString(!1);return this.coefficients[0].signe!==-1&&this.coefficients[0].num!==0&&(e=`+${e}`),e}toPgfplots(){if(this.monomes.length===0)return"0";let e="";return this.reduire().ordonner().monomes.forEach((n,o)=>{if(n.coefficient.num===0)return;const i=n.coefficient.valeurDecimale,c=n.partieLitterale.exposants[0]||0;let r="";c===0?r=Math.abs(i).toString():Math.abs(i)===1?c===1?r="x":r=`x^${c}`:c===1?r=`${Math.abs(i)}*x`:r=`${Math.abs(i)}*x^${c}`,o===0?i<0?e+="-"+r:e+=r:i<0?e+=" - "+r:e+=" + "+r}),e}toStringAvecEspacement(e){if(this.monomes.length===0)return"0";let t="";return this.reduire().ordonner().monomes.forEach((o,i)=>{if(o.coefficient.num===0)return;const c=o.toString();i===0?t+=c:o.coefficient.signe===1?t+=" + "+c:t+=" "+c}),t}afficherDivision(e){const t=this.reduire().ordonner(),n=e.reduire().ordonner();if(n.monomes.length===0||n.monomes.every(u=>u.coefficient.num===0))return"Division par zéro impossible";let o=t;const i=[],c=[],r=Math.max(...n.monomes.map(u=>u.degre)),s=n.monomes.find(u=>u.degre===r);for(;o.monomes.length>0;){const u=o.reduire().ordonner();if(u.monomes.length===0)break;const x=Math.max(...u.monomes.map($=>$.degre));if(x<r)break;const S=u.monomes.find($=>$.degre===x).diviserPar(s);i.push(S);const g=n.produit(S).reduire(),M=o.difference(g).reduire();c.push({quotientPartiel:S,produit:g,nouveauReste:M}),o=M}const m=a.PolynomeReduit(i),d=Math.max(...t.monomes.map(u=>u.degre));let f="$\\begin{array}{r|l}";f+=`${t.toStringAvecEspacement(d)} & ${n.toString()}\\\\`;let h="";const w=n.toString(),R=m.toString();let v=R;return R.length<w.length&&(v=`${R}\\phantom{\\qquad}`),c.forEach((u,x)=>{const E=u.produit.toStringAvecEspacement(d);x===0?f+=`${h}\\underline{-(${E})} & \\overline{${v}}\\\\`:f+=`${h}\\underline{-(${E})} & \\\\`;const S=u.nouveauReste.monomes.length>0&&!u.nouveauReste.monomes.every(g=>g.coefficient.num===0);if(x===c.length-1)if(S){const g=u.nouveauReste.toStringAvecEspacement(d);f+=`${h}\\phantom{-(}${g} & \\\\`}else f+=`${h}\\phantom{-(}0 & \\\\`;else if(S){const g=u.nouveauReste.toStringAvecEspacement(d);if(f+=`${h}\\phantom{-(}${g} & \\\\`,u.produit.monomes.length>0){const M=u.produit.monomes[0];h+=`\\phantom{-(${M.toString()})}`}}}),f+="\\end{array}$",f}}export{a as P};
