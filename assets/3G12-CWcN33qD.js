import{r as $,a as A,T as G,aH as ie,y as oe,C as O,S as V,o as z,m as re,I as P,k as U,aV as ne,l as ae,ah as le,a1 as B}from"./embellissements-BYV7mIDn.js";import{b as J,a as d}from"./style-CcGLZIPY.js";import{r as ue}from"./2dAnimation-C1DoGEGt.js";import{a as ce}from"./questionMathLive-DdRvWqlN.js";import{p as pe}from"./Pavage-B2y2cifi.js";import{E as me}from"./Exercice-DtXhjCyI.js";import{s as he}from"./gestionInteractif-DujZpSu8.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./tableauMathlive-xx-nDjq0.js";import"./index-BUDQz6-w.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"seedrandom";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./exerciseMethods-CtbYPwln.js";import"crypto-js";import"./AjouteTableauMathlive-Bz24QHd3.js";const je="Trouver l'image d'une figure par une rotation dans un pavage",Ge="16/12/2020",Oe="01/04/2025",Ve=!0,ze="mathLive",Ue=!0,Be="AMCHybride",Je="442e0",Ke={"fr-fr":["3G12"],"fr-ch":["10ES2-11"]};class We extends me{constructor(){super(),this.besoinFormulaireNumerique=["Taille du pavage (la grande est automatique au-delà de 5 questions)",2,` 1 : Taille modeste
 2 : Grande taille`],this.besoinFormulaire2CaseACocher=["Montrer les centres"],this.besoinFormulaire3Numerique=["Choix du pavage",8,`1 : Triangles équilatéraux
2 : Carrés
3 : Hexagones réguliers
4 : Carrés et triangles équilatéraux
5 : Octogones et carrés
 6 : Losanges (pavage hexagonal d'écolier)
7 : Hexagones et triangles équilatéraux
8 : Un des sept pavages au hasard`],this.besoinFormulaire4CaseACocher=["Ignorer l'angle de 180$^\\circ$"],this.nbQuestions=3,this.correctionDetailleeDisponible=!0,this.correctionDetaillee=!0,this.spacing=2,this.sup=1,this.sup2=!1,this.sup3=7,this.sup4=!0,this.spacingCorr=2.5}nouvelleVersion(){const K=function(e){for(let i=0;i<e.length;i++)e[i][0]===e[i][1]&&e.splice(i,1);return e},W=function(e,i){return k(e,i)?Y(e,i):!1},k=function(e,i){return e.listePoints.length===i.listePoints.length},X=function(e,i){return B(e.x,i.x,.1)&&B(e.y,i.y,.1)},Y=function(e,i){let g=!1,f=0;if(k(e,i))for(const L of e.listePoints){for(const Q of i.listePoints)if(X(Q,L)&&(g=!0),g)break;if(g?(f++,g=!1):f-=100,f<0)break}return f===e.listePoints.length},Z=function(e,i,g,f){const L=e.polygones[f-1];let Q;const te=-1,se=le(L,i,g);for(let M=0;M<e.polygones.length;M++)if(Q=e.polygones[M],W(se,Q))return M+1;return te},u=[],q=[];let c=parseInt(this.sup);(c<1||c>2)&&(c=1),this.nbQuestions>5&&(c=2);let N,H,r,o,R,s=[],_=[],t,a,p="",m="",n=parseInt(this.sup),E,I=1,w,b,v,C,D,F,l,h,T,y;const ee=[[60,120,180],[90,180],[60,120,180],[60,120,90],[45,90,135,180],[60,120,180],[60,120,180]];let x;for(this.sup3===8?n=$(1,7):n=this.sup3;s.length<this.nbQuestions&&I<6;){for(E=0,t=pe(),_=[[[3,2],[3,2],[2,2],[2,2],[2,2],[2,2],[3,2]],[[4,3],[4,3],[3,3],[3,3],[3,3],[3,2],[5,3]]],N=_[c-1][n-1][0],H=_[c-1][n-1][1],t.construit(n,N,H,3),a=t.fenetre;s.length<this.nbQuestions+2&&E<30;){for(s=[],r=$(Math.floor(t.nb_polygones/3),Math.ceil(t.nb_polygones*2/3)),A([!0,!1])?o=t.polygones[r].listePoints[$(0,t.polygones[r].listePoints.length-1)]:o=t.barycentres[r];o.x-5<a.xmin||o.x+5>a.xmax||o.y-5<a.ymin||o.y+5>a.ymax;)r=$(Math.floor(t.nb_polygones/3),Math.ceil(t.nb_polygones*2/3)),A([!0,!1])?o=t.polygones[r].listePoints[$(0,t.polygones[r].listePoints.length-1)]:o=t.barycentres[r];o.nom="A",o.positionLabel="below",D=G(o,"red"),F=ie(o,"red"),D.epaisseur=3,D.taille=4,x=A(ee[n-1],this.sup4?180:0),b=A([1,-1]);for(let e=1;e<=t.nb_polygones;e++)R=Z(t,o,x*b,e),R!==-1&&s.push([e,R]);s=K(s),E++}s.length<this.nbQuestions&&(this.sup3===7&&(n=(n+1)%5+1),I++)}if(s.length<this.nbQuestions){console.error(`Trop de questions (${this.nbQuestions} questions pour ${s.length} couple(s) trouvé(s) seulement), augmentez la taille du pavage !`);return}u.push(D),u.push(F),s=oe(s);const S=[],j=[];for(let e=0;e<t.nb_polygones;e++)S.push(O(V(e+1),t.barycentres[e].x,t.barycentres[e].y+.5,"milieu","black",1,0,!0)),j.push(O(V(e+1),t.barycentres[e].x,t.barycentres[e].y+.5,"milieu","gray",1,0,!0));if(this.sup2)for(let e=0;e<t.nb_polygones;e++)u.push(t.tracesCentres[e]);for(let e=0;e<t.nb_polygones;e++)u.push(t.polygones[e]);p=z(a,u,S),p+=`Soit la rotation de centre $A$ et d'angle ${x}$^\\circ$ dans le sens `,b===1?p+="contraire des aiguilles d'une montre.<br>":p+="des aiguilles d'une montre.<br>",m+=`Soit la rotation de centre $A$ et d'angle ${x}$^\\circ$ dans le sens `,b===1?m+="contraire des aiguilles d'une montre. <br>":m+="des aiguilles d'une montre. <br>";for(let e=0;e<this.nbQuestions;e++)w=`Quelle est l'image de la figure $${s[e][0]}$ ?`+ce(this,e,"")+"<br>",p+=w,m+=`L'image de la figure $${s[e][0]}$ est la figure $${re(s[e][1])}$.<br>`,he(this,e,s[e][1]),this.correctionDetaillee&&(y=this.nbQuestions*3,v=t.barycentres[s[e][0]-1],C=t.barycentres[s[e][1]-1],l=t.polygones[s[e][0]-1],l.color=P(d(e)),l.couleurDeRemplissage=P(d(e)),l.opaciteDeRemplissage=.5,l.epaisseur=2,h=t.polygones[s[e][1]-1],h.color=P(d(e)),h.couleurDeRemplissage=P(d(e)),h.opaciteDeRemplissage=.5,h.epaisseur=2,T=ue(l,o,x*b,`begin="${e*3}s;${e*3+y}s;${e*3+y*2}s" end="${e*3+2}s;${e*3+y+2}s;${e*3+y*2+2}s" dur="2s" repeatCount="indefinite" repeatDur="${9*this.nbQuestions}s" id="poly-${e}-anim"`),T.color=P(d(e)),T.epaisseur=2,q.push(T),q.push(G(v,C),U(o,v,d(e)),U(o,C,J(e)),ne(v,o,C,.8,"",J(e),1,1,"blue",.2,!0),l,h));this.correctionDetaillee&&(m+=z(a,u,q,j)),this.listeQuestions.push(p),this.listeCorrections.push(m),ae(this)}}export{Ue as amcReady,Be as amcType,Oe as dateDeModifImportante,Ge as dateDePublication,We as default,Ve as interactifReady,ze as interactifType,Ke as refs,je as titre,Je as uuid};
