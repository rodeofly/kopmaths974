const h=["nombres","alpha","Alpha","roman","Roman"],k=new Map([["puces","$\\bullet$"],["carres","\\tiny$\\blacksquare$"],["qcm","$\\square$"],["fleches","\\tiny$\\blacktriangleright$"],["nombres","\\arabic*."],["alpha","\\alph*."],["Alpha","\\Alph*."],["roman","\\roman*."],["Roman","\\Roman*."]]);function q(n){return n.description!==void 0}function A(n,o="",s=1,y=0){const i=h.includes(n.style);let c=n.style==="none"?"":"	\\item ",p=n.style==="none"?"\\par":"";const a=`
`;k.get(n.style);const T=s>1?` start='${s}'`:"";let g="\\begin{enumerate}",d="\\begin{itemize}",m="\\end{enumerate}",u="\\end{itemize}",l,r="";{c=n.style==="none"?"<li>":"	<li>",p="</li>";let e=n.classOptions??"";e!==""&&(e=" "+e),g=`<ol class='${n.style}${e}'${T}>`,d=`<ul class='${n.style}${e}'>`,m="</ol>",u="</ul>"}const b=i?g:d,f=i?m:u;l=a+o+b;const L=o+f+a;l+="",l+=a,r+=l;function O(e,t=o+c,$=p+a){return t+e+$}for(const e of n.items){let t="";typeof e=="string"?t=e:q(e)?t=`<span>${e.description}</span>`+e.text:t=(e.introduction??"")+A(e,o+"	",1,y++),r+=O(t)}return r+=L,r}export{A as c};
