import{E as S,K as P}from"./Exercice-DtXhjCyI.js";import{s as B}from"./gestionInteractif-DujZpSu8.js";import{a as w}from"./questionMathLive-DdRvWqlN.js";import{c3 as G,af as J,g as K,r as $,S as s,c as C,t as e,l as O}from"./embellissements-BYV7mIDn.js";import"decimal.js";import"mathjs";import{c as U}from"./Personne-DRrbQFAY.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"crypto-js";import"seedrandom";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"earcut";import"roughjs";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";const fe=!0,he="mathLive",ge=!0,ve="AMCHybride",xe="Résoudre des problèmes de conjonction de phénomènes",je="10/10/2022",qe="b16c6",ke={"fr-fr":["4A12"],"fr-ch":["9NO4-22"]};class Ae extends S{constructor(){super(),this.nbQuestions=1,this.spacing=1.5,this.spacingCorr=1.5,this.sup=1,this.besoinFormulaireNumerique=["Difficulté",3,`1 : 1 facteur commun, 1 facteur spécifique
2 : 2 facteurs communs, 1 facteur spécifique
3 : 2 facteurs communs, 2 facteurs spécifiques`],this.besoinFormulaire2Texte=["Type d'énoncé",`Nombres séparés par des tirets :
1 : Guirlandes
2 : Voiture
3 : Fusée
4 : Restau - ciné
5 : Engrenages
6 : Mélange`],this.sup2=6,this.correctionDetailleeDisponible=!0,this.interactif=!1}nouvelleVersion(){const Q=G(12),t=J(Q,this.nbQuestions*5),E=6,R=K({saisie:this.sup2,min:1,max:E-1,melange:E,nbQuestions:this.nbQuestions,defaut:1}).map(Number),T=["guirlande","voiture","fusée","restau-ciné","engrenages"],D=[];for(const r of R)D.push(T[r-1]);for(let r=0,m,d,i,l,c,o,a,u,p,b,f,N=0;r<this.nbQuestions&&N<50;){switch(i=[],this.sup){case 1:i=[$(0,2)],l=[$(0,4,i)],c=[$(0,4,i.concat(l))],o=t[i[0]+r*5],a=t[l[0]+r*5],u=t[c[0]+r*5];break;case 2:i=[$(0,2),$(0,2)],i=i.sort(),l=[$(3,4,i)],c=[$(3,4,i.concat(l))],o=t[i[0]+r*5]*t[i[1]+r*5],a=t[l[0]+r*5],u=t[c[0]+r*5];break;case 3:i=[$(0,2),$(0,2)],i=i.sort((F,M)=>F-M),l=[$(0,2),$(3,4,i)],c=[$(0,2,l),$(3,4,i.concat(l))],o=t[i[0]+r*5]*t[i[1]+r*5],a=t[l[0]+r*5]*t[l[1]+r*5],u=t[c[0]+r*5]*t[c[1]+r*5];break;default:i=[$(0,2)],l=[$(0,4,i)],c=[$(0,4,i.concat(l))],o=t[i[0]+r*5],a=t[l[0]+r*5],u=t[c[0]+r*5];break}let h,v,x,j,q,k,A,y;const g=$(1,3),n=U();switch(D[r]){case"guirlande":if(m=`Une guirlande électrique est constituée de lumières rouges et vertes.<br>
          Les lumières rouges s'allument toutes les ${s(o*a)} secondes et les vertes toutes les ${s(o*u)} secondes.<br>
          À un instant donné, on voit les lumières rouges et vertes allumées en même temps.<br>`,this.interactif||C.isAmc)switch(g){case 1:m+="Au bout de combien de secondes ce phénomène se reproduira-t-il la prochaine fois ?";break;case 2:m+="D'ici la prochaine fois que ce phénomène se reproduira, les lumières rouges s'allumeront combien de fois ?";break;case 3:m+="D'ici la prochaine fois que ce phénomène se reproduira, les lumières vertes s'allumeront combien de fois ?";break}else m+=`Au bout de combien de secondes ce phénomène se reproduira-t-il la prochaine fois ?<br>
            Les lumières rouges et vertes se seront allumées combien de fois ?`;h="secondes",v="les lumières rouges",x="les lumières vertes",j="Les lumières rouges seront allumées",q="les lumières vertes",k="Les lumières rouges et vertes seront allumées en même temps",A="le temps nécessaire pour qu'elle se rallument la première fois simultanément",y="s'allumeront";break;case"voiture":if(m=`Pour l'entretien de sa voiture, ${n.prenom} veut se tenir à un calendrier très précis :<br>
          ${n.pronom} nettoie l'intérieur de sa voiture tous les ${s(o*a)} jours et l'extérieur tous les ${s(o*u)} jours.<br>
          Aujourd'hui, ${n.pronom} a fait les deux.<br>`,this.interactif||C.isAmc)switch(g){case 1:m+=`Au bout de combien de jours fera-t-${n.pronom} les deux dans la même journée ?`;break;case 2:m+=`D'ici la prochaine fois qu'${n.pronom} fera les deux dans la même journée, combien de fois nettoiera-t-${n.pronom} l'intérieur de sa voiture ?`;break;case 3:m+=`D'ici la prochaine fois qu'${n.pronom} fera les deux dans la même journée, combien de fois nettoiera-t-${n.pronom} l'intérieur de sa voiture ?`;break}else m+=`Au bout de combien de jours fera-t-${n.pronom} les deux dans la même journée ?<br>
            Combien de fois aura-t-${n.pronom} nettoyé l'intérieur et l'extérieur de sa voiture ?`;h="jours",v="le nettoyage intérieur",x="le nettoyage extérieur",j="L'intérieur sera nettoyé",q="l'extérieur",k="Les nettoyages intérieur et extérieur auront lieu le même jour",A="le nombre de jours avant un nettoyage intérieur et extérieur",y="se fera";break;case"fusée":if(m=`Pour l'entretien de sa fusée, ${n.prenom} doit se tenir à un calendrier très précis :<br>
          ${n.pronom} remplace la coiffe tous les ${s(o*a)} jours et les boosters tous les ${s(o*u)} jours.<br>
          Aujourd'hui, ${n.pronom} a fait les deux.<br>`,this.interactif||C.isAmc)switch(g){case 1:m+=`Au bout de combien de jours fera-t-${n.pronom} les deux dans la même journée ?`;break;case 2:m+=`D'ici la prochaine fois qu'${n.pronom} fera les deux dans la même journée, combien de fois remplacera-t-${n.pronom} la coiffe de sa fusée ?`;break;case 3:m+=`D'ici la prochaine fois qu'${n.pronom} fera les deux dans la même journée, combien de fois remplacera-t-${n.pronom} les boosters de sa fusée ?`;break}else m+=`Au bout de combien de jours fera-t-${n.pronom} les deux dans la même journée ?<br>
            Combien de fois aura-t-${n.pronom} remplacé la coiffe et les boosters de sa fusée ?`;h="jours",v="le remplacement de la coiffe",x="le remplacement des boosters",j="La coiffe sera remplacée",q="les boosters",k="Le remplacement de la coiffe et des boosters auront lieu le même jour",A="le nombre de jours avant le remplacement de la coiffe et des boosters",y="se fera";break;case"restau-ciné":if(m=`Pour sa résolution de cette année, ${n.prenom} a décidé de ne pas abuser des bonnes choses :<br>
          ${n.pronom} s'accorde le droit d'aller au restaurant tous les ${s(o*a)} jours et d'aller au cinéma tous les ${s(o*u)} jours.<br>
          Aujourd'hui, ${n.pronom} s'est fait un « restau - ciné ».<br>`,this.interactif||C.isAmc)switch(g){case 1:m+=`Au bout de combien de jours se fera-t-${n.pronom} un autre restau - ciné ?`;break;case 2:m+=`D'ici la prochaine fois qu'${n.pronom} fera un autre restau - ciné, combien de fois sera-t-${n.pronom} allé${n.pronom==="il"?"":"e"} au restaurant ?`;break;case 3:m+=`D'ici la prochaine fois qu'${n.pronom} fera un autre restau - ciné, combien de fois sera-t-${n.pronom} allé${n.pronom==="il"?"":"e"} au cinéma ?`;break}else m+=`Au bout de combien de jours fera-t-${n.pronom} un autre restau - ciné ?<br>
            Combien de fois sera-t-${n.pronom} allé${n.pronom==="il"?"":"e"} au restaurant et au cinéma ?`;h="jours",v="aller au restaurant",x="aller au cinéma",j=`${n.Pronom} va au restaurant`,q="au cinéma",k=`${n.pronom} se fera à nouveau un « restau - ciné »`,A="le nombre de jours avant le prochain « restau - ciné »";break;case"engrenages":default:if(m=`Dans un engrenage, une première roue possède ${s(o*a)} dents et une seconde en possède ${s(o*u)}.
          Elles tournent jusqu'à revenir (pour la première fois) en position initiale.<br>`,this.interactif||C.isAmc)switch(g){case 1:m+="De combien de dents chaque roue aura tourné ?";break;case 2:m+="Combien de tours aura effectué la première roue ?";break;case 3:m+="Combien de tours aura effectué la deuxième roue ?";break}else m+=`De combien de dents chaque roue aura tourné ?<br>
            Combien de tours aura effectué chaque roue ?`;h="dents",v="la première roue",x="la deuxième roue",j="La première fera un tour",q="la seconde",k="Elles reviendront en position initiale",A="le nombre de dents avant de revenir pour la première fois en position initiale";break}switch(this.sup){case 1:p=e(s(o),"blue"),b=e(s(a),"red"),f=e(s(u),"green");break;case 2:p=`${e(s(t[i[0]+r*5]),"blue")} $\\times$ ${e(s(t[i[1]+r*5]),"blue")}`,b=e(s(a),"red"),f=e(s(u),"green");break;case 3:p=`${e(s(t[i[0]+r*5]),"blue")} $\\times$ ${e(s(t[i[1]+r*5]),"blue")}`,b=`${e(s(t[l[0]+r*5]),"red")} $\\times$ ${e(s(t[l[1]+r*5]),"red")}`,f=`${e(s(t[c[0]]),"green")} $\\times$ ${e(s(t[c[1]+r*5]),"green")}`;break;default:p=e(s(o),"blue"),b=e(s(a),"red"),f=e(s(u),"green");break}d="",this.correctionDetaillee&&(d+=`${j} à chaque multiple de ${e(s(o*a),"red")} ${h}, ${q} à chaque multiple de ${e(s(o*u),"green")} ${h}.<br>
        ${k} à chaque multiple commun de ${e(s(o*a),"red")} et de ${e(s(o*u),"green")}.<br>
        Pour trouver ${A}, on cherche le plus petit multiple qu'ils ont en commun.<br>
        Un moyen d'y arriver est de décomposer les nombres de ${h} en produits de facteurs premiers et d'identifier les différences entre les décompositions :<br>`),this.sup===3?(l[0]>=i[1]?d+=`${e(s(o*a),"red")} = ${e(t[i[0]+r*5],"blue")} $\\times$ ${e(t[i[1]+r*5],"blue")} $\\times$ ${e(t[l[0]+r*5],"red")} $\\times$ ${e(t[l[1]+r*5],"red")} <br>`:l[0]>=i[0]&&l[0]<i[1]?d+=`${e(s(o*a),"red")} = ${e(t[i[0]+r*5],"blue")} $\\times$ ${e(t[l[0]+r*5],"red")} $\\times$ ${e(t[i[1]+r*5],"blue")} $\\times$ ${e(t[l[1]+r*5],"red")} <br>`:l[0]<i[0]&&(d+=`${e(s(o*a),"red")} = ${e(t[l[0]+r*5],"red")} $\\times$ ${e(t[i[0]+r*5],"blue")} $\\times$ ${e(t[i[1]+r*5],"blue")} $\\times$ ${e(t[l[1]+r*5],"red")} <br>`),c[0]>=i[1]?d+=`${e(s(o*u),"green")} = ${e(t[i[0]+r*5],"blue")} $\\times$ ${e(t[i[1]+r*5],"blue")} $\\times$ ${e(t[c[0]],"green")} $\\times$ ${e(t[c[1]+r*5],"green")} <br>`:c[0]>=i[0]&&c[0]<i[1]?d+=`${e(s(o*u),"green")} = ${e(t[i[0]+r*5],"blue")} $\\times$ ${e(t[c[0]],"green")} $\\times$ ${e(t[i[1]+r*5],"blue")} $\\times$ ${e(t[c[1]+r*5],"green")} <br>`:c[0]<i[0]&&(d+=`${e(s(o*u),"green")} = ${e(t[c[0]],"green")} $\\times$ ${e(t[i[0]+r*5],"blue")} $\\times$ ${e(t[i[1]+r*5],"blue")} $\\times$ ${e(t[c[1]+r*5],"green")} <br>`)):d+=`${e(s(o*a),"red")} = ${p} $\\times$ ${b} <br>
        ${e(s(o*u),"green")} = ${p} $\\times$ ${f}<br>`,this.correctionDetaillee&&(d+="On multiplie les facteurs communs aux deux décompositions avec les facteurs spécifiques à chaque décomposition :<br>"),d+=`${p} $\\times$ ${b} $\\times$ ${f} = ${s(o*a*u)}<br>
      Ce phénomène se produira à nouveau au bout de ${s(o*a*u)} ${h}, `,D[r]==="restau-ciné"?d+=`lorsqu'${n.pronom} ${e("ira au restaurant","red")} pour la ${e(s(u),"green")}ème fois et qu'${n.pronom} ${e("ira au cinéma","green")} pour la ${e(s(a),"red")}ème fois.<br>`:D[r]==="engrenages"?d+=`lorsque ${e("la première roue","red")} aura fait ${e(s(u),"green")} tours et que ${e("la deuxième roue","green")} aura fait ${e(s(a),"red")} tours.<br>`:d+=`lorsque ${e(String(v),"red")} ${y} pour la ${e(s(u),"red")}$^{ème}$ fois et que ${e(String(x),"green")} ${y} pour la ${e(s(a),"green")}$^{ème}$ fois.<br>`,this.correctionDetaillee&&(d+=`<br>${s(o*a*u)} est bien un multiple de ${e(s(o*a),"red")} car :
         ${p} $\\times$ ${b} $\\times$ ${f} =
         (${p} $\\times$ ${b}) $\\times$ ${f} =
         ${e(s(o*a),"red")} $\\times$ ${e(s(u),"green")}.<br>
        ${s(o*a*u)} est bien un multiple de ${e(s(o*u),"green")} car :
         ${p} $\\times$ ${b} $\\times$ ${f} =
         ${p} $\\times$ ${f} $\\times$ ${b} =
         (${p} $\\times$ ${f}) $\\times$ ${b} =
         ${e(s(o*u),"green")} $\\times$ ${e(s(a),"red")}.<br>`);let L=o*a*u;switch(g){case 2:L=u;break;case 3:L=a;break}B(this,r,L),this.interactif&&(g>1?D[r]==="engrenages"?m+=w(this,r,P.clavierNumbers,{texteApres:" tours"}):m+=w(this,r,P.clavierNumbers,{texteApres:" fois"}):m+=w(this,r,P.clavierNumbers,{texteApres:" "+h})),this.questionJamaisPosee(r,o,a*u)&&(this.listeQuestions[r]=m,this.listeCorrections[r]=d,r++),N++}O(this)}}export{ge as amcReady,ve as amcType,je as dateDeModifImportante,Ae as default,fe as interactifReady,he as interactifType,ke as refs,xe as titre,qe as uuid};
