import{E,K as f}from"./Exercice-DtXhjCyI.js";import{h as C}from"./gestionInteractif-DujZpSu8.js";import{p as j}from"./qcm-BQR8Ns0N.js";import{a as P}from"./questionMathLive-DdRvWqlN.js";import{g as T,a as I,r as m,aq as p,e as r,m as h,t as q,l as Q}from"./embellissements-BYV7mIDn.js";import{p as k}from"./Personne-DRrbQFAY.js";import{O as y}from"./operations-BgSFQgsL.js";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"katex";import"mathjs";import"crypto-js";import"seedrandom";import"decimal.js";import"./comparisonFunctions-B45ZZ3C7.js";import"./compute-engine.min.umd-BwAhpA7x.js";import"./Hms-u2AUyU1C.js";import"./ListeDeroulanteElement-CXmzV-cr.js";import"./tableauMathlive-xx-nDjq0.js";import"./canStore-DaSrd7sp.js";import"./generalStore-C3E9FHtR.js";import"earcut";import"roughjs";import"./sizeTools-DfTC1Dgv.js";import"./time-DMC-jnVL.js";import"./AjouteTableauMathlive-Bz24QHd3.js";import"./PEA11-1-Wz5TmaBS.js";const le="Résoudre des problèmes utilisant la division euclidienne",$e="11/12/2023",ue="16/04/2024",pe=!0,de="mathLive",ce="88021",be={"fr-fr":["6N2K"],"fr-2016":["6C12-2"],"fr-ch":["9NO16-1"]};class me extends E{constructor(){super(),this.besoinFormulaireTexte=["Choix des questions",`Nombres séparés par des tirets :
1 : Bouquets de fleurs
2 : Boîtes d'oeufs
3 : Trésor de pirates
4 : Jour de semaine
5 : Séjour au ski
6 : Places de cinéma
7 : Collier de perles
8 : Timbres dans un album
9 : Pirates et capitaine
10 : Places assises
11 : Mélange`],this.nbQuestions=4,this.sup=11,this.spacing=1.5,this.spacingCorr=1.5}nouvelleVersion(){this.consigne=this.nbQuestions>1?"Résoudre les problèmes suivants.":"Résoudre le problème suivant.";const N=T({min:1,max:10,defaut:1,nbQuestions:this.nbQuestions,melange:11,saisie:this.sup});let a=0,x=0;for(let S=0,t,i,M=0;S<this.nbQuestions&&M<50;){x=a;let o,v,$,c;switch(N[S]){case 1:o=I([7,8,9]),v=m(25,36),$=m(2,6),c=o*v+$,t=`Un paysagiste dispose de ${c} fleurs et souhaite réaliser des bouquets avec ${o}.`,t+=`<br> ${p(0)} Combien de bouquets peut-il confectionner ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)} Combien manque-t-il de fleurs pour en réaliser un de plus ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de ${c} par ${o}. <br>`,i+=y({operande1:c,operande2:o,type:"divisionE"})+`$${h(`${r(c)}=(${o}\\times${r(v)})+ ${r($)}`,"blue")}$`,i+=`<br>Le paysagiste peut faire ${q(String(v))} bouquets et il lui reste ${q(String($),"blue")} fleurs.`,i+=`<br>${p(1)} Il reste ${$} fleurs et il en faut ${o} pour un bouquet.`,i+=`<br>$${o} - ${$} = ${o-$}$`,i+=`<br> Il manque donc ${q(String(o-$))} fleurs pour faire un bouquet de plus.`,C(this,a,{reponse:{value:String(v)}}),C(this,a+1,{reponse:{value:String(o-$)}}),a+=2;break;case 2:o=I([6,12]),v=m(25,36),$=m(2,o-1),c=o*v+$,t=`Un fermier ramasse ${c} oeufs et souhaite les ranger dans des boîtes de ${o}.`,t+=`<br> ${p(0)} Combien de boîtes remplies entièrement faudra-il ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)} Combien manque-t-il d'oeufs pour en remplir une de plus ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de ${c} par ${o}. <br>`,i+=y({operande1:c,operande2:o,type:"divisionE"})+`$${h(`${r(c)}=(${o}\\times${r(v)})+ ${r($)}`,"blue")}$`,i+=`<br>Il lui faudra ${q(String(v))} boîtes et il restera ${q(String($),"blue")} oeufs.`,i+=`<br>${p(1)} Il reste ${$} oeufs et il en faut ${o} pour une boîte.`,i+=`<br>$${o} - ${$} = ${o-$}$`,i+=`<br>Il lui manquera ${q(String(o-$))} oeufs pour en remplir une de plus.`,C(this,a,{reponse:{value:String(v)}}),C(this,a+1,{reponse:{value:String(o-$)}}),a+=2;break;case 3:o=I([7,12],[10]),v=m(101,500),$=m(2,o-1),c=o*v+$,t=`$${o}$ pirates veulent se partager équitablement le trésor comprenant $${r(c)}$ pièces d'or.`,t+=` <br>${p(0)} Combien de pièces chaque pirate aura-t-il ?`,t+=P(this,a,f.clavierNumbers),t+=` <br>${p(1)} Combien restera-t-il de pièces ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de $${r(c)}$ par $${o}$. <br>`,i+=y({operande1:c,operande2:o,type:"divisionE"})+`$${h(`${r(c)}=(${o}\\times${r(v)})+ ${r($)}`,"blue")}$`,i+=`<br>Chaque pirate aura ${q(String(v))} pièces.`,i+=`<br>${p(1)}  Il restera ${q(String($))} pièces d'or.`,C(this,a,{reponse:{value:v}}),C(this,a+1,{reponse:{value:$}}),a+=2;break;case 4:{o=7,v=m(11,19),$=m(2,o-1),c=o*v+$;const e=["lundi","mardi","mercredi","jeudi","vendredi","samedi","dimanche"],s=m(0,6);t=`Aujourd'hui, nous sommes ${e[s]}. Dans ${c} jours, quel jour de la semaine serons-nous ?`,this.autoCorrection[a]={};const n=this.autoCorrection[a];n.propositions=[];for(let l=0;l<7;l++)n.propositions[l]={texte:e[l],statut:(s+$)%o===l};this.autoCorrection[a].options={ordered:!0},t+="<br>"+j(this,a).texte,i=`Posons la division euclidienne de ${c} par ${o}. <br>`,i+=y({operande1:c,operande2:o,type:"divisionE"})+`$${h(`${r(c)}=(${o}\\times${r(v)})+ ${r($)}`,"blue")}$`,i+=`<br>Il se sera écoulé ${q(String(v),"blue")} semaines complètes et ${q(String($),"blue")} jours.`,i+=`<br>Donc nous serons ${$} jours de plus que  ${e[s]}, soit ${q(e[(s+$)%o])}.`,a++;break}case 5:{const e=m(35,39),s=m(25,30),n=m(5,12),l=m(3,5),b=s*n*l,u=e*n*l;o=l,c=b+u,t=`${l} amis partent ${n} jours au ski. Ils dépensent $${r(b)}$ € d'hôtels et $${r(u)}$ € pour les remontées mécaniques.`,t+=`<br>${p(0)} Quel est le prix total depensé ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)} Quel est le prix dépensé par personne ?`,t+=P(this,a+1,f.clavierNumbers),i=`Effectuons l'addition de ${e} et ${s}. <br>`,i+=y({operande1:b,operande2:u,type:"addition"}),i+=`<br>Ces ${l} amis ont dépensé au total $${h(r(b+u))}$ €.<br>`,i+=`<br>${p(1)} Posons la division euclidienne de $${r(b+u)}$ par $${l}$. <br>`,i+=y({operande1:b+u,operande2:l,type:"divisionE"})+`$${h(`${r(b+u)}=${l}\\times${r((s+e)*n)}`,"blue")}$`,i+=`<br>Chaque personne a dépensé  $${h(r((s+e)*n))}$ €.`,C(this,a,{reponse:{value:b+u}}),C(this,a+1,{reponse:{value:(s+e)*n}}),a+=2;break}case 6:{const e=m(50,80),s=m(2,3),n=m(3,4),l=m(3,4);o=n*l+s,c=e*s+n*l*e,t=`Dans un cinéma, il y a ${s+n} salles dont ${n} grandes salles et ${s} petites salles. Il y a ${l} fois moins de places assises dans les petites salles que les grandes salles. Au total, dans ce cinéma, il y a $${r(e*s+n*l*e)}$ places`,t+=`<br>${p(0)} Quel est le nombre de places dans une petite salle ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)} Quel est le nombre de places dans une grande salle ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Puisqu'il y a ${l} fois moins de places assises dans les petites salles que les grandes salles, alors $1$ grande salle correspond à $${l}$ petites salles. <br>`,i+=`Et ainsi, ${n} grandes salles correspondent à ${n*l} petites salles car $${n} \\times ${l} = ${n*l}$ .<br>`,i+=`Donc, c'est comme si le cinéma contenait $${n*l}$ petites salles + $${s}$ petites salles, soit $${n*l+s}$ petites salles.<br>`,i+=`Posons la division euclidienne de $${r(e*s+n*l*e)}$ par $${n*l+s}$. <br>`,i+=y({operande1:e*s+n*l*e,operande2:n*l+s,type:"divisionE"})+`$${h(`${r(e*s+n*l*e)}=${n*l+s}\\times${r(e)}`,"blue")}$`,i+=`<br>Il y a ${q(String(e))} places dans une petite salle.`,i+=`<br>${p(1)} $${e} \\times ${l} = ${e*l}$ places`,i+=`<br>Il y a ${q(String(e*l))} places dans une grande salle.`,C(this,a,{reponse:{value:e}}),C(this,a+1,{reponse:{value:e*l}}),a+=2;break}case 7:{const e=m(4,9),s=m(4,9,[e]),n=m(22,38),l=I([!1,!0])?[0,m(10,25)]:[m(10,25),0],b=e*n+l[0],u=s*n+l[1],d=Math.floor(u/s),g=Math.floor(b/e);o=n,c=b,t=`Un bijoutier fabrique des colliers avec des perles. Il décide de mettre ${e} perles jaunes et ${s} perles rouges par collier. Il possède ${u} perles rouges et ${b} perles jaunes.`,t+=`<br>${p(0)} Combien pourra-t-il fabriquer de colliers ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)} Combien lui restera-t-il de perles jaunes ?`,t+=P(this,a+1,f.clavierNumbers),t+=`<br> ${p(2)} Combien lui restera-t-il de perles rouges ?`,t+=P(this,a+2,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de $${r(b)}$ par $${e}$. <br>`,i+=y({operande1:b,operande2:e,type:"divisionE"})+`$${h(`${r(b)}=${b-e*g===0?`${e}\\times${r(g)}`:`(${e}\\times${r(g)})+ ${b-e*g}`}`,"blue")}$`,i+=`<br>Il peut faire $${h(r(g),"blue")}$ colliers avec les perles jaunes.`,i+=`<br>Posons la division euclidienne de $${r(u)}$ par $${s}$. <br>`,i+=y({operande1:u,operande2:s,type:"divisionE"})+`$${h(`${r(u)}=${u-s*d===0?`${s}\\times${r(d)}`:`(${s}\\times${r(d)})+ ${u-s*d}`}`,"blue")}$`,i+=`<br>Il peut faire $${h(r(d),"blue")}$ colliers avec les perles rouges.`,i+=`<br>Finalement, en prenant en compte les deux couleurs, et puisque $${r(Math.min(d,g))}$ < $${r(Math.max(d,g))}$, le bijoutier ne pourra faire que $${h(r(Math.min(d,g)))}$ colliers.`,i+=`<br>${p(1)} $${b} - (${e} \\times ${Math.min(d,g)})=${h(String(b-e*Math.min(d,g)))}$`,i+=b-e*Math.min(d,g)===0?"<br>Il ne restera aucune perle jaune.":`<br>Il restera $${h(String(b-e*Math.min(d,g)))}$  perles jaunes.`,i+=`<br>${p(2)} $${u} - (${s} \\times ${Math.min(d,g)})=${h(String(u-s*Math.min(d,g)))}$`,i+=u-s*Math.min(d,g)===0?"<br>Il ne restera aucune perle rouge.":`<br>Il restera $${h(String(u-s*Math.min(d,g)))}$  perles rouges.`,C(this,a,{reponse:{value:Math.min(d,g)}}),C(this,a+1,{reponse:{value:b-e*Math.min(d,g)}}),C(this,a+2,{reponse:{value:u-s*Math.min(d,g)}}),a+=3;break}case 8:{const e=m(8,15),s=m(22,38);$=m(2,e-1);const n=e*s+$;o=e,c=n,t=`Dans sa collection, ${k()} possède ${n} timbres et souhaite les ranger dans un album qui peut contenir ${e} timbres par page.`,t+=`<br>${p(0)}  De combien de pages aura-t-il besoin pour ranger tous ses timbres ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)}  Combien de timbres y aura-t-il sur la dernière page ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de $${r(n)}$ par $${e}$. <br>`,i+=y({operande1:n,operande2:e,type:"divisionE"})+`$${h(`${r(n)}=(${e}\\times${r(s)})${n-e*s===0?"":`+ ${n-e*s}`}`,"blue")}$`,i+=`<br>Il y aura $${h(r(s),"blue")}$ pages remplies et une page avec $${h(r($),"blue")}$ timbres. Donc au total, il faudra $${h(r(s+1))}$ pages.`,i+=`<br>${p(1)} Comme l'indique la division euclidienne ci-dessus, il y aura $${h(r($))}$ timbres sur la dernière page.`,C(this,a,{reponse:{value:s+1}}),C(this,a+1,{reponse:{value:$}}),a+=2;break}case 9:{const e=m(12,18),s=m(5,e-5);$=m(e-4,e-1),o=e,c=e*s+$,t=`Une bande de ${e} pirates et leur capitaine doivent se partager un trésor de ${c} pièces d'or. Le capitaine dit à ses hommes : « Vous avez bien travaillé, partagez-vous le trésor, je me contenterai
          du reste. » <br> Le capitaine est-il vraiment généreux ?`,t+=`<br>${p(0)}  Combien de pièces aura chaque pirate ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)}  Combien de pièces aura le capitaine ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de $${r(c)}$ par $${o}$. <br>`,i+=y({operande1:c,operande2:o,type:"divisionE"})+`$${h(`${r(c)}=(${o}\\times${r(s)}) +  ${$}`,"blue")}$`,i+=`<br>Chaque pirate aura $${h(r(s))}$ pièces.`,i+=`<br>${p(1)} Comme l'indique la division euclidienne ci-dessus, le capitaine aura $${h(r($))}$ pièces et il aura le plus de pièces.`,C(this,a,{reponse:{value:s}}),C(this,a+1,{reponse:{value:$}}),a+=2;break}case 10:default:{let e,s,n,l,b,u,d;do e=I([8,9,12,15]),s=I([8,9,12,15],[e]),n=m(100,200),l=Math.floor(n/e),b=Math.floor(n/s),u=n-l*e,d=n-b*s;while(u<2||d<2||u===e-1||d===s-1||s-d===e-u);o=l,c=n,t=`Pour un spectacle, les organisateurs doivent accueillir ${n} personnes. Ils hésitent sur la disposition de la salle : soit mettre ${e} places par rangée, soit  ${s} places par rangée. Ils décident de choisir la configuration où il y aura le moins de places vides.`,t+=`<br>${p(0)}  Combien de places vont-ils choisir par rangée ?`,t+=P(this,a,f.clavierNumbers),t+=`<br> ${p(1)}  Combien de rangées vont-ils prévoir  ?`,t+=P(this,a+1,f.clavierNumbers),i=`${p(0)} Posons la division euclidienne de $${r(n)}$ par $${e}$. <br>`,i+=y({operande1:n,operande2:e,type:"divisionE"})+`$${h(`${r(n)}=(${e}\\times${r(l)}) +  ${u}`,"blue")}$`,i+=`<br> Avec ${e} places par rangée, il y aura ${l} rangées remplies et une dernière avec ${u} places occupées et ${q(String(e-u),"blue")} places libres.`,i+=`<br> <br> Posons la division euclidienne de $${r(n)}$ par $${s}$. <br>`,i+=y({operande1:n,operande2:s,type:"divisionE"})+`$${h(`${r(n)}=(${s}\\times${r(b)}) +  ${d}`,"blue")}$`,i+=`<br> Avec ${s} places par rangée, il y aura ${b} rangées remplies et une dernière avec ${d} places occupées et ${q(String(s-d),"blue")} places libres.`,i+=`<br> <br> Comme $${Math.min(s-d,e-u)} < ${Math.max(s-d,e-u)}$,
           alors pour avoir le moins de places libres, les organisateurs vont préférer $${h(String(s-d<e-u?s:e))}$ places par rangée.`,i+=`<br>${p(1)} Comme l'indique la division euclidienne ci-dessus, il y aura ${s-d<e-u?b:l} rangées remplies et $1$ rangée avec ${s-d<e-u?d:u} places occupées, soit $${h(String(s-d<e-u?b+1:l+1))}$ rangées au total.`,C(this,a,{reponse:{value:s-d<e-u?s:e}}),C(this,a+1,{reponse:{value:s-d<e-u?b+1:l+1}}),a+=2;break}}this.questionJamaisPosee(S,c,o)?(this.listeQuestions[S]=t,this.listeCorrections[S]=i,S++):a=x,M++}Q(this)}}export{ue as dateDeModifImportante,$e as dateDePublication,me as default,pe as interactifReady,de as interactifType,be as refs,le as titre,ce as uuid};
