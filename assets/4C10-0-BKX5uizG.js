import{af as S,r as f,cy as t,t as l,l as c}from"./embellissements-BYV7mIDn.js";import{R as u}from"./Relatif-Cbr50-hq.js";import{E as m}from"./Exercice-DtXhjCyI.js";import{p as d}from"./qcm-BQR8Ns0N.js";import"mathjs";import"decimal.js";import"katex";import"earcut";import"roughjs";import"./exerciseMethods-CtbYPwln.js";import"./index-BUDQz6-w.js";import"crypto-js";import"seedrandom";const T=!0,M="qcm",N=!0,v="qcmMono",G="Signe d'un produit ou d'un quotient de nombres relatifs",J="450ae",L={"fr-fr":["4C10-0"],"fr-ch":["10NO4-2"]};class O extends m{exo;constructor(){super(),this.nbQuestions=7,this.exo="4C10-0"}nouvelleVersion(){this.consigne=this.nbQuestions===1?"Donner le signe des expressions numériques.":"Donner le signe de l'expression numérique.";let s;if(this.exo==="4C10-1")switch(this.sup){case 1:s=[1];break;case 2:s=[2];break;case 3:s=[3];break;case 4:default:s=[1,2,3];break}else if(this.exo==="4C10-2")switch(this.sup){case 1:s=[4];break;case 2:s=[5];break;case 3:s=[6];break;case 4:s=[7];break;case 5:default:s=[4,5,6,7];break}else s=[1,2,3,4,5,6,7];const g=S(s,this.nbQuestions);for(let r=0,a,i,$,o=0;r<this.nbQuestions&&o<50;){this.autoCorrection[r]={};const n=20,e=new u(f(-1,1,[0])*f(1,n),f(-1,1,[0])*f(1,n),f(-1,1,[0])*f(1,n),f(-1,1,[0])*f(1,n));switch(g[r]){case 1:a=`$ ${t(e.relatifs[0])} \\times ${t(e.relatifs[1])} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]} et $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}.`,i+=`<br> ${e.setRegleSigneProduit(e.relatifs[0],e.relatifs[1])}`,i+=`<br>Donc $ ${t(e.relatifs[0])} \\times ${t(e.relatifs[1])} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1]);break;case 2:a=`$ ${t(e.relatifs[0])} \\times ${t(e.relatifs[1])} \\times ${t(e.relatifs[2])} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]}, $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}`,i+=` et $ ${t(e.relatifs[2])} $ est ${e.getSigneString()[2]}.`,i+=`<br> ${e.setRegleSigneProduit(e.relatifs[0],e.relatifs[1],e.relatifs[2])}`,i+=`<br>Donc $ ${t(e.relatifs[0])} \\times ${t(e.relatifs[1])} \\times ${t(e.relatifs[2])} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2]);break;case 3:a=`$ ${t(e.relatifs[0])} \\times ${t(e.relatifs[1])} \\times ${t(e.relatifs[2])} \\times ${t(e.relatifs[3])} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]}, $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}, `,i+=`$ ${t(e.relatifs[2])} $ est ${e.getSigneString()[2]} et $ ${t(e.relatifs[3])} $ est ${e.getSigneString()[3]}.`,i+=`<br> ${e.setRegleSigneProduit(e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3])}`,i+=`<br>Donc $ ${t(e.relatifs[0])} \\times ${t(e.relatifs[1])} \\times ${t(e.relatifs[2])} \\times ${t(e.relatifs[3])} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3]);break;case 4:a=`$ \\dfrac{${t(e.relatifs[0])}}{${t(e.relatifs[1])}} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]} et $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}.`,i+=`<br> ${e.setRegleSigneQuotient(e.relatifs[0],e.relatifs[1])}`,i+=`<br>Donc $ \\dfrac{${t(e.relatifs[0])}}{${t(e.relatifs[1])}} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1]);break;case 5:a=`$ \\dfrac{${t(e.relatifs[0])}}{${t(e.relatifs[1])} \\times ${t(e.relatifs[2])}} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]}, $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}`,i+=` et $ ${t(e.relatifs[2])} $ est ${e.getSigneString()[2]}.`,i+=`<br> ${e.setRegleSigneQuotient(e.relatifs[0],e.relatifs[1],e.relatifs[2])}`,i+=`<br>Donc $ \\dfrac{${t(e.relatifs[0])}}{${t(e.relatifs[1])} \\times ${t(e.relatifs[2])}} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2]);break;case 6:a=`$ \\dfrac{${t(e.relatifs[0])} \\times ${t(e.relatifs[1])}}{${t(e.relatifs[2])}} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]}, $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}`,i+=` et $ ${t(e.relatifs[2])} $ est ${e.getSigneString()[2]}.`,i+=`<br> ${e.setRegleSigneQuotient(e.relatifs[0],e.relatifs[1],e.relatifs[2])}`,i+=`<br>Donc $ \\dfrac{${t(e.relatifs[0])} \\times ${t(e.relatifs[1])}}{${t(e.relatifs[2])}} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2]);break;case 7:default:a=`$ \\dfrac{${t(e.relatifs[0])} \\times ${t(e.relatifs[1])}}{${t(e.relatifs[2])} \\times ${t(e.relatifs[3])}} $`,i=`$ ${t(e.relatifs[0])} $ est ${e.getSigneString()[0]}, $ ${t(e.relatifs[1])} $ est ${e.getSigneString()[1]}, `,i+=`$ ${t(e.relatifs[2])} $ est ${e.getSigneString()[2]} et $ ${t(e.relatifs[3])} $ est ${e.getSigneString()[3]}.`,i+=`<br> ${e.setRegleSigneQuotient(e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3])}`,i+=`<br>Donc $ \\dfrac{${t(e.relatifs[0])} \\times ${t(e.relatifs[1])}}{${t(e.relatifs[2])} \\times ${t(e.relatifs[3])}} $ est ${l(e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3]))}.`,$=e.getSigneProduitString(e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3]);break}this.autoCorrection[r]={enonce:a,options:{ordered:!0},propositions:[{texte:"négatif",statut:$==="négatif"},{texte:"nul",statut:!1},{texte:"positif",statut:$==="positif"}]},a+="<br>"+d(this,r).texte,this.questionJamaisPosee(r,e.relatifs[0],e.relatifs[1],e.relatifs[2],e.relatifs[3],g[r])&&(this.listeQuestions[r]=a,this.listeCorrections[r]=i,r++),o++}c(this)}}export{N as amcReady,v as amcType,O as default,T as interactifReady,M as interactifType,L as refs,G as titre,J as uuid};
